{"id":"ddc56966a449b47402ac21a2d0e4857c","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.2) (utils/cryptography/MerkleProof.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev These functions deal with verification of Merkle Tree proofs.\n *\n * The tree and the proofs can be generated using our\n * https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n * You will find a quickstart guide in the readme.\n *\n * WARNING: You should avoid using leaf values that are 64 bytes long prior to\n * hashing, or use a hash function other than keccak256 for hashing leaves.\n * This is because the concatenation of a sorted pair of internal nodes in\n * the merkle tree could be reinterpreted as a leaf value.\n * OpenZeppelin's JavaScript library generates merkle trees that are safe\n * against this attack out of the box.\n */\nlibrary MerkleProof {\n    /**\n     * @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n     * defined by `root`. For this, a `proof` must be provided, containing\n     * sibling hashes on the branch from the leaf to the root of the tree. Each\n     * pair of leaves and each pair of pre-images are assumed to be sorted.\n     */\n    function verify(bytes32[] memory proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProof(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Calldata version of {verify}\n     *\n     * _Available since v4.7._\n     */\n    function verifyCalldata(bytes32[] calldata proof, bytes32 root, bytes32 leaf) internal pure returns (bool) {\n        return processProofCalldata(proof, leaf) == root;\n    }\n\n    /**\n     * @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n     * from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n     * hash matches the root of the tree. When processing the proof, the pairs\n     * of leafs & pre-images are assumed to be sorted.\n     *\n     * _Available since v4.4._\n     */\n    function processProof(bytes32[] memory proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Calldata version of {processProof}\n     *\n     * _Available since v4.7._\n     */\n    function processProofCalldata(bytes32[] calldata proof, bytes32 leaf) internal pure returns (bytes32) {\n        bytes32 computedHash = leaf;\n        for (uint256 i = 0; i < proof.length; i++) {\n            computedHash = _hashPair(computedHash, proof[i]);\n        }\n        return computedHash;\n    }\n\n    /**\n     * @dev Returns true if the `leaves` can be simultaneously proven to be a part of a merkle tree defined by\n     * `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function multiProofVerify(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProof(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Calldata version of {multiProofVerify}\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function multiProofVerifyCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32 root,\n        bytes32[] memory leaves\n    ) internal pure returns (bool) {\n        return processMultiProofCalldata(proof, proofFlags, leaves) == root;\n    }\n\n    /**\n     * @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n     * proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n     * leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n     * respectively.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n     * is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n     * tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n     *\n     * _Available since v4.7._\n     */\n    function processMultiProof(\n        bytes32[] memory proof,\n        bool[] memory proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofLen = proof.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        require(leavesLen + proofLen - 1 == totalHashes, \"MerkleProof: invalid multiproof\");\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            require(proofPos == proofLen, \"MerkleProof: invalid multiproof\");\n            unchecked {\n                return hashes[totalHashes - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    /**\n     * @dev Calldata version of {processMultiProof}.\n     *\n     * CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n     *\n     * _Available since v4.7._\n     */\n    function processMultiProofCalldata(\n        bytes32[] calldata proof,\n        bool[] calldata proofFlags,\n        bytes32[] memory leaves\n    ) internal pure returns (bytes32 merkleRoot) {\n        // This function rebuilds the root hash by traversing the tree up from the leaves. The root is rebuilt by\n        // consuming and producing values on a queue. The queue starts with the `leaves` array, then goes onto the\n        // `hashes` array. At the end of the process, the last hash in the `hashes` array should contain the root of\n        // the merkle tree.\n        uint256 leavesLen = leaves.length;\n        uint256 proofLen = proof.length;\n        uint256 totalHashes = proofFlags.length;\n\n        // Check proof validity.\n        require(leavesLen + proofLen - 1 == totalHashes, \"MerkleProof: invalid multiproof\");\n\n        // The xxxPos values are \"pointers\" to the next value to consume in each array. All accesses are done using\n        // `xxx[xxxPos++]`, which return the current value and increment the pointer, thus mimicking a queue's \"pop\".\n        bytes32[] memory hashes = new bytes32[](totalHashes);\n        uint256 leafPos = 0;\n        uint256 hashPos = 0;\n        uint256 proofPos = 0;\n        // At each step, we compute the next hash using two values:\n        // - a value from the \"main queue\". If not all leaves have been consumed, we get the next leaf, otherwise we\n        //   get the next hash.\n        // - depending on the flag, either another value from the \"main queue\" (merging branches) or an element from the\n        //   `proof` array.\n        for (uint256 i = 0; i < totalHashes; i++) {\n            bytes32 a = leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++];\n            bytes32 b = proofFlags[i]\n                ? (leafPos < leavesLen ? leaves[leafPos++] : hashes[hashPos++])\n                : proof[proofPos++];\n            hashes[i] = _hashPair(a, b);\n        }\n\n        if (totalHashes > 0) {\n            require(proofPos == proofLen, \"MerkleProof: invalid multiproof\");\n            unchecked {\n                return hashes[totalHashes - 1];\n            }\n        } else if (leavesLen > 0) {\n            return leaves[0];\n        } else {\n            return proof[0];\n        }\n    }\n\n    function _hashPair(bytes32 a, bytes32 b) private pure returns (bytes32) {\n        return a < b ? _efficientHash(a, b) : _efficientHash(b, a);\n    }\n\n    function _efficientHash(bytes32 a, bytes32 b) private pure returns (bytes32 value) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            mstore(0x00, a)\n            mstore(0x20, b)\n            value := keccak256(0x00, 0x40)\n        }\n    }\n}\n"},"contracts/ProofChainVoting.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\nimport \"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\";\n\ninterface AggregatorV3Interface {\n    function latestRoundData() external view returns (\n        uint80 roundId,\n        int256 answer,\n        uint256 startedAt,\n        uint256 updatedAt,\n        uint80 answeredInRound\n    );\n    function decimals() external view returns (uint8);\n}\n\ninterface IERC20 {\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n    function transfer(address to, uint256 amount) external returns (bool);\n    function balanceOf(address account) external view returns (uint256);\n}\n\n/**\n * @title ProofChainVoting\n * @dev A simplified voting contract with token staking and quadratic voting\n * Features:\n * - Simple direct voting (no commit-reveal)\n * - Multiple token support (ETH, ERC20 tokens)\n * - Quadratic voting based on USD value\n * - Identity verification via Merkle proofs\n * - Configurable voting periods (1 minute to 7 days)\n */\ncontract ProofChainVoting is Ownable, ReentrancyGuard {\n    \n    // ============ ENUMS ============\n    \n    enum VoteOption { REJECT, APPROVE, ABSTAIN }\n    enum TokenType { NONE, ETH, FIL, USDC, USDT, DAI, WBTC, LINK, UNI }\n    \n    // ============ STRUCTS ============\n    \n    struct TokenInfo {\n        address tokenAddress;      // Token contract address (0x0 for ETH)\n        address priceOracle;       // Chainlink price oracle address\n        uint8 decimals;           // Token decimals\n        uint256 bonusMultiplier;  // Bonus multiplier (1000 = 100%)\n        uint256 minStakeAmount;   // Minimum stake amount\n        bool isActive;            // Whether token is active for voting\n    }\n    \n    struct ContentInfo {\n        string ipfsHash;          // IPFS hash of content\n        uint256 submissionTime;   // When content was submitted\n        uint256 votingDeadline;   // When voting ends\n        address creator;          // Content creator\n        bool isActive;            // Whether voting is active\n        bool isFinalized;         // Whether voting is finalized\n        uint256[3] voteDistribution; // [REJECT, APPROVE, ABSTAIN] counts\n        uint256 participantCount; // Total number of voters\n        uint256 totalUSDValue;    // Total USD value staked\n        VoteOption winningOption; // Winning vote option\n    }\n    \n    struct UserVote {\n        bool hasVoted;            // Whether user has voted\n        VoteOption vote;          // User's vote choice\n        uint8 confidence;         // Confidence level (1-10)\n        TokenType tokenType;      // Token used for staking\n        uint256 stakeAmount;      // Amount staked\n        uint256 votingWeight;     // Calculated voting weight\n        uint256 timestamp;        // When vote was cast\n    }\n    \n    // ============ STATE VARIABLES ============\n    \n    bytes32 public merkleRoot;                    // Merkle root for identity verification\n    uint256 public contentCounter;                // Counter for content IDs\n    uint256 public constant MIN_VOTING_PERIOD = 1 minutes;  // Minimum voting period\n    uint256 public constant MAX_VOTING_PERIOD = 7 days;     // Maximum voting period\n    \n    // Mappings\n    mapping(TokenType => TokenInfo) public supportedTokens;\n    mapping(uint256 => ContentInfo) public contents;\n    mapping(uint256 => mapping(address => UserVote)) public userVotes;\n    \n    // ============ EVENTS ============\n    \n    event ContentSubmitted(\n        uint256 indexed contentId,\n        string ipfsHash,\n        uint256 votingDeadline,\n        address indexed creator\n    );\n    \n    event VoteSubmitted(\n        uint256 indexed contentId,\n        address indexed voter,\n        VoteOption vote,\n        uint8 confidence,\n        TokenType tokenType,\n        uint256 stakeAmount,\n        uint256 votingWeight\n    );\n    \n    event VotingFinalized(\n        uint256 indexed contentId,\n        VoteOption winningOption,\n        uint256 totalParticipants,\n        uint256 totalUSDValue\n    );\n    \n    event TokenAdded(\n        TokenType indexed tokenType,\n        address tokenAddress,\n        address priceOracle\n    );\n    \n    // ============ CONSTRUCTOR ============\n    \n    constructor(bytes32 _merkleRoot) {\n        merkleRoot = _merkleRoot;\n        contentCounter = 0;\n    }\n    \n    // ============ CONTENT SUBMISSION ============\n    \n    /**\n     * @dev Submit content for voting\n     * @param ipfsHash IPFS hash of the content\n     * @param votingDuration Duration of voting period in seconds\n     * @return contentId The ID of the submitted content\n     */\n    function submitContent(\n        string calldata ipfsHash,\n        uint256 votingDuration\n    ) external returns (uint256) {\n        require(bytes(ipfsHash).length > 0, \"IPFS hash cannot be empty\");\n        require(\n            votingDuration >= MIN_VOTING_PERIOD && votingDuration <= MAX_VOTING_PERIOD,\n            \"Invalid voting duration\"\n        );\n        \n        contentCounter++;\n        uint256 contentId = contentCounter;\n        uint256 votingDeadline = block.timestamp + votingDuration;\n        \n        contents[contentId] = ContentInfo({\n            ipfsHash: ipfsHash,\n            submissionTime: block.timestamp,\n            votingDeadline: votingDeadline,\n            creator: msg.sender,\n            isActive: true,\n            isFinalized: false,\n            voteDistribution: [uint256(0), uint256(0), uint256(0)],\n            participantCount: 0,\n            totalUSDValue: 0,\n            winningOption: VoteOption.REJECT\n        });\n        \n        emit ContentSubmitted(contentId, ipfsHash, votingDeadline, msg.sender);\n        return contentId;\n    }\n    \n    // ============ VOTING ============\n    \n    /**\n     * @dev Submit a vote on content\n     * @param contentId ID of the content to vote on\n     * @param vote Vote choice (REJECT, APPROVE, ABSTAIN)\n     * @param confidence Confidence level (1-10)\n     * @param tokenType Type of token to stake\n     * @param stakeAmount Amount of tokens to stake\n     * @param merkleProof Merkle proof for identity verification\n     */\n    function submitVote(\n        uint256 contentId,\n        VoteOption vote,\n        uint8 confidence,\n        TokenType tokenType,\n        uint256 stakeAmount,\n        bytes32[] calldata merkleProof\n    ) external payable nonReentrant {\n        ContentInfo storage content = contents[contentId];\n        require(content.isActive, \"Content not found or inactive\");\n        require(block.timestamp <= content.votingDeadline, \"Voting period ended\");\n        require(!userVotes[contentId][msg.sender].hasVoted, \"Already voted\");\n        require(confidence >= 1 && confidence <= 10, \"Invalid confidence level\");\n        require(supportedTokens[tokenType].isActive, \"Token not supported\");\n        require(stakeAmount >= supportedTokens[tokenType].minStakeAmount, \"Stake amount too low\");\n        \n        // Verify identity if merkle proof provided\n        if (merkleProof.length > 0) {\n            require(isVerifiedIdentity(msg.sender, merkleProof), \"Invalid identity proof\");\n        }\n        \n        // Handle token staking\n        if (tokenType == TokenType.ETH) {\n            require(msg.value == stakeAmount, \"Incorrect ETH amount\");\n        } else {\n            require(msg.value == 0, \"ETH not expected for ERC20 tokens\");\n            TokenInfo memory tokenInfo = supportedTokens[tokenType];\n            IERC20(tokenInfo.tokenAddress).transferFrom(msg.sender, address(this), stakeAmount);\n        }\n        \n        // Calculate voting weight\n        uint256 usdValue = convertToUSD(tokenType, stakeAmount);\n        uint256 bonusMultiplier = supportedTokens[tokenType].bonusMultiplier;\n        uint256 votingWeight = calculateVotingWeight(usdValue, confidence, bonusMultiplier);\n        \n        // Record vote\n        userVotes[contentId][msg.sender] = UserVote({\n            hasVoted: true,\n            vote: vote,\n            confidence: confidence,\n            tokenType: tokenType,\n            stakeAmount: stakeAmount,\n            votingWeight: votingWeight,\n            timestamp: block.timestamp\n        });\n        \n        // Update content statistics\n        content.voteDistribution[uint256(vote)] += votingWeight;\n        content.participantCount++;\n        content.totalUSDValue += usdValue;\n        \n        emit VoteSubmitted(contentId, msg.sender, vote, confidence, tokenType, stakeAmount, votingWeight);\n    }\n    \n    // ============ FINALIZATION ============\n    \n    /**\n     * @dev Finalize voting for a content item\n     * @param contentId ID of the content to finalize\n     */\n    function finalizeVoting(uint256 contentId) external {\n        ContentInfo storage content = contents[contentId];\n        require(content.isActive, \"Content not found or inactive\");\n        require(block.timestamp > content.votingDeadline, \"Voting period not ended\");\n        require(!content.isFinalized, \"Already finalized\");\n        \n        // Determine winning option\n        VoteOption winningOption = VoteOption.REJECT;\n        uint256 maxVotes = content.voteDistribution[0]; // REJECT\n        \n        if (content.voteDistribution[1] > maxVotes) { // APPROVE\n            winningOption = VoteOption.APPROVE;\n            maxVotes = content.voteDistribution[1];\n        }\n        \n        if (content.voteDistribution[2] > maxVotes) { // ABSTAIN\n            winningOption = VoteOption.ABSTAIN;\n        }\n        \n        content.winningOption = winningOption;\n        content.isFinalized = true;\n        content.isActive = false;\n        \n        emit VotingFinalized(contentId, winningOption, content.participantCount, content.totalUSDValue);\n    }\n    \n    // ============ TOKEN MANAGEMENT ============\n    \n    /**\n     * @dev Add a new supported token\n     * @param tokenType Type of token to add\n     * @param tokenAddress Contract address of the token (0x0 for ETH)\n     * @param priceOracle Chainlink price oracle address\n     * @param decimals Number of decimals for the token\n     * @param bonusMultiplier Bonus multiplier for this token (1000 = 100%)\n     * @param minStakeAmount Minimum stake amount for this token\n     */\n    function addToken(\n        TokenType tokenType,\n        address tokenAddress,\n        address priceOracle,\n        uint8 decimals,\n        uint256 bonusMultiplier,\n        uint256 minStakeAmount\n    ) external onlyOwner {\n        require(tokenType != TokenType.NONE, \"Invalid token type\");\n        require(priceOracle != address(0), \"Invalid price oracle\");\n        \n        supportedTokens[tokenType] = TokenInfo({\n            tokenAddress: tokenAddress,\n            priceOracle: priceOracle,\n            decimals: decimals,\n            bonusMultiplier: bonusMultiplier,\n            minStakeAmount: minStakeAmount,\n            isActive: true\n        });\n        \n        emit TokenAdded(tokenType, tokenAddress, priceOracle);\n    }\n    \n    // ============ UTILITY FUNCTIONS ============\n    \n    /**\n     * @dev Get token price in USD from Chainlink oracle\n     * @param tokenType Type of token\n     * @return price Price in USD with 8 decimals\n     */\n    function getTokenPriceUSD(TokenType tokenType) public view returns (uint256) {\n        require(supportedTokens[tokenType].isActive, \"Token not supported\");\n        \n        AggregatorV3Interface priceFeed = AggregatorV3Interface(\n            supportedTokens[tokenType].priceOracle\n        );\n        \n        (, int256 price, , , ) = priceFeed.latestRoundData();\n        require(price > 0, \"Invalid price\");\n        \n        return uint256(price);\n    }\n    \n    /**\n     * @dev Convert token amount to USD value\n     * @param tokenType Type of token\n     * @param tokenAmount Amount of tokens\n     * @return usdValue USD value with 8 decimals\n     */\n    function convertToUSD(TokenType tokenType, uint256 tokenAmount) public view returns (uint256) {\n        uint256 priceUSD = getTokenPriceUSD(tokenType);\n        uint8 tokenDecimals = supportedTokens[tokenType].decimals;\n        \n        // Convert to USD: (tokenAmount * priceUSD) / (10^tokenDecimals)\n        return (tokenAmount * priceUSD) / (10 ** tokenDecimals);\n    }\n    \n    /**\n     * @dev Calculate voting weight using quadratic formula\n     * @param usdValue USD value of stake\n     * @param confidence Confidence level (1-10)\n     * @param bonusMultiplier Bonus multiplier for token type\n     * @return weight Calculated voting weight\n     */\n    function calculateVotingWeight(\n        uint256 usdValue,\n        uint8 confidence,\n        uint256 bonusMultiplier\n    ) public pure returns (uint256) {\n        // Quadratic voting: weight = sqrt(usdValue) * confidence * bonusMultiplier / 1000\n        uint256 sqrtUSD = sqrt(usdValue);\n        return (sqrtUSD * confidence * bonusMultiplier) / 1000;\n    }\n    \n    /**\n     * @dev Verify user identity using Merkle proof\n     * @param user User address\n     * @param merkleProof Merkle proof\n     * @return isVerified Whether identity is verified\n     */\n    function isVerifiedIdentity(\n        address user,\n        bytes32[] calldata merkleProof\n    ) public view returns (bool) {\n        bytes32 leaf = keccak256(abi.encodePacked(user));\n        return MerkleProof.verify(merkleProof, merkleRoot, leaf);\n    }\n    \n    /**\n     * @dev Get complete content information\n     * @param contentId ID of the content\n     * @return ipfsHash IPFS hash of the content\n     * @return submissionTime When content was submitted\n     * @return votingDeadline When voting ends\n     * @return isActive Whether voting is active\n     * @return isFinalized Whether voting is finalized\n     * @return voteDistribution Array of vote counts [REJECT, APPROVE, ABSTAIN]\n     * @return participantCount Total number of voters\n     * @return totalUSDValue Total USD value staked\n     * @return winningOption Winning vote option\n     */\n    function getContentInfo(uint256 contentId) external view returns (\n        string memory ipfsHash,\n        uint256 submissionTime,\n        uint256 votingDeadline,\n        bool isActive,\n        bool isFinalized,\n        uint256[] memory voteDistribution,\n        uint256 participantCount,\n        uint256 totalUSDValue,\n        VoteOption winningOption\n    ) {\n        ContentInfo memory content = contents[contentId];\n        uint256[] memory distribution = new uint256[](3);\n        distribution[0] = content.voteDistribution[0];\n        distribution[1] = content.voteDistribution[1];\n        distribution[2] = content.voteDistribution[2];\n        \n        return (\n            content.ipfsHash,\n            content.submissionTime,\n            content.votingDeadline,\n            content.isActive,\n            content.isFinalized,\n            distribution,\n            content.participantCount,\n            content.totalUSDValue,\n            content.winningOption\n        );\n    }\n    \n    /**\n     * @dev Get user's vote for specific content\n     * @param contentId ID of the content\n     * @param user User address\n     * @return hasVoted Whether user has voted\n     * @return vote User's vote choice\n     * @return confidence Confidence level (1-10)\n     * @return tokenType Token used for staking\n     * @return stakeAmount Amount staked\n     * @return votingWeight Calculated voting weight\n     * @return timestamp When vote was cast\n     */\n    function getUserVote(uint256 contentId, address user) external view returns (\n        bool hasVoted,\n        VoteOption vote,\n        uint8 confidence,\n        TokenType tokenType,\n        uint256 stakeAmount,\n        uint256 votingWeight,\n        uint256 timestamp\n    ) {\n        UserVote memory userVote = userVotes[contentId][user];\n        return (\n            userVote.hasVoted,\n            userVote.vote,\n            userVote.confidence,\n            userVote.tokenType,\n            userVote.stakeAmount,\n            userVote.votingWeight,\n            userVote.timestamp\n        );\n    }\n    \n    // ============ ADMIN FUNCTIONS ============\n    \n    /**\n     * @dev Update merkle root for identity verification\n     * @param newMerkleRoot New merkle root\n     */\n    function updateMerkleRoot(bytes32 newMerkleRoot) external onlyOwner {\n        merkleRoot = newMerkleRoot;\n    }\n    \n    /**\n     * @dev Deactivate a token\n     * @param tokenType Type of token to deactivate\n     */\n    function deactivateToken(TokenType tokenType) external onlyOwner {\n        supportedTokens[tokenType].isActive = false;\n    }\n    \n    /**\n     * @dev Emergency withdraw function for owner\n     * @param tokenType Type of token to withdraw\n     * @param amount Amount to withdraw\n     */\n    function emergencyWithdraw(TokenType tokenType, uint256 amount) external onlyOwner {\n        if (tokenType == TokenType.ETH) {\n            payable(owner()).transfer(amount);\n        } else {\n            TokenInfo memory tokenInfo = supportedTokens[tokenType];\n            IERC20(tokenInfo.tokenAddress).transfer(owner(), amount);\n        }\n    }\n    \n    // ============ INTERNAL FUNCTIONS ============\n    \n    /**\n     * @dev Calculate square root using Babylonian method\n     * @param x Number to calculate square root of\n     * @return y Square root of x\n     */\n    function sqrt(uint256 x) internal pure returns (uint256 y) {\n        uint256 z = (x + 1) / 2;\n        y = x;\n        while (z < y) {\n            y = z;\n            z = (x / z + z) / 2;\n        }\n    }\n}"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[199],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":200,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":199,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,199],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1868:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2134:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[]}],"src":"102:2514:0"},"id":0},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[177]},"id":178,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"112:23:1"},{"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"137:750:1","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":177,"linearizedBaseContracts":[177],"name":"ReentrancyGuard","nameLocation":"906:15:1","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":118,"mutability":"constant","name":"_NOT_ENTERED","nameLocation":"1701:12:1","nodeType":"VariableDeclaration","scope":177,"src":"1676:41:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":116,"name":"uint256","nodeType":"ElementaryTypeName","src":"1676:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1716:1:1","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":121,"mutability":"constant","name":"_ENTERED","nameLocation":"1748:8:1","nodeType":"VariableDeclaration","scope":177,"src":"1723:37:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":119,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1759:1:1","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":123,"mutability":"mutable","name":"_status","nameLocation":"1783:7:1","nodeType":"VariableDeclaration","scope":177,"src":"1767:23:1","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":122,"name":"uint256","nodeType":"ElementaryTypeName","src":"1767:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":130,"nodeType":"Block","src":"1811:39:1","statements":[{"expression":{"id":128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":126,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"1821:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":127,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"1831:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1821:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":129,"nodeType":"ExpressionStatement","src":"1821:22:1"}]},"id":131,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":124,"nodeType":"ParameterList","parameters":[],"src":"1808:2:1"},"returnParameters":{"id":125,"nodeType":"ParameterList","parameters":[],"src":"1811:0:1"},"scope":177,"src":"1797:53:1","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":141,"nodeType":"Block","src":"2251:79:1","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":134,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":157,"src":"2261:19:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2261:21:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":136,"nodeType":"ExpressionStatement","src":"2261:21:1"},{"id":137,"nodeType":"PlaceholderStatement","src":"2292:1:1"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":138,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":165,"src":"2303:18:1","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2303:20:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":140,"nodeType":"ExpressionStatement","src":"2303:20:1"}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"1856:366:1","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"id":142,"name":"nonReentrant","nameLocation":"2236:12:1","nodeType":"ModifierDefinition","parameters":{"id":133,"nodeType":"ParameterList","parameters":[],"src":"2248:2:1"},"src":"2227:103:1","virtual":false,"visibility":"internal"},{"body":{"id":156,"nodeType":"Block","src":"2375:248:1","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":146,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"2468:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":147,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"2479:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2468:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":149,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2489:33:1","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":145,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2460:7:1","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2460:63:1","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":151,"nodeType":"ExpressionStatement","src":"2460:63:1"},{"expression":{"id":154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":152,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"2598:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":153,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"2608:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2598:18:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":155,"nodeType":"ExpressionStatement","src":"2598:18:1"}]},"id":157,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2345:19:1","nodeType":"FunctionDefinition","parameters":{"id":143,"nodeType":"ParameterList","parameters":[],"src":"2364:2:1"},"returnParameters":{"id":144,"nodeType":"ParameterList","parameters":[],"src":"2375:0:1"},"scope":177,"src":"2336:287:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":164,"nodeType":"Block","src":"2667:171:1","statements":[{"expression":{"id":162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":160,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"2809:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":161,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":118,"src":"2819:12:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2809:22:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":163,"nodeType":"ExpressionStatement","src":"2809:22:1"}]},"id":165,"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2638:18:1","nodeType":"FunctionDefinition","parameters":{"id":158,"nodeType":"ParameterList","parameters":[],"src":"2656:2:1"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"2667:0:1"},"scope":177,"src":"2629:209:1","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":175,"nodeType":"Block","src":"3081:43:1","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":171,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":123,"src":"3098:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":172,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":121,"src":"3109:8:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3098:19:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":170,"id":174,"nodeType":"Return","src":"3091:26:1"}]},"documentation":{"id":166,"nodeType":"StructuredDocumentation","src":"2844:168:1","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"id":176,"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3026:23:1","nodeType":"FunctionDefinition","parameters":{"id":167,"nodeType":"ParameterList","parameters":[],"src":"3049:2:1"},"returnParameters":{"id":170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":176,"src":"3075:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":168,"name":"bool","nodeType":"ElementaryTypeName","src":"3075:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3074:6:1"},"scope":177,"src":"3017:107:1","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":178,"src":"888:2238:1","usedErrors":[]}],"src":"112:3015:1"},"id":1},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[199]},"id":200,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":179,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:2"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":180,"nodeType":"StructuredDocumentation","src":"111:496:2","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":199,"linearizedBaseContracts":[199],"name":"Context","nameLocation":"626:7:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":188,"nodeType":"Block","src":"702:34:2","statements":[{"expression":{"expression":{"id":185,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"723:6:2","memberName":"sender","nodeType":"MemberAccess","src":"719:10:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":184,"id":187,"nodeType":"Return","src":"712:17:2"}]},"id":189,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:2","nodeType":"FunctionDefinition","parameters":{"id":181,"nodeType":"ParameterList","parameters":[],"src":"659:2:2"},"returnParameters":{"id":184,"nodeType":"ParameterList","parameters":[{"constant":false,"id":183,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":189,"src":"693:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":182,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:2"},"scope":199,"src":"640:96:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":197,"nodeType":"Block","src":"809:32:2","statements":[{"expression":{"expression":{"id":194,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:2","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"830:4:2","memberName":"data","nodeType":"MemberAccess","src":"826:8:2","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":193,"id":196,"nodeType":"Return","src":"819:15:2"}]},"id":198,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:2","nodeType":"FunctionDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[],"src":"759:2:2"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":192,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":198,"src":"793:14:2","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":191,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:2","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:2"},"scope":199,"src":"742:99:2","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":200,"src":"608:235:2","usedErrors":[]}],"src":"86:758:2"},"id":2},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","exportedSymbols":{"MerkleProof":[727]},"id":728,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":201,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"118:23:3"},{"abstract":false,"baseContracts":[],"canonicalName":"MerkleProof","contractDependencies":[],"contractKind":"library","documentation":{"id":202,"nodeType":"StructuredDocumentation","src":"143:658:3","text":" @dev These functions deal with verification of Merkle Tree proofs.\n The tree and the proofs can be generated using our\n https://github.com/OpenZeppelin/merkle-tree[JavaScript library].\n You will find a quickstart guide in the readme.\n WARNING: You should avoid using leaf values that are 64 bytes long prior to\n hashing, or use a hash function other than keccak256 for hashing leaves.\n This is because the concatenation of a sorted pair of internal nodes in\n the merkle tree could be reinterpreted as a leaf value.\n OpenZeppelin's JavaScript library generates merkle trees that are safe\n against this attack out of the box."},"fullyImplemented":true,"id":727,"linearizedBaseContracts":[727],"name":"MerkleProof","nameLocation":"810:11:3","nodeType":"ContractDefinition","nodes":[{"body":{"id":222,"nodeType":"Block","src":"1253:57:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":216,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":206,"src":"1283:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":217,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":210,"src":"1290:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":215,"name":"processProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":284,"src":"1270:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bytes32) pure returns (bytes32)"}},"id":218,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1270:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":219,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":208,"src":"1299:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1270:33:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":214,"id":221,"nodeType":"Return","src":"1263:40:3"}]},"documentation":{"id":203,"nodeType":"StructuredDocumentation","src":"828:323:3","text":" @dev Returns true if a `leaf` can be proved to be a part of a Merkle tree\n defined by `root`. For this, a `proof` must be provided, containing\n sibling hashes on the branch from the leaf to the root of the tree. Each\n pair of leaves and each pair of pre-images are assumed to be sorted."},"id":223,"implemented":true,"kind":"function","modifiers":[],"name":"verify","nameLocation":"1165:6:3","nodeType":"FunctionDefinition","parameters":{"id":211,"nodeType":"ParameterList","parameters":[{"constant":false,"id":206,"mutability":"mutable","name":"proof","nameLocation":"1189:5:3","nodeType":"VariableDeclaration","scope":223,"src":"1172:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":204,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1172:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":205,"nodeType":"ArrayTypeName","src":"1172:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":208,"mutability":"mutable","name":"root","nameLocation":"1204:4:3","nodeType":"VariableDeclaration","scope":223,"src":"1196:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":207,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1196:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":210,"mutability":"mutable","name":"leaf","nameLocation":"1218:4:3","nodeType":"VariableDeclaration","scope":223,"src":"1210:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":209,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1210:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1171:52:3"},"returnParameters":{"id":214,"nodeType":"ParameterList","parameters":[{"constant":false,"id":213,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":223,"src":"1247:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":212,"name":"bool","nodeType":"ElementaryTypeName","src":"1247:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1246:6:3"},"scope":727,"src":"1156:154:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":243,"nodeType":"Block","src":"1518:65:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":237,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":227,"src":"1556:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":238,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":231,"src":"1563:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":236,"name":"processProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"1535:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bytes32) pure returns (bytes32)"}},"id":239,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1535:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":240,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":229,"src":"1572:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1535:41:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":235,"id":242,"nodeType":"Return","src":"1528:48:3"}]},"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"1316:90:3","text":" @dev Calldata version of {verify}\n _Available since v4.7._"},"id":244,"implemented":true,"kind":"function","modifiers":[],"name":"verifyCalldata","nameLocation":"1420:14:3","nodeType":"FunctionDefinition","parameters":{"id":232,"nodeType":"ParameterList","parameters":[{"constant":false,"id":227,"mutability":"mutable","name":"proof","nameLocation":"1454:5:3","nodeType":"VariableDeclaration","scope":244,"src":"1435:24:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1435:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":226,"nodeType":"ArrayTypeName","src":"1435:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":229,"mutability":"mutable","name":"root","nameLocation":"1469:4:3","nodeType":"VariableDeclaration","scope":244,"src":"1461:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":228,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1461:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":231,"mutability":"mutable","name":"leaf","nameLocation":"1483:4:3","nodeType":"VariableDeclaration","scope":244,"src":"1475:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":230,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1475:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1434:54:3"},"returnParameters":{"id":235,"nodeType":"ParameterList","parameters":[{"constant":false,"id":234,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":244,"src":"1512:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":233,"name":"bool","nodeType":"ElementaryTypeName","src":"1512:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1511:6:3"},"scope":727,"src":"1411:172:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":283,"nodeType":"Block","src":"2026:198:3","statements":[{"assignments":[256],"declarations":[{"constant":false,"id":256,"mutability":"mutable","name":"computedHash","nameLocation":"2044:12:3","nodeType":"VariableDeclaration","scope":283,"src":"2036:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":255,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2036:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":258,"initialValue":{"id":257,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":250,"src":"2059:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2036:27:3"},{"body":{"id":279,"nodeType":"Block","src":"2116:73:3","statements":[{"expression":{"id":277,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":270,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"2130:12:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":272,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"2155:12:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":273,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"2169:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":275,"indexExpression":{"id":274,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"2175:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2169:8:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":271,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"2145:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":276,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2145:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2130:48:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":278,"nodeType":"ExpressionStatement","src":"2130:48:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":266,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":263,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"2093:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":264,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"2097:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":265,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2103:6:3","memberName":"length","nodeType":"MemberAccess","src":"2097:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2093:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":280,"initializationExpression":{"assignments":[260],"declarations":[{"constant":false,"id":260,"mutability":"mutable","name":"i","nameLocation":"2086:1:3","nodeType":"VariableDeclaration","scope":280,"src":"2078:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":259,"name":"uint256","nodeType":"ElementaryTypeName","src":"2078:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":262,"initialValue":{"hexValue":"30","id":261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2090:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2078:13:3"},"loopExpression":{"expression":{"id":268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2111:3:3","subExpression":{"id":267,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":260,"src":"2111:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":269,"nodeType":"ExpressionStatement","src":"2111:3:3"},"nodeType":"ForStatement","src":"2073:116:3"},{"expression":{"id":281,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"2205:12:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":254,"id":282,"nodeType":"Return","src":"2198:19:3"}]},"documentation":{"id":245,"nodeType":"StructuredDocumentation","src":"1589:340:3","text":" @dev Returns the rebuilt hash obtained by traversing a Merkle tree up\n from `leaf` using `proof`. A `proof` is valid if and only if the rebuilt\n hash matches the root of the tree. When processing the proof, the pairs\n of leafs & pre-images are assumed to be sorted.\n _Available since v4.4._"},"id":284,"implemented":true,"kind":"function","modifiers":[],"name":"processProof","nameLocation":"1943:12:3","nodeType":"FunctionDefinition","parameters":{"id":251,"nodeType":"ParameterList","parameters":[{"constant":false,"id":248,"mutability":"mutable","name":"proof","nameLocation":"1973:5:3","nodeType":"VariableDeclaration","scope":284,"src":"1956:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":246,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1956:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":247,"nodeType":"ArrayTypeName","src":"1956:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":250,"mutability":"mutable","name":"leaf","nameLocation":"1988:4:3","nodeType":"VariableDeclaration","scope":284,"src":"1980:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":249,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1980:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1955:38:3"},"returnParameters":{"id":254,"nodeType":"ParameterList","parameters":[{"constant":false,"id":253,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":284,"src":"2017:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":252,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2017:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2016:9:3"},"scope":727,"src":"1934:290:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":323,"nodeType":"Block","src":"2433:198:3","statements":[{"assignments":[296],"declarations":[{"constant":false,"id":296,"mutability":"mutable","name":"computedHash","nameLocation":"2451:12:3","nodeType":"VariableDeclaration","scope":323,"src":"2443:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":295,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2443:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":298,"initialValue":{"id":297,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":290,"src":"2466:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"2443:27:3"},{"body":{"id":319,"nodeType":"Block","src":"2523:73:3","statements":[{"expression":{"id":317,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":310,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"2537:12:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":312,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"2562:12:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"baseExpression":{"id":313,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"2576:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":315,"indexExpression":{"id":314,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"2582:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2576:8:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":311,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"2552:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2552:33:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"2537:48:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":318,"nodeType":"ExpressionStatement","src":"2537:48:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":306,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":303,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"2500:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":304,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"2504:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2510:6:3","memberName":"length","nodeType":"MemberAccess","src":"2504:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2500:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":320,"initializationExpression":{"assignments":[300],"declarations":[{"constant":false,"id":300,"mutability":"mutable","name":"i","nameLocation":"2493:1:3","nodeType":"VariableDeclaration","scope":320,"src":"2485:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":299,"name":"uint256","nodeType":"ElementaryTypeName","src":"2485:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":302,"initialValue":{"hexValue":"30","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2497:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"2485:13:3"},"loopExpression":{"expression":{"id":308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"2518:3:3","subExpression":{"id":307,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":300,"src":"2518:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":309,"nodeType":"ExpressionStatement","src":"2518:3:3"},"nodeType":"ForStatement","src":"2480:116:3"},{"expression":{"id":321,"name":"computedHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"2612:12:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":294,"id":322,"nodeType":"Return","src":"2605:19:3"}]},"documentation":{"id":285,"nodeType":"StructuredDocumentation","src":"2230:96:3","text":" @dev Calldata version of {processProof}\n _Available since v4.7._"},"id":324,"implemented":true,"kind":"function","modifiers":[],"name":"processProofCalldata","nameLocation":"2340:20:3","nodeType":"FunctionDefinition","parameters":{"id":291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":288,"mutability":"mutable","name":"proof","nameLocation":"2380:5:3","nodeType":"VariableDeclaration","scope":324,"src":"2361:24:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":286,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2361:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":287,"nodeType":"ArrayTypeName","src":"2361:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":290,"mutability":"mutable","name":"leaf","nameLocation":"2395:4:3","nodeType":"VariableDeclaration","scope":324,"src":"2387:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":289,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2387:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2360:40:3"},"returnParameters":{"id":294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":293,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":324,"src":"2424:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":292,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2424:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2423:9:3"},"scope":727,"src":"2331:300:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":349,"nodeType":"Block","src":"3174:76:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":342,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"3209:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},{"id":343,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":331,"src":"3216:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},{"id":344,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"3228:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"},{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":341,"name":"processMultiProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"3191:17:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_array$_t_bool_$dyn_memory_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] memory,bool[] memory,bytes32[] memory) pure returns (bytes32)"}},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3191:44:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":346,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":333,"src":"3239:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3191:52:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":340,"id":348,"nodeType":"Return","src":"3184:59:3"}]},"documentation":{"id":325,"nodeType":"StructuredDocumentation","src":"2637:350:3","text":" @dev Returns true if the `leaves` can be simultaneously proven to be a part of a merkle tree defined by\n `root`, according to `proof` and `proofFlags` as described in {processMultiProof}.\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":350,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerify","nameLocation":"3001:16:3","nodeType":"FunctionDefinition","parameters":{"id":337,"nodeType":"ParameterList","parameters":[{"constant":false,"id":328,"mutability":"mutable","name":"proof","nameLocation":"3044:5:3","nodeType":"VariableDeclaration","scope":350,"src":"3027:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":326,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3027:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":327,"nodeType":"ArrayTypeName","src":"3027:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":331,"mutability":"mutable","name":"proofFlags","nameLocation":"3073:10:3","nodeType":"VariableDeclaration","scope":350,"src":"3059:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":329,"name":"bool","nodeType":"ElementaryTypeName","src":"3059:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":330,"nodeType":"ArrayTypeName","src":"3059:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":333,"mutability":"mutable","name":"root","nameLocation":"3101:4:3","nodeType":"VariableDeclaration","scope":350,"src":"3093:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":332,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3093:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":336,"mutability":"mutable","name":"leaves","nameLocation":"3132:6:3","nodeType":"VariableDeclaration","scope":350,"src":"3115:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":334,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3115:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":335,"nodeType":"ArrayTypeName","src":"3115:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3017:127:3"},"returnParameters":{"id":340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":350,"src":"3168:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":338,"name":"bool","nodeType":"ElementaryTypeName","src":"3168:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3167:6:3"},"scope":727,"src":"2992:258:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":375,"nodeType":"Block","src":"3655:84:3","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":368,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":354,"src":"3698:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":369,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":357,"src":"3705:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},{"id":370,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"3717:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}],"id":367,"name":"processMultiProofCalldata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":692,"src":"3672:25:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_calldata_ptr_$_t_array$_t_bool_$dyn_calldata_ptr_$_t_array$_t_bytes32_$dyn_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes32[] calldata,bool[] calldata,bytes32[] memory) pure returns (bytes32)"}},"id":371,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3672:52:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":372,"name":"root","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":359,"src":"3728:4:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3672:60:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":366,"id":374,"nodeType":"Return","src":"3665:67:3"}]},"documentation":{"id":351,"nodeType":"StructuredDocumentation","src":"3256:200:3","text":" @dev Calldata version of {multiProofVerify}\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":376,"implemented":true,"kind":"function","modifiers":[],"name":"multiProofVerifyCalldata","nameLocation":"3470:24:3","nodeType":"FunctionDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":354,"mutability":"mutable","name":"proof","nameLocation":"3523:5:3","nodeType":"VariableDeclaration","scope":376,"src":"3504:24:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":352,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3504:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":353,"nodeType":"ArrayTypeName","src":"3504:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":357,"mutability":"mutable","name":"proofFlags","nameLocation":"3554:10:3","nodeType":"VariableDeclaration","scope":376,"src":"3538:26:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":355,"name":"bool","nodeType":"ElementaryTypeName","src":"3538:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":356,"nodeType":"ArrayTypeName","src":"3538:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":359,"mutability":"mutable","name":"root","nameLocation":"3582:4:3","nodeType":"VariableDeclaration","scope":376,"src":"3574:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":358,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3574:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":362,"mutability":"mutable","name":"leaves","nameLocation":"3613:6:3","nodeType":"VariableDeclaration","scope":376,"src":"3596:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3596:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":361,"nodeType":"ArrayTypeName","src":"3596:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"3494:131:3"},"returnParameters":{"id":366,"nodeType":"ParameterList","parameters":[{"constant":false,"id":365,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":376,"src":"3649:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":364,"name":"bool","nodeType":"ElementaryTypeName","src":"3649:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3648:6:3"},"scope":727,"src":"3461:278:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":533,"nodeType":"Block","src":"4693:2053:3","statements":[{"assignments":[392],"declarations":[{"constant":false,"id":392,"mutability":"mutable","name":"leavesLen","nameLocation":"5085:9:3","nodeType":"VariableDeclaration","scope":533,"src":"5077:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":391,"name":"uint256","nodeType":"ElementaryTypeName","src":"5077:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":395,"initialValue":{"expression":{"id":393,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"5097:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5104:6:3","memberName":"length","nodeType":"MemberAccess","src":"5097:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5077:33:3"},{"assignments":[397],"declarations":[{"constant":false,"id":397,"mutability":"mutable","name":"proofLen","nameLocation":"5128:8:3","nodeType":"VariableDeclaration","scope":533,"src":"5120:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":396,"name":"uint256","nodeType":"ElementaryTypeName","src":"5120:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":400,"initialValue":{"expression":{"id":398,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"5139:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5145:6:3","memberName":"length","nodeType":"MemberAccess","src":"5139:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5120:31:3"},{"assignments":[402],"declarations":[{"constant":false,"id":402,"mutability":"mutable","name":"totalHashes","nameLocation":"5169:11:3","nodeType":"VariableDeclaration","scope":533,"src":"5161:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":401,"name":"uint256","nodeType":"ElementaryTypeName","src":"5161:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":405,"initialValue":{"expression":{"id":403,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"5183:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":404,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5194:6:3","memberName":"length","nodeType":"MemberAccess","src":"5183:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5161:39:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":411,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":407,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"5252:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":408,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"5264:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5252:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5275:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"5252:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":412,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"5280:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5252:39:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":414,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5293:33:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":406,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5244:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":415,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5244:83:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":416,"nodeType":"ExpressionStatement","src":"5244:83:3"},{"assignments":[421],"declarations":[{"constant":false,"id":421,"mutability":"mutable","name":"hashes","nameLocation":"5589:6:3","nodeType":"VariableDeclaration","scope":533,"src":"5572:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":419,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5572:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":420,"nodeType":"ArrayTypeName","src":"5572:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":427,"initialValue":{"arguments":[{"id":425,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"5612:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":424,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"5598:13:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":422,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5602:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":423,"nodeType":"ArrayTypeName","src":"5602:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":426,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5598:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"5572:52:3"},{"assignments":[429],"declarations":[{"constant":false,"id":429,"mutability":"mutable","name":"leafPos","nameLocation":"5642:7:3","nodeType":"VariableDeclaration","scope":533,"src":"5634:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":428,"name":"uint256","nodeType":"ElementaryTypeName","src":"5634:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":431,"initialValue":{"hexValue":"30","id":430,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5652:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5634:19:3"},{"assignments":[433],"declarations":[{"constant":false,"id":433,"mutability":"mutable","name":"hashPos","nameLocation":"5671:7:3","nodeType":"VariableDeclaration","scope":533,"src":"5663:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":432,"name":"uint256","nodeType":"ElementaryTypeName","src":"5663:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":435,"initialValue":{"hexValue":"30","id":434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5681:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5663:19:3"},{"assignments":[437],"declarations":[{"constant":false,"id":437,"mutability":"mutable","name":"proofPos","nameLocation":"5700:8:3","nodeType":"VariableDeclaration","scope":533,"src":"5692:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":436,"name":"uint256","nodeType":"ElementaryTypeName","src":"5692:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":439,"initialValue":{"hexValue":"30","id":438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5711:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5692:20:3"},{"body":{"id":498,"nodeType":"Block","src":"6130:292:3","statements":[{"assignments":[451],"declarations":[{"constant":false,"id":451,"mutability":"mutable","name":"a","nameLocation":"6152:1:3","nodeType":"VariableDeclaration","scope":498,"src":"6144:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":450,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6144:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":464,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":452,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"6156:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":453,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"6166:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6156:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":459,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"6198:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":462,"indexExpression":{"id":461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6205:9:3","subExpression":{"id":460,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"6205:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6198:17:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6156:59:3","trueExpression":{"baseExpression":{"id":455,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"6178:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":458,"indexExpression":{"id":457,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6185:9:3","subExpression":{"id":456,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"6185:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6178:17:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6144:71:3"},{"assignments":[466],"declarations":[{"constant":false,"id":466,"mutability":"mutable","name":"b","nameLocation":"6237:1:3","nodeType":"VariableDeclaration","scope":498,"src":"6229:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":465,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6229:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":488,"initialValue":{"condition":{"baseExpression":{"id":467,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":383,"src":"6241:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[] memory"}},"id":469,"indexExpression":{"id":468,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"6252:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6241:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":483,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"6353:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":486,"indexExpression":{"id":485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6359:10:3","subExpression":{"id":484,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"6359:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6353:17:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6241:129:3","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":470,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"6274:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":471,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"6284:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6274:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":477,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"6316:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":480,"indexExpression":{"id":479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6323:9:3","subExpression":{"id":478,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":433,"src":"6323:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6316:17:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"6274:59:3","trueExpression":{"baseExpression":{"id":473,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"6296:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":476,"indexExpression":{"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6303:9:3","subExpression":{"id":474,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"6303:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6296:17:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":482,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"6273:61:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"6229:141:3"},{"expression":{"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":489,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"6384:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":491,"indexExpression":{"id":490,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"6391:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6384:9:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":493,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":451,"src":"6406:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":494,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":466,"src":"6409:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":492,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"6396:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6396:15:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"6384:27:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":497,"nodeType":"ExpressionStatement","src":"6384:27:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":444,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"6108:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":445,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"6112:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6108:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":499,"initializationExpression":{"assignments":[441],"declarations":[{"constant":false,"id":441,"mutability":"mutable","name":"i","nameLocation":"6101:1:3","nodeType":"VariableDeclaration","scope":499,"src":"6093:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":440,"name":"uint256","nodeType":"ElementaryTypeName","src":"6093:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":443,"initialValue":{"hexValue":"30","id":442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6105:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"6093:13:3"},"loopExpression":{"expression":{"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"6125:3:3","subExpression":{"id":447,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":441,"src":"6125:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":449,"nodeType":"ExpressionStatement","src":"6125:3:3"},"nodeType":"ForStatement","src":"6088:334:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":500,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"6436:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6450:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6436:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":518,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":392,"src":"6638:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6650:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6638:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":530,"nodeType":"Block","src":"6700:40:3","statements":[{"expression":{"baseExpression":{"id":526,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":380,"src":"6721:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":528,"indexExpression":{"hexValue":"30","id":527,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6727:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6721:8:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":390,"id":529,"nodeType":"Return","src":"6714:15:3"}]},"id":531,"nodeType":"IfStatement","src":"6634:106:3","trueBody":{"id":525,"nodeType":"Block","src":"6653:41:3","statements":[{"expression":{"baseExpression":{"id":521,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"6674:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":523,"indexExpression":{"hexValue":"30","id":522,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6681:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6674:9:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":390,"id":524,"nodeType":"Return","src":"6667:16:3"}]}},"id":532,"nodeType":"IfStatement","src":"6432:308:3","trueBody":{"id":517,"nodeType":"Block","src":"6453:175:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":504,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":437,"src":"6475:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":505,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":397,"src":"6487:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6475:20:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":507,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6497:33:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":503,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6467:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":508,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6467:64:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":509,"nodeType":"ExpressionStatement","src":"6467:64:3"},{"id":516,"nodeType":"UncheckedBlock","src":"6545:73:3","statements":[{"expression":{"baseExpression":{"id":510,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":421,"src":"6580:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":514,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":511,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"6587:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6601:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6587:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6580:23:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":390,"id":515,"nodeType":"Return","src":"6573:30:3"}]}]}}]},"documentation":{"id":377,"nodeType":"StructuredDocumentation","src":"3745:768:3","text":" @dev Returns the root of a tree reconstructed from `leaves` and sibling nodes in `proof`. The reconstruction\n proceeds by incrementally reconstructing all inner nodes by combining a leaf/inner node with either another\n leaf/inner node or a proof sibling node, depending on whether each `proofFlags` item is true or false\n respectively.\n CAUTION: Not all merkle trees admit multiproofs. To use multiproofs, it is sufficient to ensure that: 1) the tree\n is complete (but not necessarily perfect), 2) the leaves to be proven are in the opposite order they are in the\n tree (i.e., as seen from right to left starting at the deepest layer and continuing at the next layer).\n _Available since v4.7._"},"id":534,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProof","nameLocation":"4527:17:3","nodeType":"FunctionDefinition","parameters":{"id":387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":380,"mutability":"mutable","name":"proof","nameLocation":"4571:5:3","nodeType":"VariableDeclaration","scope":534,"src":"4554:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":378,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4554:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":379,"nodeType":"ArrayTypeName","src":"4554:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":383,"mutability":"mutable","name":"proofFlags","nameLocation":"4600:10:3","nodeType":"VariableDeclaration","scope":534,"src":"4586:24:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_memory_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":381,"name":"bool","nodeType":"ElementaryTypeName","src":"4586:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":382,"nodeType":"ArrayTypeName","src":"4586:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"leaves","nameLocation":"4637:6:3","nodeType":"VariableDeclaration","scope":534,"src":"4620:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":384,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4620:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":385,"nodeType":"ArrayTypeName","src":"4620:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"4544:105:3"},"returnParameters":{"id":390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":389,"mutability":"mutable","name":"merkleRoot","nameLocation":"4681:10:3","nodeType":"VariableDeclaration","scope":534,"src":"4673:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":388,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4673:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4672:20:3"},"scope":727,"src":"4518:2228:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":691,"nodeType":"Block","src":"7146:2053:3","statements":[{"assignments":[550],"declarations":[{"constant":false,"id":550,"mutability":"mutable","name":"leavesLen","nameLocation":"7538:9:3","nodeType":"VariableDeclaration","scope":691,"src":"7530:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":549,"name":"uint256","nodeType":"ElementaryTypeName","src":"7530:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":553,"initialValue":{"expression":{"id":551,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"7550:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7557:6:3","memberName":"length","nodeType":"MemberAccess","src":"7550:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7530:33:3"},{"assignments":[555],"declarations":[{"constant":false,"id":555,"mutability":"mutable","name":"proofLen","nameLocation":"7581:8:3","nodeType":"VariableDeclaration","scope":691,"src":"7573:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":554,"name":"uint256","nodeType":"ElementaryTypeName","src":"7573:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":558,"initialValue":{"expression":{"id":556,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"7592:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7598:6:3","memberName":"length","nodeType":"MemberAccess","src":"7592:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7573:31:3"},{"assignments":[560],"declarations":[{"constant":false,"id":560,"mutability":"mutable","name":"totalHashes","nameLocation":"7622:11:3","nodeType":"VariableDeclaration","scope":691,"src":"7614:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":559,"name":"uint256","nodeType":"ElementaryTypeName","src":"7614:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":563,"initialValue":{"expression":{"id":561,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"7636:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7647:6:3","memberName":"length","nodeType":"MemberAccess","src":"7636:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7614:39:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":565,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"7705:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":566,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"7717:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7705:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":568,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7728:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7705:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":570,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"7733:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7705:39:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7746:33:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":564,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7697:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":573,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7697:83:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":574,"nodeType":"ExpressionStatement","src":"7697:83:3"},{"assignments":[579],"declarations":[{"constant":false,"id":579,"mutability":"mutable","name":"hashes","nameLocation":"8042:6:3","nodeType":"VariableDeclaration","scope":691,"src":"8025:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":577,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8025:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":578,"nodeType":"ArrayTypeName","src":"8025:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":585,"initialValue":{"arguments":[{"id":583,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"8065:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"8051:13:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":580,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8055:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":581,"nodeType":"ArrayTypeName","src":"8055:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8051:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"8025:52:3"},{"assignments":[587],"declarations":[{"constant":false,"id":587,"mutability":"mutable","name":"leafPos","nameLocation":"8095:7:3","nodeType":"VariableDeclaration","scope":691,"src":"8087:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":586,"name":"uint256","nodeType":"ElementaryTypeName","src":"8087:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":589,"initialValue":{"hexValue":"30","id":588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8105:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8087:19:3"},{"assignments":[591],"declarations":[{"constant":false,"id":591,"mutability":"mutable","name":"hashPos","nameLocation":"8124:7:3","nodeType":"VariableDeclaration","scope":691,"src":"8116:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":590,"name":"uint256","nodeType":"ElementaryTypeName","src":"8116:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":593,"initialValue":{"hexValue":"30","id":592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8134:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8116:19:3"},{"assignments":[595],"declarations":[{"constant":false,"id":595,"mutability":"mutable","name":"proofPos","nameLocation":"8153:8:3","nodeType":"VariableDeclaration","scope":691,"src":"8145:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":594,"name":"uint256","nodeType":"ElementaryTypeName","src":"8145:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":597,"initialValue":{"hexValue":"30","id":596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8164:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8145:20:3"},{"body":{"id":656,"nodeType":"Block","src":"8583:292:3","statements":[{"assignments":[609],"declarations":[{"constant":false,"id":609,"mutability":"mutable","name":"a","nameLocation":"8605:1:3","nodeType":"VariableDeclaration","scope":656,"src":"8597:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":608,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8597:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":622,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":610,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"8609:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":611,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"8619:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8609:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":617,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"8651:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":620,"indexExpression":{"id":619,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8658:9:3","subExpression":{"id":618,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"8658:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8651:17:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8609:59:3","trueExpression":{"baseExpression":{"id":613,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"8631:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":616,"indexExpression":{"id":615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8638:9:3","subExpression":{"id":614,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"8638:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8631:17:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8597:71:3"},{"assignments":[624],"declarations":[{"constant":false,"id":624,"mutability":"mutable","name":"b","nameLocation":"8690:1:3","nodeType":"VariableDeclaration","scope":656,"src":"8682:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":623,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8682:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":646,"initialValue":{"condition":{"baseExpression":{"id":625,"name":"proofFlags","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":541,"src":"8694:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[] calldata"}},"id":627,"indexExpression":{"id":626,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"8705:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8694:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":641,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"8806:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":644,"indexExpression":{"id":643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8812:10:3","subExpression":{"id":642,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"8812:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8806:17:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":645,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8694:129:3","trueExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":628,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"8727:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":629,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"8737:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8727:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"baseExpression":{"id":635,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"8769:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":638,"indexExpression":{"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8776:9:3","subExpression":{"id":636,"name":"hashPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":591,"src":"8776:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8769:17:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8727:59:3","trueExpression":{"baseExpression":{"id":631,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"8749:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":634,"indexExpression":{"id":633,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8756:9:3","subExpression":{"id":632,"name":"leafPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":587,"src":"8756:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8749:17:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":640,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8726:61:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"8682:141:3"},{"expression":{"id":654,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":647,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"8837:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":649,"indexExpression":{"id":648,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"8844:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8837:9:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":651,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":609,"src":"8859:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":652,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":624,"src":"8862:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":650,"name":"_hashPair","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":715,"src":"8849:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8849:15:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"8837:27:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":655,"nodeType":"ExpressionStatement","src":"8837:27:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":602,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"8561:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":603,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"8565:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8561:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":657,"initializationExpression":{"assignments":[599],"declarations":[{"constant":false,"id":599,"mutability":"mutable","name":"i","nameLocation":"8554:1:3","nodeType":"VariableDeclaration","scope":657,"src":"8546:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":598,"name":"uint256","nodeType":"ElementaryTypeName","src":"8546:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":601,"initialValue":{"hexValue":"30","id":600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8558:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8546:13:3"},"loopExpression":{"expression":{"id":606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8578:3:3","subExpression":{"id":605,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"8578:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":607,"nodeType":"ExpressionStatement","src":"8578:3:3"},"nodeType":"ForStatement","src":"8541:334:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":658,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"8889:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8903:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8889:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":678,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":676,"name":"leavesLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":550,"src":"9091:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":677,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9103:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9091:13:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":688,"nodeType":"Block","src":"9153:40:3","statements":[{"expression":{"baseExpression":{"id":684,"name":"proof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":538,"src":"9174:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":686,"indexExpression":{"hexValue":"30","id":685,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9180:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9174:8:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":548,"id":687,"nodeType":"Return","src":"9167:15:3"}]},"id":689,"nodeType":"IfStatement","src":"9087:106:3","trueBody":{"id":683,"nodeType":"Block","src":"9106:41:3","statements":[{"expression":{"baseExpression":{"id":679,"name":"leaves","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":544,"src":"9127:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":681,"indexExpression":{"hexValue":"30","id":680,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9134:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9127:9:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":548,"id":682,"nodeType":"Return","src":"9120:16:3"}]}},"id":690,"nodeType":"IfStatement","src":"8885:308:3","trueBody":{"id":675,"nodeType":"Block","src":"8906:175:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":664,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":662,"name":"proofPos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":595,"src":"8928:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":663,"name":"proofLen","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":555,"src":"8940:8:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8928:20:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4d65726b6c6550726f6f663a20696e76616c6964206d756c746970726f6f66","id":665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8950:33:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""},"value":"MerkleProof: invalid multiproof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1ffedb6c6cbea997e7c1340fc6ef8db6298ec2fb1f2ffb34b77ce45e725b2049","typeString":"literal_string \"MerkleProof: invalid multiproof\""}],"id":661,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8920:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8920:64:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":667,"nodeType":"ExpressionStatement","src":"8920:64:3"},{"id":674,"nodeType":"UncheckedBlock","src":"8998:73:3","statements":[{"expression":{"baseExpression":{"id":668,"name":"hashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":579,"src":"9033:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":672,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":669,"name":"totalHashes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":560,"src":"9040:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9054:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9040:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9033:23:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":548,"id":673,"nodeType":"Return","src":"9026:30:3"}]}]}}]},"documentation":{"id":535,"nodeType":"StructuredDocumentation","src":"6752:202:3","text":" @dev Calldata version of {processMultiProof}.\n CAUTION: Not all merkle trees admit multiproofs. See {processMultiProof} for details.\n _Available since v4.7._"},"id":692,"implemented":true,"kind":"function","modifiers":[],"name":"processMultiProofCalldata","nameLocation":"6968:25:3","nodeType":"FunctionDefinition","parameters":{"id":545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":538,"mutability":"mutable","name":"proof","nameLocation":"7022:5:3","nodeType":"VariableDeclaration","scope":692,"src":"7003:24:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":536,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7003:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":537,"nodeType":"ArrayTypeName","src":"7003:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":541,"mutability":"mutable","name":"proofFlags","nameLocation":"7053:10:3","nodeType":"VariableDeclaration","scope":692,"src":"7037:26:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_calldata_ptr","typeString":"bool[]"},"typeName":{"baseType":{"id":539,"name":"bool","nodeType":"ElementaryTypeName","src":"7037:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":540,"nodeType":"ArrayTypeName","src":"7037:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bool_$dyn_storage_ptr","typeString":"bool[]"}},"visibility":"internal"},{"constant":false,"id":544,"mutability":"mutable","name":"leaves","nameLocation":"7090:6:3","nodeType":"VariableDeclaration","scope":692,"src":"7073:23:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":542,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7073:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":543,"nodeType":"ArrayTypeName","src":"7073:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6993:109:3"},"returnParameters":{"id":548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":547,"mutability":"mutable","name":"merkleRoot","nameLocation":"7134:10:3","nodeType":"VariableDeclaration","scope":692,"src":"7126:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":546,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7126:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7125:20:3"},"scope":727,"src":"6959:2240:3","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":714,"nodeType":"Block","src":"9277:75:3","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"id":703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":701,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"9294:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":702,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"9298:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"9294:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"id":709,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"9340:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":710,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"9343:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":708,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"9325:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9325:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9294:51:3","trueExpression":{"arguments":[{"id":705,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"9317:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":706,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"9320:1:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":704,"name":"_efficientHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":726,"src":"9302:14:3","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32,bytes32) pure returns (bytes32)"}},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9302:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":700,"id":713,"nodeType":"Return","src":"9287:58:3"}]},"id":715,"implemented":true,"kind":"function","modifiers":[],"name":"_hashPair","nameLocation":"9214:9:3","nodeType":"FunctionDefinition","parameters":{"id":697,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"mutability":"mutable","name":"a","nameLocation":"9232:1:3","nodeType":"VariableDeclaration","scope":715,"src":"9224:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":693,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9224:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":696,"mutability":"mutable","name":"b","nameLocation":"9243:1:3","nodeType":"VariableDeclaration","scope":715,"src":"9235:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":695,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9235:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9223:22:3"},"returnParameters":{"id":700,"nodeType":"ParameterList","parameters":[{"constant":false,"id":699,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":715,"src":"9268:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":698,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9268:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9267:9:3"},"scope":727,"src":"9205:147:3","stateMutability":"pure","virtual":false,"visibility":"private"},{"body":{"id":725,"nodeType":"Block","src":"9441:178:3","statements":[{"AST":{"nodeType":"YulBlock","src":"9503:110:3","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9524:4:3","type":"","value":"0x00"},{"name":"a","nodeType":"YulIdentifier","src":"9530:1:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9517:6:3"},"nodeType":"YulFunctionCall","src":"9517:15:3"},"nodeType":"YulExpressionStatement","src":"9517:15:3"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9552:4:3","type":"","value":"0x20"},{"name":"b","nodeType":"YulIdentifier","src":"9558:1:3"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9545:6:3"},"nodeType":"YulFunctionCall","src":"9545:15:3"},"nodeType":"YulExpressionStatement","src":"9545:15:3"},{"nodeType":"YulAssignment","src":"9573:30:3","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"9592:4:3","type":"","value":"0x00"},{"kind":"number","nodeType":"YulLiteral","src":"9598:4:3","type":"","value":"0x40"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"9582:9:3"},"nodeType":"YulFunctionCall","src":"9582:21:3"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"9573:5:3"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"paris","externalReferences":[{"declaration":717,"isOffset":false,"isSlot":false,"src":"9530:1:3","valueSize":1},{"declaration":719,"isOffset":false,"isSlot":false,"src":"9558:1:3","valueSize":1},{"declaration":722,"isOffset":false,"isSlot":false,"src":"9573:5:3","valueSize":1}],"id":724,"nodeType":"InlineAssembly","src":"9494:119:3"}]},"id":726,"implemented":true,"kind":"function","modifiers":[],"name":"_efficientHash","nameLocation":"9367:14:3","nodeType":"FunctionDefinition","parameters":{"id":720,"nodeType":"ParameterList","parameters":[{"constant":false,"id":717,"mutability":"mutable","name":"a","nameLocation":"9390:1:3","nodeType":"VariableDeclaration","scope":726,"src":"9382:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":716,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9382:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":719,"mutability":"mutable","name":"b","nameLocation":"9401:1:3","nodeType":"VariableDeclaration","scope":726,"src":"9393:9:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":718,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9393:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9381:22:3"},"returnParameters":{"id":723,"nodeType":"ParameterList","parameters":[{"constant":false,"id":722,"mutability":"mutable","name":"value","nameLocation":"9434:5:3","nodeType":"VariableDeclaration","scope":726,"src":"9426:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":721,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9426:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"9425:15:3"},"scope":727,"src":"9358:261:3","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":728,"src":"802:8819:3","usedErrors":[]}],"src":"118:9504:3"},"id":3},"contracts/ProofChainVoting.sol":{"ast":{"absolutePath":"contracts/ProofChainVoting.sol","exportedSymbols":{"AggregatorV3Interface":[751],"Context":[199],"IERC20":[779],"MerkleProof":[727],"Ownable":[112],"ProofChainVoting":[1810],"ReentrancyGuard":[177]},"id":1811,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":729,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"32:24:4"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":730,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1811,"sourceUnit":113,"src":"58:52:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/security/ReentrancyGuard.sol","file":"@openzeppelin/contracts/security/ReentrancyGuard.sol","id":731,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1811,"sourceUnit":178,"src":"111:62:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","file":"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol","id":732,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1811,"sourceUnit":728,"src":"174:68:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"AggregatorV3Interface","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":751,"linearizedBaseContracts":[751],"name":"AggregatorV3Interface","nameLocation":"254:21:4","nodeType":"ContractDefinition","nodes":[{"functionSelector":"feaf968c","id":745,"implemented":false,"kind":"function","modifiers":[],"name":"latestRoundData","nameLocation":"291:15:4","nodeType":"FunctionDefinition","parameters":{"id":733,"nodeType":"ParameterList","parameters":[],"src":"306:2:4"},"returnParameters":{"id":744,"nodeType":"ParameterList","parameters":[{"constant":false,"id":735,"mutability":"mutable","name":"roundId","nameLocation":"348:7:4","nodeType":"VariableDeclaration","scope":745,"src":"341:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":734,"name":"uint80","nodeType":"ElementaryTypeName","src":"341:6:4","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"},{"constant":false,"id":737,"mutability":"mutable","name":"answer","nameLocation":"372:6:4","nodeType":"VariableDeclaration","scope":745,"src":"365:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":736,"name":"int256","nodeType":"ElementaryTypeName","src":"365:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":739,"mutability":"mutable","name":"startedAt","nameLocation":"396:9:4","nodeType":"VariableDeclaration","scope":745,"src":"388:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":738,"name":"uint256","nodeType":"ElementaryTypeName","src":"388:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":741,"mutability":"mutable","name":"updatedAt","nameLocation":"423:9:4","nodeType":"VariableDeclaration","scope":745,"src":"415:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":740,"name":"uint256","nodeType":"ElementaryTypeName","src":"415:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":743,"mutability":"mutable","name":"answeredInRound","nameLocation":"449:15:4","nodeType":"VariableDeclaration","scope":745,"src":"442:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":742,"name":"uint80","nodeType":"ElementaryTypeName","src":"442:6:4","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"331:139:4"},"scope":751,"src":"282:189:4","stateMutability":"view","virtual":false,"visibility":"external"},{"functionSelector":"313ce567","id":750,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"485:8:4","nodeType":"FunctionDefinition","parameters":{"id":746,"nodeType":"ParameterList","parameters":[],"src":"493:2:4"},"returnParameters":{"id":749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":748,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":750,"src":"519:5:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":747,"name":"uint8","nodeType":"ElementaryTypeName","src":"519:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"518:7:4"},"scope":751,"src":"476:50:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1811,"src":"244:284:4","usedErrors":[]},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":779,"linearizedBaseContracts":[779],"name":"IERC20","nameLocation":"540:6:4","nodeType":"ContractDefinition","nodes":[{"functionSelector":"23b872dd","id":762,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"562:12:4","nodeType":"FunctionDefinition","parameters":{"id":758,"nodeType":"ParameterList","parameters":[{"constant":false,"id":753,"mutability":"mutable","name":"from","nameLocation":"583:4:4","nodeType":"VariableDeclaration","scope":762,"src":"575:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":752,"name":"address","nodeType":"ElementaryTypeName","src":"575:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":755,"mutability":"mutable","name":"to","nameLocation":"597:2:4","nodeType":"VariableDeclaration","scope":762,"src":"589:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":754,"name":"address","nodeType":"ElementaryTypeName","src":"589:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":757,"mutability":"mutable","name":"amount","nameLocation":"609:6:4","nodeType":"VariableDeclaration","scope":762,"src":"601:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":756,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"574:42:4"},"returnParameters":{"id":761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":760,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":762,"src":"635:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":759,"name":"bool","nodeType":"ElementaryTypeName","src":"635:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"634:6:4"},"scope":779,"src":"553:88:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"a9059cbb","id":771,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"655:8:4","nodeType":"FunctionDefinition","parameters":{"id":767,"nodeType":"ParameterList","parameters":[{"constant":false,"id":764,"mutability":"mutable","name":"to","nameLocation":"672:2:4","nodeType":"VariableDeclaration","scope":771,"src":"664:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":763,"name":"address","nodeType":"ElementaryTypeName","src":"664:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":766,"mutability":"mutable","name":"amount","nameLocation":"684:6:4","nodeType":"VariableDeclaration","scope":771,"src":"676:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":765,"name":"uint256","nodeType":"ElementaryTypeName","src":"676:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"663:28:4"},"returnParameters":{"id":770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":769,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":771,"src":"710:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":768,"name":"bool","nodeType":"ElementaryTypeName","src":"710:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"709:6:4"},"scope":779,"src":"646:70:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"functionSelector":"70a08231","id":778,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"730:9:4","nodeType":"FunctionDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":773,"mutability":"mutable","name":"account","nameLocation":"748:7:4","nodeType":"VariableDeclaration","scope":778,"src":"740:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":772,"name":"address","nodeType":"ElementaryTypeName","src":"740:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"739:17:4"},"returnParameters":{"id":777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":778,"src":"780:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":775,"name":"uint256","nodeType":"ElementaryTypeName","src":"780:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"779:9:4"},"scope":779,"src":"721:68:4","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1811,"src":"530:261:4","usedErrors":[]},{"abstract":false,"baseContracts":[{"baseName":{"id":781,"name":"Ownable","nameLocations":["1180:7:4"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"1180:7:4"},"id":782,"nodeType":"InheritanceSpecifier","src":"1180:7:4"},{"baseName":{"id":783,"name":"ReentrancyGuard","nameLocations":["1189:15:4"],"nodeType":"IdentifierPath","referencedDeclaration":177,"src":"1189:15:4"},"id":784,"nodeType":"InheritanceSpecifier","src":"1189:15:4"}],"canonicalName":"ProofChainVoting","contractDependencies":[],"contractKind":"contract","documentation":{"id":780,"nodeType":"StructuredDocumentation","src":"793:357:4","text":" @title ProofChainVoting\n @dev A simplified voting contract with token staking and quadratic voting\n Features:\n - Simple direct voting (no commit-reveal)\n - Multiple token support (ETH, ERC20 tokens)\n - Quadratic voting based on USD value\n - Identity verification via Merkle proofs\n - Configurable voting periods (1 minute to 7 days)"},"fullyImplemented":true,"id":1810,"linearizedBaseContracts":[1810,177,112,199],"name":"ProofChainVoting","nameLocation":"1160:16:4","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ProofChainVoting.VoteOption","id":788,"members":[{"id":785,"name":"REJECT","nameLocation":"1278:6:4","nodeType":"EnumValue","src":"1278:6:4"},{"id":786,"name":"APPROVE","nameLocation":"1286:7:4","nodeType":"EnumValue","src":"1286:7:4"},{"id":787,"name":"ABSTAIN","nameLocation":"1295:7:4","nodeType":"EnumValue","src":"1295:7:4"}],"name":"VoteOption","nameLocation":"1265:10:4","nodeType":"EnumDefinition","src":"1260:44:4"},{"canonicalName":"ProofChainVoting.TokenType","id":798,"members":[{"id":789,"name":"NONE","nameLocation":"1326:4:4","nodeType":"EnumValue","src":"1326:4:4"},{"id":790,"name":"ETH","nameLocation":"1332:3:4","nodeType":"EnumValue","src":"1332:3:4"},{"id":791,"name":"FIL","nameLocation":"1337:3:4","nodeType":"EnumValue","src":"1337:3:4"},{"id":792,"name":"USDC","nameLocation":"1342:4:4","nodeType":"EnumValue","src":"1342:4:4"},{"id":793,"name":"USDT","nameLocation":"1348:4:4","nodeType":"EnumValue","src":"1348:4:4"},{"id":794,"name":"DAI","nameLocation":"1354:3:4","nodeType":"EnumValue","src":"1354:3:4"},{"id":795,"name":"WBTC","nameLocation":"1359:4:4","nodeType":"EnumValue","src":"1359:4:4"},{"id":796,"name":"LINK","nameLocation":"1365:4:4","nodeType":"EnumValue","src":"1365:4:4"},{"id":797,"name":"UNI","nameLocation":"1371:3:4","nodeType":"EnumValue","src":"1371:3:4"}],"name":"TokenType","nameLocation":"1314:9:4","nodeType":"EnumDefinition","src":"1309:67:4"},{"canonicalName":"ProofChainVoting.TokenInfo","id":811,"members":[{"constant":false,"id":800,"mutability":"mutable","name":"tokenAddress","nameLocation":"1467:12:4","nodeType":"VariableDeclaration","scope":811,"src":"1459:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":799,"name":"address","nodeType":"ElementaryTypeName","src":"1459:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":802,"mutability":"mutable","name":"priceOracle","nameLocation":"1542:11:4","nodeType":"VariableDeclaration","scope":811,"src":"1534:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":801,"name":"address","nodeType":"ElementaryTypeName","src":"1534:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":804,"mutability":"mutable","name":"decimals","nameLocation":"1609:8:4","nodeType":"VariableDeclaration","scope":811,"src":"1603:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":803,"name":"uint8","nodeType":"ElementaryTypeName","src":"1603:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":806,"mutability":"mutable","name":"bonusMultiplier","nameLocation":"1663:15:4","nodeType":"VariableDeclaration","scope":811,"src":"1655:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":805,"name":"uint256","nodeType":"ElementaryTypeName","src":"1655:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":808,"mutability":"mutable","name":"minStakeAmount","nameLocation":"1731:14:4","nodeType":"VariableDeclaration","scope":811,"src":"1723:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":807,"name":"uint256","nodeType":"ElementaryTypeName","src":"1723:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":810,"mutability":"mutable","name":"isActive","nameLocation":"1786:8:4","nodeType":"VariableDeclaration","scope":811,"src":"1781:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":809,"name":"bool","nodeType":"ElementaryTypeName","src":"1781:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"TokenInfo","nameLocation":"1439:9:4","nodeType":"StructDefinition","scope":1810,"src":"1432:418:4","visibility":"public"},{"canonicalName":"ProofChainVoting.ContentInfo","id":835,"members":[{"constant":false,"id":813,"mutability":"mutable","name":"ipfsHash","nameLocation":"1896:8:4","nodeType":"VariableDeclaration","scope":835,"src":"1889:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":812,"name":"string","nodeType":"ElementaryTypeName","src":"1889:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":815,"mutability":"mutable","name":"submissionTime","nameLocation":"1955:14:4","nodeType":"VariableDeclaration","scope":835,"src":"1947:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":814,"name":"uint256","nodeType":"ElementaryTypeName","src":"1947:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":817,"mutability":"mutable","name":"votingDeadline","nameLocation":"2019:14:4","nodeType":"VariableDeclaration","scope":835,"src":"2011:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":816,"name":"uint256","nodeType":"ElementaryTypeName","src":"2011:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":819,"mutability":"mutable","name":"creator","nameLocation":"2073:7:4","nodeType":"VariableDeclaration","scope":835,"src":"2065:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":818,"name":"address","nodeType":"ElementaryTypeName","src":"2065:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":821,"mutability":"mutable","name":"isActive","nameLocation":"2123:8:4","nodeType":"VariableDeclaration","scope":835,"src":"2118:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":820,"name":"bool","nodeType":"ElementaryTypeName","src":"2118:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":823,"mutability":"mutable","name":"isFinalized","nameLocation":"2185:11:4","nodeType":"VariableDeclaration","scope":835,"src":"2180:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":822,"name":"bool","nodeType":"ElementaryTypeName","src":"2180:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":827,"mutability":"mutable","name":"voteDistribution","nameLocation":"2256:16:4","nodeType":"VariableDeclaration","scope":835,"src":"2245:27:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage_ptr","typeString":"uint256[3]"},"typeName":{"baseType":{"id":824,"name":"uint256","nodeType":"ElementaryTypeName","src":"2245:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":826,"length":{"hexValue":"33","id":825,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2253:1:4","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"ArrayTypeName","src":"2245:10:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage_ptr","typeString":"uint256[3]"}},"visibility":"internal"},{"constant":false,"id":829,"mutability":"mutable","name":"participantCount","nameLocation":"2327:16:4","nodeType":"VariableDeclaration","scope":835,"src":"2319:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":828,"name":"uint256","nodeType":"ElementaryTypeName","src":"2319:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":831,"mutability":"mutable","name":"totalUSDValue","nameLocation":"2387:13:4","nodeType":"VariableDeclaration","scope":835,"src":"2379:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":830,"name":"uint256","nodeType":"ElementaryTypeName","src":"2379:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":834,"mutability":"mutable","name":"winningOption","nameLocation":"2450:13:4","nodeType":"VariableDeclaration","scope":835,"src":"2439:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"},"typeName":{"id":833,"nodeType":"UserDefinedTypeName","pathNode":{"id":832,"name":"VoteOption","nameLocations":["2439:10:4"],"nodeType":"IdentifierPath","referencedDeclaration":788,"src":"2439:10:4"},"referencedDeclaration":788,"src":"2439:10:4","typeDescriptions":{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"}},"visibility":"internal"}],"name":"ContentInfo","nameLocation":"1867:11:4","nodeType":"StructDefinition","scope":1810,"src":"1860:633:4","visibility":"public"},{"canonicalName":"ProofChainVoting.UserVote","id":852,"members":[{"constant":false,"id":837,"mutability":"mutable","name":"hasVoted","nameLocation":"2534:8:4","nodeType":"VariableDeclaration","scope":852,"src":"2529:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":836,"name":"bool","nodeType":"ElementaryTypeName","src":"2529:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":840,"mutability":"mutable","name":"vote","nameLocation":"2600:4:4","nodeType":"VariableDeclaration","scope":852,"src":"2589:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"},"typeName":{"id":839,"nodeType":"UserDefinedTypeName","pathNode":{"id":838,"name":"VoteOption","nameLocations":["2589:10:4"],"nodeType":"IdentifierPath","referencedDeclaration":788,"src":"2589:10:4"},"referencedDeclaration":788,"src":"2589:10:4","typeDescriptions":{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"}},"visibility":"internal"},{"constant":false,"id":842,"mutability":"mutable","name":"confidence","nameLocation":"2651:10:4","nodeType":"VariableDeclaration","scope":852,"src":"2645:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":841,"name":"uint8","nodeType":"ElementaryTypeName","src":"2645:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":845,"mutability":"mutable","name":"tokenType","nameLocation":"2716:9:4","nodeType":"VariableDeclaration","scope":852,"src":"2706:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"},"typeName":{"id":844,"nodeType":"UserDefinedTypeName","pathNode":{"id":843,"name":"TokenType","nameLocations":["2706:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":798,"src":"2706:9:4"},"referencedDeclaration":798,"src":"2706:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"}},"visibility":"internal"},{"constant":false,"id":847,"mutability":"mutable","name":"stakeAmount","nameLocation":"2774:11:4","nodeType":"VariableDeclaration","scope":852,"src":"2766:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":846,"name":"uint256","nodeType":"ElementaryTypeName","src":"2766:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":849,"mutability":"mutable","name":"votingWeight","nameLocation":"2825:12:4","nodeType":"VariableDeclaration","scope":852,"src":"2817:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":848,"name":"uint256","nodeType":"ElementaryTypeName","src":"2817:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":851,"mutability":"mutable","name":"timestamp","nameLocation":"2887:9:4","nodeType":"VariableDeclaration","scope":852,"src":"2879:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":850,"name":"uint256","nodeType":"ElementaryTypeName","src":"2879:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"UserVote","nameLocation":"2510:8:4","nodeType":"StructDefinition","scope":1810,"src":"2503:429:4","visibility":"public"},{"constant":false,"functionSelector":"2eb4a7ab","id":854,"mutability":"mutable","name":"merkleRoot","nameLocation":"3011:10:4","nodeType":"VariableDeclaration","scope":1810,"src":"2996:25:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":853,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2996:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":false,"functionSelector":"e6a9aba3","id":856,"mutability":"mutable","name":"contentCounter","nameLocation":"3102:14:4","nodeType":"VariableDeclaration","scope":1810,"src":"3087:29:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":855,"name":"uint256","nodeType":"ElementaryTypeName","src":"3087:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":true,"functionSelector":"215809ca","id":859,"mutability":"constant","name":"MIN_VOTING_PERIOD","nameLocation":"3188:17:4","nodeType":"VariableDeclaration","scope":1810,"src":"3164:53:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":857,"name":"uint256","nodeType":"ElementaryTypeName","src":"3164:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3208:9:4","subdenomination":"minutes","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"1"},"visibility":"public"},{"constant":true,"functionSelector":"a64e024a","id":862,"mutability":"constant","name":"MAX_VOTING_PERIOD","nameLocation":"3273:17:4","nodeType":"VariableDeclaration","scope":1810,"src":"3249:50:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":860,"name":"uint256","nodeType":"ElementaryTypeName","src":"3249:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"37","id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3293:6:4","subdenomination":"days","typeDescriptions":{"typeIdentifier":"t_rational_604800_by_1","typeString":"int_const 604800"},"value":"7"},"visibility":"public"},{"constant":false,"functionSelector":"3f572d36","id":868,"mutability":"mutable","name":"supportedTokens","nameLocation":"3394:15:4","nodeType":"VariableDeclaration","scope":1810,"src":"3355:54:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_TokenType_$798_$_t_struct$_TokenInfo_$811_storage_$","typeString":"mapping(enum ProofChainVoting.TokenType => struct ProofChainVoting.TokenInfo)"},"typeName":{"id":867,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":864,"nodeType":"UserDefinedTypeName","pathNode":{"id":863,"name":"TokenType","nameLocations":["3363:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":798,"src":"3363:9:4"},"referencedDeclaration":798,"src":"3363:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"}},"nodeType":"Mapping","src":"3355:31:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_TokenType_$798_$_t_struct$_TokenInfo_$811_storage_$","typeString":"mapping(enum ProofChainVoting.TokenType => struct ProofChainVoting.TokenInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":866,"nodeType":"UserDefinedTypeName","pathNode":{"id":865,"name":"TokenInfo","nameLocations":["3376:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":811,"src":"3376:9:4"},"referencedDeclaration":811,"src":"3376:9:4","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$811_storage_ptr","typeString":"struct ProofChainVoting.TokenInfo"}}},"visibility":"public"},{"constant":false,"functionSelector":"b5ecf912","id":873,"mutability":"mutable","name":"contents","nameLocation":"3454:8:4","nodeType":"VariableDeclaration","scope":1810,"src":"3415:47:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ContentInfo_$835_storage_$","typeString":"mapping(uint256 => struct ProofChainVoting.ContentInfo)"},"typeName":{"id":872,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":869,"name":"uint256","nodeType":"ElementaryTypeName","src":"3423:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3415:31:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ContentInfo_$835_storage_$","typeString":"mapping(uint256 => struct ProofChainVoting.ContentInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":871,"nodeType":"UserDefinedTypeName","pathNode":{"id":870,"name":"ContentInfo","nameLocations":["3434:11:4"],"nodeType":"IdentifierPath","referencedDeclaration":835,"src":"3434:11:4"},"referencedDeclaration":835,"src":"3434:11:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_storage_ptr","typeString":"struct ProofChainVoting.ContentInfo"}}},"visibility":"public"},{"constant":false,"functionSelector":"fe5b3e3b","id":880,"mutability":"mutable","name":"userVotes","nameLocation":"3524:9:4","nodeType":"VariableDeclaration","scope":1810,"src":"3468:65:4","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserVote_$852_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct ProofChainVoting.UserVote))"},"typeName":{"id":879,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":874,"name":"uint256","nodeType":"ElementaryTypeName","src":"3476:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"3468:48:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserVote_$852_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct ProofChainVoting.UserVote))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":878,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":875,"name":"address","nodeType":"ElementaryTypeName","src":"3495:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"3487:28:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserVote_$852_storage_$","typeString":"mapping(address => struct ProofChainVoting.UserVote)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":877,"nodeType":"UserDefinedTypeName","pathNode":{"id":876,"name":"UserVote","nameLocations":["3506:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":852,"src":"3506:8:4"},"referencedDeclaration":852,"src":"3506:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_UserVote_$852_storage_ptr","typeString":"struct ProofChainVoting.UserVote"}}}},"visibility":"public"},{"anonymous":false,"eventSelector":"bc19d37dc499c8455564517e576d7d380a7a6f6f340aefd0ee7007abb30a6c42","id":890,"name":"ContentSubmitted","nameLocation":"3595:16:4","nodeType":"EventDefinition","parameters":{"id":889,"nodeType":"ParameterList","parameters":[{"constant":false,"id":882,"indexed":true,"mutability":"mutable","name":"contentId","nameLocation":"3637:9:4","nodeType":"VariableDeclaration","scope":890,"src":"3621:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":881,"name":"uint256","nodeType":"ElementaryTypeName","src":"3621:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":884,"indexed":false,"mutability":"mutable","name":"ipfsHash","nameLocation":"3663:8:4","nodeType":"VariableDeclaration","scope":890,"src":"3656:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":883,"name":"string","nodeType":"ElementaryTypeName","src":"3656:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":886,"indexed":false,"mutability":"mutable","name":"votingDeadline","nameLocation":"3689:14:4","nodeType":"VariableDeclaration","scope":890,"src":"3681:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":885,"name":"uint256","nodeType":"ElementaryTypeName","src":"3681:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":888,"indexed":true,"mutability":"mutable","name":"creator","nameLocation":"3729:7:4","nodeType":"VariableDeclaration","scope":890,"src":"3713:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"3713:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3611:131:4"},"src":"3589:154:4"},{"anonymous":false,"eventSelector":"f641c07ff9548b4d94093e2363e7bead14740019250d143f6e940989f4e91bb3","id":908,"name":"VoteSubmitted","nameLocation":"3759:13:4","nodeType":"EventDefinition","parameters":{"id":907,"nodeType":"ParameterList","parameters":[{"constant":false,"id":892,"indexed":true,"mutability":"mutable","name":"contentId","nameLocation":"3798:9:4","nodeType":"VariableDeclaration","scope":908,"src":"3782:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":891,"name":"uint256","nodeType":"ElementaryTypeName","src":"3782:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":894,"indexed":true,"mutability":"mutable","name":"voter","nameLocation":"3833:5:4","nodeType":"VariableDeclaration","scope":908,"src":"3817:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":893,"name":"address","nodeType":"ElementaryTypeName","src":"3817:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":897,"indexed":false,"mutability":"mutable","name":"vote","nameLocation":"3859:4:4","nodeType":"VariableDeclaration","scope":908,"src":"3848:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"},"typeName":{"id":896,"nodeType":"UserDefinedTypeName","pathNode":{"id":895,"name":"VoteOption","nameLocations":["3848:10:4"],"nodeType":"IdentifierPath","referencedDeclaration":788,"src":"3848:10:4"},"referencedDeclaration":788,"src":"3848:10:4","typeDescriptions":{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"}},"visibility":"internal"},{"constant":false,"id":899,"indexed":false,"mutability":"mutable","name":"confidence","nameLocation":"3879:10:4","nodeType":"VariableDeclaration","scope":908,"src":"3873:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":898,"name":"uint8","nodeType":"ElementaryTypeName","src":"3873:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":902,"indexed":false,"mutability":"mutable","name":"tokenType","nameLocation":"3909:9:4","nodeType":"VariableDeclaration","scope":908,"src":"3899:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"},"typeName":{"id":901,"nodeType":"UserDefinedTypeName","pathNode":{"id":900,"name":"TokenType","nameLocations":["3899:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":798,"src":"3899:9:4"},"referencedDeclaration":798,"src":"3899:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"}},"visibility":"internal"},{"constant":false,"id":904,"indexed":false,"mutability":"mutable","name":"stakeAmount","nameLocation":"3936:11:4","nodeType":"VariableDeclaration","scope":908,"src":"3928:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":903,"name":"uint256","nodeType":"ElementaryTypeName","src":"3928:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":906,"indexed":false,"mutability":"mutable","name":"votingWeight","nameLocation":"3965:12:4","nodeType":"VariableDeclaration","scope":908,"src":"3957:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":905,"name":"uint256","nodeType":"ElementaryTypeName","src":"3957:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3772:211:4"},"src":"3753:231:4"},{"anonymous":false,"eventSelector":"bbbe9b42ddfa0692cd5f3dc618525dde4b8fe438fe573f13b3fa9fb1287d6fcd","id":919,"name":"VotingFinalized","nameLocation":"4000:15:4","nodeType":"EventDefinition","parameters":{"id":918,"nodeType":"ParameterList","parameters":[{"constant":false,"id":910,"indexed":true,"mutability":"mutable","name":"contentId","nameLocation":"4041:9:4","nodeType":"VariableDeclaration","scope":919,"src":"4025:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":909,"name":"uint256","nodeType":"ElementaryTypeName","src":"4025:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":913,"indexed":false,"mutability":"mutable","name":"winningOption","nameLocation":"4071:13:4","nodeType":"VariableDeclaration","scope":919,"src":"4060:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"},"typeName":{"id":912,"nodeType":"UserDefinedTypeName","pathNode":{"id":911,"name":"VoteOption","nameLocations":["4060:10:4"],"nodeType":"IdentifierPath","referencedDeclaration":788,"src":"4060:10:4"},"referencedDeclaration":788,"src":"4060:10:4","typeDescriptions":{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"}},"visibility":"internal"},{"constant":false,"id":915,"indexed":false,"mutability":"mutable","name":"totalParticipants","nameLocation":"4102:17:4","nodeType":"VariableDeclaration","scope":919,"src":"4094:25:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":914,"name":"uint256","nodeType":"ElementaryTypeName","src":"4094:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":917,"indexed":false,"mutability":"mutable","name":"totalUSDValue","nameLocation":"4137:13:4","nodeType":"VariableDeclaration","scope":919,"src":"4129:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":916,"name":"uint256","nodeType":"ElementaryTypeName","src":"4129:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4015:141:4"},"src":"3994:163:4"},{"anonymous":false,"eventSelector":"d7e0ffe3c5e893c914e856817d8bfcf09e393c7926b6cf6fd55867404db05cb1","id":928,"name":"TokenAdded","nameLocation":"4173:10:4","nodeType":"EventDefinition","parameters":{"id":927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":922,"indexed":true,"mutability":"mutable","name":"tokenType","nameLocation":"4211:9:4","nodeType":"VariableDeclaration","scope":928,"src":"4193:27:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"},"typeName":{"id":921,"nodeType":"UserDefinedTypeName","pathNode":{"id":920,"name":"TokenType","nameLocations":["4193:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":798,"src":"4193:9:4"},"referencedDeclaration":798,"src":"4193:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"}},"visibility":"internal"},{"constant":false,"id":924,"indexed":false,"mutability":"mutable","name":"tokenAddress","nameLocation":"4238:12:4","nodeType":"VariableDeclaration","scope":928,"src":"4230:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":923,"name":"address","nodeType":"ElementaryTypeName","src":"4230:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":926,"indexed":false,"mutability":"mutable","name":"priceOracle","nameLocation":"4268:11:4","nodeType":"VariableDeclaration","scope":928,"src":"4260:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":925,"name":"address","nodeType":"ElementaryTypeName","src":"4260:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4183:102:4"},"src":"4167:119:4"},{"body":{"id":941,"nodeType":"Block","src":"4379:69:4","statements":[{"expression":{"id":935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":933,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"4389:10:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":934,"name":"_merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":930,"src":"4402:11:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"4389:24:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":936,"nodeType":"ExpressionStatement","src":"4389:24:4"},{"expression":{"id":939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":937,"name":"contentCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"4423:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":938,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4440:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4423:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":940,"nodeType":"ExpressionStatement","src":"4423:18:4"}]},"id":942,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"mutability":"mutable","name":"_merkleRoot","nameLocation":"4366:11:4","nodeType":"VariableDeclaration","scope":942,"src":"4358:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":929,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4358:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4357:21:4"},"returnParameters":{"id":932,"nodeType":"ParameterList","parameters":[],"src":"4379:0:4"},"scope":1810,"src":"4346:102:4","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":1030,"nodeType":"Block","src":"4862:951:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":955,"name":"ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"4886:8:4","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}],"id":954,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4880:5:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":953,"name":"bytes","nodeType":"ElementaryTypeName","src":"4880:5:4","typeDescriptions":{}}},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4880:15:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"id":957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4896:6:4","memberName":"length","nodeType":"MemberAccess","src":"4880:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4905:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4880:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4950465320686173682063616e6e6f7420626520656d707479","id":960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4908:27:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9133b9f3350abb9ad5c186a964d7544d54ce63c05ebecb3c7513f09140c5a07d","typeString":"literal_string \"IPFS hash cannot be empty\""},"value":"IPFS hash cannot be empty"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9133b9f3350abb9ad5c186a964d7544d54ce63c05ebecb3c7513f09140c5a07d","typeString":"literal_string \"IPFS hash cannot be empty\""}],"id":952,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4872:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4872:64:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":962,"nodeType":"ExpressionStatement","src":"4872:64:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":970,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":964,"name":"votingDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"4967:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":965,"name":"MIN_VOTING_PERIOD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":859,"src":"4985:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4967:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":969,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":967,"name":"votingDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"5006:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":968,"name":"MAX_VOTING_PERIOD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":862,"src":"5024:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5006:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4967:74:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420766f74696e67206475726174696f6e","id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5055:25:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c51d24618cfb41a0f477b1677e478afabc3ace7e5bf45588be6fb173ad772bca","typeString":"literal_string \"Invalid voting duration\""},"value":"Invalid voting duration"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c51d24618cfb41a0f477b1677e478afabc3ace7e5bf45588be6fb173ad772bca","typeString":"literal_string \"Invalid voting duration\""}],"id":963,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4946:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":972,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4946:144:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":973,"nodeType":"ExpressionStatement","src":"4946:144:4"},{"expression":{"id":975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5109:16:4","subExpression":{"id":974,"name":"contentCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"5109:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":976,"nodeType":"ExpressionStatement","src":"5109:16:4"},{"assignments":[978],"declarations":[{"constant":false,"id":978,"mutability":"mutable","name":"contentId","nameLocation":"5143:9:4","nodeType":"VariableDeclaration","scope":1030,"src":"5135:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":977,"name":"uint256","nodeType":"ElementaryTypeName","src":"5135:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":980,"initialValue":{"id":979,"name":"contentCounter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":856,"src":"5155:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5135:34:4"},{"assignments":[982],"declarations":[{"constant":false,"id":982,"mutability":"mutable","name":"votingDeadline","nameLocation":"5187:14:4","nodeType":"VariableDeclaration","scope":1030,"src":"5179:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":981,"name":"uint256","nodeType":"ElementaryTypeName","src":"5179:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":987,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":986,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":983,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5204:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5210:9:4","memberName":"timestamp","nodeType":"MemberAccess","src":"5204:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":985,"name":"votingDuration","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"5222:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5204:32:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5179:57:4"},{"expression":{"id":1018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":988,"name":"contents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"5255:8:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ContentInfo_$835_storage_$","typeString":"mapping(uint256 => struct ProofChainVoting.ContentInfo storage ref)"}},"id":990,"indexExpression":{"id":989,"name":"contentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"5264:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5255:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_storage","typeString":"struct ProofChainVoting.ContentInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":992,"name":"ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"5313:8:4","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"id":993,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"5351:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5357:9:4","memberName":"timestamp","nodeType":"MemberAccess","src":"5351:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":995,"name":"votingDeadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"5396:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":996,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5433:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5437:6:4","memberName":"sender","nodeType":"MemberAccess","src":"5433:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"74727565","id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5467:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"66616c7365","id":999,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5498:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"components":[{"arguments":[{"hexValue":"30","id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5544:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1001,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5536:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1000,"name":"uint256","nodeType":"ElementaryTypeName","src":"5536:7:4","typeDescriptions":{}}},"id":1003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5536:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5556:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1005,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5548:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1004,"name":"uint256","nodeType":"ElementaryTypeName","src":"5548:7:4","typeDescriptions":{}}},"id":1007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5548:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"hexValue":"30","id":1010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5568:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1009,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5560:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1008,"name":"uint256","nodeType":"ElementaryTypeName","src":"5560:7:4","typeDescriptions":{}}},"id":1011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5560:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1012,"isConstant":false,"isInlineArray":true,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"5535:36:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},{"hexValue":"30","id":1013,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5603:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":1014,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5633:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":1015,"name":"VoteOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"5663:10:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VoteOption_$788_$","typeString":"type(enum ProofChainVoting.VoteOption)"}},"id":1016,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5674:6:4","memberName":"REJECT","nodeType":"MemberAccess","referencedDeclaration":785,"src":"5663:17:4","typeDescriptions":{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"}],"id":991,"name":"ContentInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":835,"src":"5277:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ContentInfo_$835_storage_ptr_$","typeString":"type(struct ProofChainVoting.ContentInfo storage pointer)"}},"id":1017,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["5303:8:4","5335:14:4","5380:14:4","5424:7:4","5457:8:4","5485:11:4","5517:16:4","5585:16:4","5618:13:4","5648:13:4"],"names":["ipfsHash","submissionTime","votingDeadline","creator","isActive","isFinalized","voteDistribution","participantCount","totalUSDValue","winningOption"],"nodeType":"FunctionCall","src":"5277:414:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_memory_ptr","typeString":"struct ProofChainVoting.ContentInfo memory"}},"src":"5255:436:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_storage","typeString":"struct ProofChainVoting.ContentInfo storage ref"}},"id":1019,"nodeType":"ExpressionStatement","src":"5255:436:4"},{"eventCall":{"arguments":[{"id":1021,"name":"contentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"5732:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1022,"name":"ipfsHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":945,"src":"5743:8:4","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":1023,"name":"votingDeadline","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"5753:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1024,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5769:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5773:6:4","memberName":"sender","nodeType":"MemberAccess","src":"5769:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1020,"name":"ContentSubmitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":890,"src":"5715:16:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$_t_address_$returns$__$","typeString":"function (uint256,string memory,uint256,address)"}},"id":1026,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5715:65:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1027,"nodeType":"EmitStatement","src":"5710:70:4"},{"expression":{"id":1028,"name":"contentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":978,"src":"5797:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":951,"id":1029,"nodeType":"Return","src":"5790:16:4"}]},"documentation":{"id":943,"nodeType":"StructuredDocumentation","src":"4515:220:4","text":" @dev Submit content for voting\n @param ipfsHash IPFS hash of the content\n @param votingDuration Duration of voting period in seconds\n @return contentId The ID of the submitted content"},"functionSelector":"dad3fc13","id":1031,"implemented":true,"kind":"function","modifiers":[],"name":"submitContent","nameLocation":"4749:13:4","nodeType":"FunctionDefinition","parameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":945,"mutability":"mutable","name":"ipfsHash","nameLocation":"4788:8:4","nodeType":"VariableDeclaration","scope":1031,"src":"4772:24:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":944,"name":"string","nodeType":"ElementaryTypeName","src":"4772:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":947,"mutability":"mutable","name":"votingDuration","nameLocation":"4814:14:4","nodeType":"VariableDeclaration","scope":1031,"src":"4806:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":946,"name":"uint256","nodeType":"ElementaryTypeName","src":"4806:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4762:72:4"},"returnParameters":{"id":951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":950,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1031,"src":"4853:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":949,"name":"uint256","nodeType":"ElementaryTypeName","src":"4853:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4852:9:4"},"scope":1810,"src":"4740:1073:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1247,"nodeType":"Block","src":"6477:2098:4","statements":[{"assignments":[1054],"declarations":[{"constant":false,"id":1054,"mutability":"mutable","name":"content","nameLocation":"6507:7:4","nodeType":"VariableDeclaration","scope":1247,"src":"6487:27:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_storage_ptr","typeString":"struct ProofChainVoting.ContentInfo"},"typeName":{"id":1053,"nodeType":"UserDefinedTypeName","pathNode":{"id":1052,"name":"ContentInfo","nameLocations":["6487:11:4"],"nodeType":"IdentifierPath","referencedDeclaration":835,"src":"6487:11:4"},"referencedDeclaration":835,"src":"6487:11:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_storage_ptr","typeString":"struct ProofChainVoting.ContentInfo"}},"visibility":"internal"}],"id":1058,"initialValue":{"baseExpression":{"id":1055,"name":"contents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"6517:8:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ContentInfo_$835_storage_$","typeString":"mapping(uint256 => struct ProofChainVoting.ContentInfo storage ref)"}},"id":1057,"indexExpression":{"id":1056,"name":"contentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"6526:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6517:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_storage","typeString":"struct ProofChainVoting.ContentInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"6487:49:4"},{"expression":{"arguments":[{"expression":{"id":1060,"name":"content","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"6554:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_storage_ptr","typeString":"struct ProofChainVoting.ContentInfo storage pointer"}},"id":1061,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6562:8:4","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":821,"src":"6554:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6e74656e74206e6f7420666f756e64206f7220696e616374697665","id":1062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6572:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad655b9ea313567c8b79e7912f2f3b42d4cc4c38398a85ffe70a34d426be0246","typeString":"literal_string \"Content not found or inactive\""},"value":"Content not found or inactive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad655b9ea313567c8b79e7912f2f3b42d4cc4c38398a85ffe70a34d426be0246","typeString":"literal_string \"Content not found or inactive\""}],"id":1059,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6546:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1063,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6546:58:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1064,"nodeType":"ExpressionStatement","src":"6546:58:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1066,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"6622:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1067,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6628:9:4","memberName":"timestamp","nodeType":"MemberAccess","src":"6622:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"id":1068,"name":"content","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"6641:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_storage_ptr","typeString":"struct ProofChainVoting.ContentInfo storage pointer"}},"id":1069,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6649:14:4","memberName":"votingDeadline","nodeType":"MemberAccess","referencedDeclaration":817,"src":"6641:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6622:41:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566f74696e6720706572696f6420656e646564","id":1071,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6665:21:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_36ba02d776fd732ac627a72d2a4bcd896afdeadba8694171733d88c6775413e0","typeString":"literal_string \"Voting period ended\""},"value":"Voting period ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_36ba02d776fd732ac627a72d2a4bcd896afdeadba8694171733d88c6775413e0","typeString":"literal_string \"Voting period ended\""}],"id":1065,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6614:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1072,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6614:73:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1073,"nodeType":"ExpressionStatement","src":"6614:73:4"},{"expression":{"arguments":[{"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6705:42:4","subExpression":{"expression":{"baseExpression":{"baseExpression":{"id":1075,"name":"userVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"6706:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserVote_$852_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct ProofChainVoting.UserVote storage ref))"}},"id":1077,"indexExpression":{"id":1076,"name":"contentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"6716:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6706:20:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserVote_$852_storage_$","typeString":"mapping(address => struct ProofChainVoting.UserVote storage ref)"}},"id":1080,"indexExpression":{"expression":{"id":1078,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6727:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6731:6:4","memberName":"sender","nodeType":"MemberAccess","src":"6727:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6706:32:4","typeDescriptions":{"typeIdentifier":"t_struct$_UserVote_$852_storage","typeString":"struct ProofChainVoting.UserVote storage ref"}},"id":1081,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6739:8:4","memberName":"hasVoted","nodeType":"MemberAccess","referencedDeclaration":837,"src":"6706:41:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c726561647920766f746564","id":1083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6749:15:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6","typeString":"literal_string \"Already voted\""},"value":"Already voted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_512fc59044d4f0722f9346c450973ffe8aac7aa1142e536739987018593c53b6","typeString":"literal_string \"Already voted\""}],"id":1074,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6697:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1084,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6697:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1085,"nodeType":"ExpressionStatement","src":"6697:68:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1087,"name":"confidence","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"6783:10:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"31","id":1088,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6797:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6783:15:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1090,"name":"confidence","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"6802:10:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"3130","id":1091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6816:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"6802:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"6783:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420636f6e666964656e6365206c6576656c","id":1094,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6820:26:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_dc11c20448f7a43bc05341fc81d8f8cc363e1b2cce4150c0a5539ac2fe1856f8","typeString":"literal_string \"Invalid confidence level\""},"value":"Invalid confidence level"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_dc11c20448f7a43bc05341fc81d8f8cc363e1b2cce4150c0a5539ac2fe1856f8","typeString":"literal_string \"Invalid confidence level\""}],"id":1086,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6775:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6775:72:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1096,"nodeType":"ExpressionStatement","src":"6775:72:4"},{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1098,"name":"supportedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"6865:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_TokenType_$798_$_t_struct$_TokenInfo_$811_storage_$","typeString":"mapping(enum ProofChainVoting.TokenType => struct ProofChainVoting.TokenInfo storage ref)"}},"id":1100,"indexExpression":{"id":1099,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"6881:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6865:26:4","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$811_storage","typeString":"struct ProofChainVoting.TokenInfo storage ref"}},"id":1101,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6892:8:4","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":810,"src":"6865:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206e6f7420737570706f72746564","id":1102,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6902:21:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047","typeString":"literal_string \"Token not supported\""},"value":"Token not supported"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047","typeString":"literal_string \"Token not supported\""}],"id":1097,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6857:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6857:67:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1104,"nodeType":"ExpressionStatement","src":"6857:67:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1111,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1106,"name":"stakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"6942:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"expression":{"baseExpression":{"id":1107,"name":"supportedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"6957:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_TokenType_$798_$_t_struct$_TokenInfo_$811_storage_$","typeString":"mapping(enum ProofChainVoting.TokenType => struct ProofChainVoting.TokenInfo storage ref)"}},"id":1109,"indexExpression":{"id":1108,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"6973:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6957:26:4","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$811_storage","typeString":"struct ProofChainVoting.TokenInfo storage ref"}},"id":1110,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"6984:14:4","memberName":"minStakeAmount","nodeType":"MemberAccess","referencedDeclaration":808,"src":"6957:41:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6942:56:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5374616b6520616d6f756e7420746f6f206c6f77","id":1112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7000:22:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cb3ff2c701fef9e84415b7f7c571c6f22ee68819abc324ffb7431b798992b76","typeString":"literal_string \"Stake amount too low\""},"value":"Stake amount too low"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cb3ff2c701fef9e84415b7f7c571c6f22ee68819abc324ffb7431b798992b76","typeString":"literal_string \"Stake amount too low\""}],"id":1105,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6934:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1113,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6934:89:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1114,"nodeType":"ExpressionStatement","src":"6934:89:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1115,"name":"merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"7098:11:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7110:6:4","memberName":"length","nodeType":"MemberAccess","src":"7098:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7119:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7098:22:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1129,"nodeType":"IfStatement","src":"7094:131:4","trueBody":{"id":1128,"nodeType":"Block","src":"7122:103:4","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":1121,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7163:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7167:6:4","memberName":"sender","nodeType":"MemberAccess","src":"7163:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1123,"name":"merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1047,"src":"7175:11:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}],"id":1120,"name":"isVerifiedIdentity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1551,"src":"7144:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_array$_t_bytes32_$dyn_calldata_ptr_$returns$_t_bool_$","typeString":"function (address,bytes32[] calldata) view returns (bool)"}},"id":1124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7144:43:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206964656e746974792070726f6f66","id":1125,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7189:24:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_056473794910181aaf50c941db8dd899e38da3a042647ef2eb2db70ac4820569","typeString":"literal_string \"Invalid identity proof\""},"value":"Invalid identity proof"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_056473794910181aaf50c941db8dd899e38da3a042647ef2eb2db70ac4820569","typeString":"literal_string \"Invalid identity proof\""}],"id":1119,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7136:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7136:78:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1127,"nodeType":"ExpressionStatement","src":"7136:78:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"},"id":1133,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1130,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"7279:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1131,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"7292:9:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$798_$","typeString":"type(enum ProofChainVoting.TokenType)"}},"id":1132,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7302:3:4","memberName":"ETH","nodeType":"MemberAccess","referencedDeclaration":790,"src":"7292:13:4","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"}},"src":"7279:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1172,"nodeType":"Block","src":"7395:251:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1144,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7417:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7421:5:4","memberName":"value","nodeType":"MemberAccess","src":"7417:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7430:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7417:14:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"455448206e6f7420657870656374656420666f7220455243323020746f6b656e73","id":1148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7433:35:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b13dc9d32ecfd562c7bd001c58e385f9873adc01bb7051b75d97f3cd7129af3","typeString":"literal_string \"ETH not expected for ERC20 tokens\""},"value":"ETH not expected for ERC20 tokens"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5b13dc9d32ecfd562c7bd001c58e385f9873adc01bb7051b75d97f3cd7129af3","typeString":"literal_string \"ETH not expected for ERC20 tokens\""}],"id":1143,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7409:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1149,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7409:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1150,"nodeType":"ExpressionStatement","src":"7409:60:4"},{"assignments":[1153],"declarations":[{"constant":false,"id":1153,"mutability":"mutable","name":"tokenInfo","nameLocation":"7500:9:4","nodeType":"VariableDeclaration","scope":1172,"src":"7483:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$811_memory_ptr","typeString":"struct ProofChainVoting.TokenInfo"},"typeName":{"id":1152,"nodeType":"UserDefinedTypeName","pathNode":{"id":1151,"name":"TokenInfo","nameLocations":["7483:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":811,"src":"7483:9:4"},"referencedDeclaration":811,"src":"7483:9:4","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$811_storage_ptr","typeString":"struct ProofChainVoting.TokenInfo"}},"visibility":"internal"}],"id":1157,"initialValue":{"baseExpression":{"id":1154,"name":"supportedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"7512:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_TokenType_$798_$_t_struct$_TokenInfo_$811_storage_$","typeString":"mapping(enum ProofChainVoting.TokenType => struct ProofChainVoting.TokenInfo storage ref)"}},"id":1156,"indexExpression":{"id":1155,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"7528:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7512:26:4","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$811_storage","typeString":"struct ProofChainVoting.TokenInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7483:55:4"},{"expression":{"arguments":[{"expression":{"id":1163,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7596:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1164,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7600:6:4","memberName":"sender","nodeType":"MemberAccess","src":"7596:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":1167,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"7616:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_ProofChainVoting_$1810","typeString":"contract ProofChainVoting"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ProofChainVoting_$1810","typeString":"contract ProofChainVoting"}],"id":1166,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7608:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1165,"name":"address","nodeType":"ElementaryTypeName","src":"7608:7:4","typeDescriptions":{}}},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7608:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1169,"name":"stakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"7623:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1159,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1153,"src":"7559:9:4","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$811_memory_ptr","typeString":"struct ProofChainVoting.TokenInfo memory"}},"id":1160,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7569:12:4","memberName":"tokenAddress","nodeType":"MemberAccess","referencedDeclaration":800,"src":"7559:22:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1158,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"7552:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$779_$","typeString":"type(contract IERC20)"}},"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7552:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$779","typeString":"contract IERC20"}},"id":1162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7583:12:4","memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":762,"src":"7552:43:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":1170,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7552:83:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1171,"nodeType":"ExpressionStatement","src":"7552:83:4"}]},"id":1173,"nodeType":"IfStatement","src":"7275:371:4","trueBody":{"id":1142,"nodeType":"Block","src":"7307:82:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1135,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7329:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7333:5:4","memberName":"value","nodeType":"MemberAccess","src":"7329:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1137,"name":"stakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"7342:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7329:24:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e636f72726563742045544820616d6f756e74","id":1139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7355:22:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b","typeString":"literal_string \"Incorrect ETH amount\""},"value":"Incorrect ETH amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_785c530545bab4fcd14661de8c26a5985c6bacacb07565e8ecfc83e0a995b60b","typeString":"literal_string \"Incorrect ETH amount\""}],"id":1134,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7321:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1140,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7321:57:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1141,"nodeType":"ExpressionStatement","src":"7321:57:4"}]}},{"assignments":[1175],"declarations":[{"constant":false,"id":1175,"mutability":"mutable","name":"usdValue","nameLocation":"7707:8:4","nodeType":"VariableDeclaration","scope":1247,"src":"7699:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1174,"name":"uint256","nodeType":"ElementaryTypeName","src":"7699:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1180,"initialValue":{"arguments":[{"id":1177,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"7731:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"}},{"id":1178,"name":"stakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"7742:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1176,"name":"convertToUSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"7718:12:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_enum$_TokenType_$798_$_t_uint256_$returns$_t_uint256_$","typeString":"function (enum ProofChainVoting.TokenType,uint256) view returns (uint256)"}},"id":1179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7718:36:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7699:55:4"},{"assignments":[1182],"declarations":[{"constant":false,"id":1182,"mutability":"mutable","name":"bonusMultiplier","nameLocation":"7772:15:4","nodeType":"VariableDeclaration","scope":1247,"src":"7764:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1181,"name":"uint256","nodeType":"ElementaryTypeName","src":"7764:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1187,"initialValue":{"expression":{"baseExpression":{"id":1183,"name":"supportedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"7790:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_TokenType_$798_$_t_struct$_TokenInfo_$811_storage_$","typeString":"mapping(enum ProofChainVoting.TokenType => struct ProofChainVoting.TokenInfo storage ref)"}},"id":1185,"indexExpression":{"id":1184,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"7806:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7790:26:4","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$811_storage","typeString":"struct ProofChainVoting.TokenInfo storage ref"}},"id":1186,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7817:15:4","memberName":"bonusMultiplier","nodeType":"MemberAccess","referencedDeclaration":806,"src":"7790:42:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7764:68:4"},{"assignments":[1189],"declarations":[{"constant":false,"id":1189,"mutability":"mutable","name":"votingWeight","nameLocation":"7850:12:4","nodeType":"VariableDeclaration","scope":1247,"src":"7842:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1188,"name":"uint256","nodeType":"ElementaryTypeName","src":"7842:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1195,"initialValue":{"arguments":[{"id":1191,"name":"usdValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"7887:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1192,"name":"confidence","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"7897:10:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1193,"name":"bonusMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1182,"src":"7909:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1190,"name":"calculateVotingWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1523,"src":"7865:21:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint8_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint8,uint256) pure returns (uint256)"}},"id":1194,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7865:60:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7842:83:4"},{"expression":{"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1196,"name":"userVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"7967:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserVote_$852_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct ProofChainVoting.UserVote storage ref))"}},"id":1200,"indexExpression":{"id":1197,"name":"contentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"7977:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7967:20:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserVote_$852_storage_$","typeString":"mapping(address => struct ProofChainVoting.UserVote storage ref)"}},"id":1201,"indexExpression":{"expression":{"id":1198,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"7988:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7992:6:4","memberName":"sender","nodeType":"MemberAccess","src":"7988:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7967:32:4","typeDescriptions":{"typeIdentifier":"t_struct$_UserVote_$852_storage","typeString":"struct ProofChainVoting.UserVote storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"74727565","id":1203,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8035:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1204,"name":"vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"8059:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"}},{"id":1205,"name":"confidence","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"8089:10:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1206,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"8124:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"}},{"id":1207,"name":"stakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"8160:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1208,"name":"votingWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"8199:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1209,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8236:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8242:9:4","memberName":"timestamp","nodeType":"MemberAccess","src":"8236:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1202,"name":"UserVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"8002:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_UserVote_$852_storage_ptr_$","typeString":"type(struct ProofChainVoting.UserVote storage pointer)"}},"id":1211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["8025:8:4","8053:4:4","8077:10:4","8113:9:4","8147:11:4","8185:12:4","8225:9:4"],"names":["hasVoted","vote","confidence","tokenType","stakeAmount","votingWeight","timestamp"],"nodeType":"FunctionCall","src":"8002:260:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_UserVote_$852_memory_ptr","typeString":"struct ProofChainVoting.UserVote memory"}},"src":"7967:295:4","typeDescriptions":{"typeIdentifier":"t_struct$_UserVote_$852_storage","typeString":"struct ProofChainVoting.UserVote storage ref"}},"id":1213,"nodeType":"ExpressionStatement","src":"7967:295:4"},{"expression":{"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":1214,"name":"content","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"8318:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_storage_ptr","typeString":"struct ProofChainVoting.ContentInfo storage pointer"}},"id":1220,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8326:16:4","memberName":"voteDistribution","nodeType":"MemberAccess","referencedDeclaration":827,"src":"8318:24:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage","typeString":"uint256[3] storage ref"}},"id":1221,"indexExpression":{"arguments":[{"id":1218,"name":"vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"8351:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"}],"id":1217,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8343:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1216,"name":"uint256","nodeType":"ElementaryTypeName","src":"8343:7:4","typeDescriptions":{}}},"id":1219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8343:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8318:39:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1222,"name":"votingWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"8361:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8318:55:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1224,"nodeType":"ExpressionStatement","src":"8318:55:4"},{"expression":{"id":1228,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"8383:26:4","subExpression":{"expression":{"id":1225,"name":"content","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"8383:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_storage_ptr","typeString":"struct ProofChainVoting.ContentInfo storage pointer"}},"id":1227,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8391:16:4","memberName":"participantCount","nodeType":"MemberAccess","referencedDeclaration":829,"src":"8383:24:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1229,"nodeType":"ExpressionStatement","src":"8383:26:4"},{"expression":{"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1230,"name":"content","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1054,"src":"8419:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_storage_ptr","typeString":"struct ProofChainVoting.ContentInfo storage pointer"}},"id":1232,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"8427:13:4","memberName":"totalUSDValue","nodeType":"MemberAccess","referencedDeclaration":831,"src":"8419:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":1233,"name":"usdValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1175,"src":"8444:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8419:33:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1235,"nodeType":"ExpressionStatement","src":"8419:33:4"},{"eventCall":{"arguments":[{"id":1237,"name":"contentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1034,"src":"8490:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1238,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8501:3:4","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8505:6:4","memberName":"sender","nodeType":"MemberAccess","src":"8501:10:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1240,"name":"vote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"8513:4:4","typeDescriptions":{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"}},{"id":1241,"name":"confidence","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"8519:10:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1242,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"8531:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"}},{"id":1243,"name":"stakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1044,"src":"8542:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1244,"name":"votingWeight","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1189,"src":"8555:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1236,"name":"VoteSubmitted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"8476:13:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_address_$_t_enum$_VoteOption_$788_$_t_uint8_$_t_enum$_TokenType_$798_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,address,enum ProofChainVoting.VoteOption,uint8,enum ProofChainVoting.TokenType,uint256,uint256)"}},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8476:92:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1246,"nodeType":"EmitStatement","src":"8471:97:4"}]},"documentation":{"id":1032,"nodeType":"StructuredDocumentation","src":"5868:372:4","text":" @dev Submit a vote on content\n @param contentId ID of the content to vote on\n @param vote Vote choice (REJECT, APPROVE, ABSTAIN)\n @param confidence Confidence level (1-10)\n @param tokenType Type of token to stake\n @param stakeAmount Amount of tokens to stake\n @param merkleProof Merkle proof for identity verification"},"functionSelector":"782631a0","id":1248,"implemented":true,"kind":"function","modifiers":[{"id":1050,"kind":"modifierInvocation","modifierName":{"id":1049,"name":"nonReentrant","nameLocations":["6464:12:4"],"nodeType":"IdentifierPath","referencedDeclaration":142,"src":"6464:12:4"},"nodeType":"ModifierInvocation","src":"6464:12:4"}],"name":"submitVote","nameLocation":"6254:10:4","nodeType":"FunctionDefinition","parameters":{"id":1048,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1034,"mutability":"mutable","name":"contentId","nameLocation":"6282:9:4","nodeType":"VariableDeclaration","scope":1248,"src":"6274:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1033,"name":"uint256","nodeType":"ElementaryTypeName","src":"6274:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1037,"mutability":"mutable","name":"vote","nameLocation":"6312:4:4","nodeType":"VariableDeclaration","scope":1248,"src":"6301:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"},"typeName":{"id":1036,"nodeType":"UserDefinedTypeName","pathNode":{"id":1035,"name":"VoteOption","nameLocations":["6301:10:4"],"nodeType":"IdentifierPath","referencedDeclaration":788,"src":"6301:10:4"},"referencedDeclaration":788,"src":"6301:10:4","typeDescriptions":{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"}},"visibility":"internal"},{"constant":false,"id":1039,"mutability":"mutable","name":"confidence","nameLocation":"6332:10:4","nodeType":"VariableDeclaration","scope":1248,"src":"6326:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1038,"name":"uint8","nodeType":"ElementaryTypeName","src":"6326:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1042,"mutability":"mutable","name":"tokenType","nameLocation":"6362:9:4","nodeType":"VariableDeclaration","scope":1248,"src":"6352:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"},"typeName":{"id":1041,"nodeType":"UserDefinedTypeName","pathNode":{"id":1040,"name":"TokenType","nameLocations":["6352:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":798,"src":"6352:9:4"},"referencedDeclaration":798,"src":"6352:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"}},"visibility":"internal"},{"constant":false,"id":1044,"mutability":"mutable","name":"stakeAmount","nameLocation":"6389:11:4","nodeType":"VariableDeclaration","scope":1248,"src":"6381:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1043,"name":"uint256","nodeType":"ElementaryTypeName","src":"6381:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1047,"mutability":"mutable","name":"merkleProof","nameLocation":"6429:11:4","nodeType":"VariableDeclaration","scope":1248,"src":"6410:30:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1045,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6410:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1046,"nodeType":"ArrayTypeName","src":"6410:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"6264:182:4"},"returnParameters":{"id":1051,"nodeType":"ParameterList","parameters":[],"src":"6477:0:4"},"scope":1810,"src":"6245:2330:4","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1356,"nodeType":"Block","src":"8805:1001:4","statements":[{"assignments":[1256],"declarations":[{"constant":false,"id":1256,"mutability":"mutable","name":"content","nameLocation":"8835:7:4","nodeType":"VariableDeclaration","scope":1356,"src":"8815:27:4","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_storage_ptr","typeString":"struct ProofChainVoting.ContentInfo"},"typeName":{"id":1255,"nodeType":"UserDefinedTypeName","pathNode":{"id":1254,"name":"ContentInfo","nameLocations":["8815:11:4"],"nodeType":"IdentifierPath","referencedDeclaration":835,"src":"8815:11:4"},"referencedDeclaration":835,"src":"8815:11:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_storage_ptr","typeString":"struct ProofChainVoting.ContentInfo"}},"visibility":"internal"}],"id":1260,"initialValue":{"baseExpression":{"id":1257,"name":"contents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"8845:8:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ContentInfo_$835_storage_$","typeString":"mapping(uint256 => struct ProofChainVoting.ContentInfo storage ref)"}},"id":1259,"indexExpression":{"id":1258,"name":"contentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"8854:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8845:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_storage","typeString":"struct ProofChainVoting.ContentInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8815:49:4"},{"expression":{"arguments":[{"expression":{"id":1262,"name":"content","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"8882:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_storage_ptr","typeString":"struct ProofChainVoting.ContentInfo storage pointer"}},"id":1263,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8890:8:4","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":821,"src":"8882:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"436f6e74656e74206e6f7420666f756e64206f7220696e616374697665","id":1264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8900:31:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_ad655b9ea313567c8b79e7912f2f3b42d4cc4c38398a85ffe70a34d426be0246","typeString":"literal_string \"Content not found or inactive\""},"value":"Content not found or inactive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ad655b9ea313567c8b79e7912f2f3b42d4cc4c38398a85ffe70a34d426be0246","typeString":"literal_string \"Content not found or inactive\""}],"id":1261,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8874:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8874:58:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1266,"nodeType":"ExpressionStatement","src":"8874:58:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1268,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8950:5:4","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8956:9:4","memberName":"timestamp","nodeType":"MemberAccess","src":"8950:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1270,"name":"content","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"8968:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_storage_ptr","typeString":"struct ProofChainVoting.ContentInfo storage pointer"}},"id":1271,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8976:14:4","memberName":"votingDeadline","nodeType":"MemberAccess","referencedDeclaration":817,"src":"8968:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8950:40:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"566f74696e6720706572696f64206e6f7420656e646564","id":1273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8992:25:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_6935cc29c7ba471c59aca2c328cd747610ac8fe82d4a965557fad75d9c8d99a0","typeString":"literal_string \"Voting period not ended\""},"value":"Voting period not ended"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6935cc29c7ba471c59aca2c328cd747610ac8fe82d4a965557fad75d9c8d99a0","typeString":"literal_string \"Voting period not ended\""}],"id":1267,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8942:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8942:76:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1275,"nodeType":"ExpressionStatement","src":"8942:76:4"},{"expression":{"arguments":[{"id":1279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9036:20:4","subExpression":{"expression":{"id":1277,"name":"content","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"9037:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_storage_ptr","typeString":"struct ProofChainVoting.ContentInfo storage pointer"}},"id":1278,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9045:11:4","memberName":"isFinalized","nodeType":"MemberAccess","referencedDeclaration":823,"src":"9037:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c72656164792066696e616c697a6564","id":1280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9058:19:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_c608cfc2c91a4bb42b76b0a5c0095809a7e0bd210c6feb6ebdcb2905abc98251","typeString":"literal_string \"Already finalized\""},"value":"Already finalized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c608cfc2c91a4bb42b76b0a5c0095809a7e0bd210c6feb6ebdcb2905abc98251","typeString":"literal_string \"Already finalized\""}],"id":1276,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9028:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9028:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1282,"nodeType":"ExpressionStatement","src":"9028:50:4"},{"assignments":[1285],"declarations":[{"constant":false,"id":1285,"mutability":"mutable","name":"winningOption","nameLocation":"9144:13:4","nodeType":"VariableDeclaration","scope":1356,"src":"9133:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"},"typeName":{"id":1284,"nodeType":"UserDefinedTypeName","pathNode":{"id":1283,"name":"VoteOption","nameLocations":["9133:10:4"],"nodeType":"IdentifierPath","referencedDeclaration":788,"src":"9133:10:4"},"referencedDeclaration":788,"src":"9133:10:4","typeDescriptions":{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"}},"visibility":"internal"}],"id":1288,"initialValue":{"expression":{"id":1286,"name":"VoteOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"9160:10:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VoteOption_$788_$","typeString":"type(enum ProofChainVoting.VoteOption)"}},"id":1287,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9171:6:4","memberName":"REJECT","nodeType":"MemberAccess","referencedDeclaration":785,"src":"9160:17:4","typeDescriptions":{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"}},"nodeType":"VariableDeclarationStatement","src":"9133:44:4"},{"assignments":[1290],"declarations":[{"constant":false,"id":1290,"mutability":"mutable","name":"maxVotes","nameLocation":"9195:8:4","nodeType":"VariableDeclaration","scope":1356,"src":"9187:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1289,"name":"uint256","nodeType":"ElementaryTypeName","src":"9187:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1295,"initialValue":{"baseExpression":{"expression":{"id":1291,"name":"content","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"9206:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_storage_ptr","typeString":"struct ProofChainVoting.ContentInfo storage pointer"}},"id":1292,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9214:16:4","memberName":"voteDistribution","nodeType":"MemberAccess","referencedDeclaration":827,"src":"9206:24:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage","typeString":"uint256[3] storage ref"}},"id":1294,"indexExpression":{"hexValue":"30","id":1293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9231:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9206:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9187:46:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":1296,"name":"content","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"9266:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_storage_ptr","typeString":"struct ProofChainVoting.ContentInfo storage pointer"}},"id":1297,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9274:16:4","memberName":"voteDistribution","nodeType":"MemberAccess","referencedDeclaration":827,"src":"9266:24:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage","typeString":"uint256[3] storage ref"}},"id":1299,"indexExpression":{"hexValue":"31","id":1298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9291:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9266:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1300,"name":"maxVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"9296:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9266:38:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1315,"nodeType":"IfStatement","src":"9262:166:4","trueBody":{"id":1314,"nodeType":"Block","src":"9306:122:4","statements":[{"expression":{"id":1305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1302,"name":"winningOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"9331:13:4","typeDescriptions":{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1303,"name":"VoteOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"9347:10:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VoteOption_$788_$","typeString":"type(enum ProofChainVoting.VoteOption)"}},"id":1304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9358:7:4","memberName":"APPROVE","nodeType":"MemberAccess","referencedDeclaration":786,"src":"9347:18:4","typeDescriptions":{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"}},"src":"9331:34:4","typeDescriptions":{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"}},"id":1306,"nodeType":"ExpressionStatement","src":"9331:34:4"},{"expression":{"id":1312,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1307,"name":"maxVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"9379:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"id":1308,"name":"content","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"9390:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_storage_ptr","typeString":"struct ProofChainVoting.ContentInfo storage pointer"}},"id":1309,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9398:16:4","memberName":"voteDistribution","nodeType":"MemberAccess","referencedDeclaration":827,"src":"9390:24:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage","typeString":"uint256[3] storage ref"}},"id":1311,"indexExpression":{"hexValue":"31","id":1310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9415:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9390:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9379:38:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1313,"nodeType":"ExpressionStatement","src":"9379:38:4"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":1316,"name":"content","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"9450:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_storage_ptr","typeString":"struct ProofChainVoting.ContentInfo storage pointer"}},"id":1317,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9458:16:4","memberName":"voteDistribution","nodeType":"MemberAccess","referencedDeclaration":827,"src":"9450:24:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_storage","typeString":"uint256[3] storage ref"}},"id":1319,"indexExpression":{"hexValue":"32","id":1318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9475:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9450:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1320,"name":"maxVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"9480:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9450:38:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1328,"nodeType":"IfStatement","src":"9446:114:4","trueBody":{"id":1327,"nodeType":"Block","src":"9490:70:4","statements":[{"expression":{"id":1325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1322,"name":"winningOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"9515:13:4","typeDescriptions":{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":1323,"name":"VoteOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"9531:10:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_VoteOption_$788_$","typeString":"type(enum ProofChainVoting.VoteOption)"}},"id":1324,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9542:7:4","memberName":"ABSTAIN","nodeType":"MemberAccess","referencedDeclaration":787,"src":"9531:18:4","typeDescriptions":{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"}},"src":"9515:34:4","typeDescriptions":{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"}},"id":1326,"nodeType":"ExpressionStatement","src":"9515:34:4"}]}},{"expression":{"id":1333,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1329,"name":"content","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"9578:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_storage_ptr","typeString":"struct ProofChainVoting.ContentInfo storage pointer"}},"id":1331,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9586:13:4","memberName":"winningOption","nodeType":"MemberAccess","referencedDeclaration":834,"src":"9578:21:4","typeDescriptions":{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1332,"name":"winningOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"9602:13:4","typeDescriptions":{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"}},"src":"9578:37:4","typeDescriptions":{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"}},"id":1334,"nodeType":"ExpressionStatement","src":"9578:37:4"},{"expression":{"id":1339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1335,"name":"content","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"9625:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_storage_ptr","typeString":"struct ProofChainVoting.ContentInfo storage pointer"}},"id":1337,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9633:11:4","memberName":"isFinalized","nodeType":"MemberAccess","referencedDeclaration":823,"src":"9625:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9647:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9625:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1340,"nodeType":"ExpressionStatement","src":"9625:26:4"},{"expression":{"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":1341,"name":"content","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"9661:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_storage_ptr","typeString":"struct ProofChainVoting.ContentInfo storage pointer"}},"id":1343,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"9669:8:4","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":821,"src":"9661:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1344,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9680:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"9661:24:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1346,"nodeType":"ExpressionStatement","src":"9661:24:4"},{"eventCall":{"arguments":[{"id":1348,"name":"contentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1251,"src":"9725:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1349,"name":"winningOption","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1285,"src":"9736:13:4","typeDescriptions":{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"}},{"expression":{"id":1350,"name":"content","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"9751:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_storage_ptr","typeString":"struct ProofChainVoting.ContentInfo storage pointer"}},"id":1351,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9759:16:4","memberName":"participantCount","nodeType":"MemberAccess","referencedDeclaration":829,"src":"9751:24:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1352,"name":"content","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1256,"src":"9777:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_storage_ptr","typeString":"struct ProofChainVoting.ContentInfo storage pointer"}},"id":1353,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9785:13:4","memberName":"totalUSDValue","nodeType":"MemberAccess","referencedDeclaration":831,"src":"9777:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1347,"name":"VotingFinalized","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":919,"src":"9709:15:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_enum$_VoteOption_$788_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,enum ProofChainVoting.VoteOption,uint256,uint256)"}},"id":1354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9709:90:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1355,"nodeType":"EmitStatement","src":"9704:95:4"}]},"documentation":{"id":1249,"nodeType":"StructuredDocumentation","src":"8636:112:4","text":" @dev Finalize voting for a content item\n @param contentId ID of the content to finalize"},"functionSelector":"49444831","id":1357,"implemented":true,"kind":"function","modifiers":[],"name":"finalizeVoting","nameLocation":"8762:14:4","nodeType":"FunctionDefinition","parameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1251,"mutability":"mutable","name":"contentId","nameLocation":"8785:9:4","nodeType":"VariableDeclaration","scope":1357,"src":"8777:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1250,"name":"uint256","nodeType":"ElementaryTypeName","src":"8777:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8776:19:4"},"returnParameters":{"id":1253,"nodeType":"ParameterList","parameters":[],"src":"8805:0:4"},"scope":1810,"src":"8753:1053:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1413,"nodeType":"Block","src":"10515:512:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"},"id":1380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1377,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"10533:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":1378,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"10546:9:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$798_$","typeString":"type(enum ProofChainVoting.TokenType)"}},"id":1379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10556:4:4","memberName":"NONE","nodeType":"MemberAccess","referencedDeclaration":789,"src":"10546:14:4","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"}},"src":"10533:27:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e2074797065","id":1381,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10562:20:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_32b066eee2f2ebf209ee952e24990e74aaae1547f80b28e921be8d8d57835439","typeString":"literal_string \"Invalid token type\""},"value":"Invalid token type"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_32b066eee2f2ebf209ee952e24990e74aaae1547f80b28e921be8d8d57835439","typeString":"literal_string \"Invalid token type\""}],"id":1376,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10525:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10525:58:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1383,"nodeType":"ExpressionStatement","src":"10525:58:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1385,"name":"priceOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"10601:11:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1388,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10624:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1387,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10616:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1386,"name":"address","nodeType":"ElementaryTypeName","src":"10616:7:4","typeDescriptions":{}}},"id":1389,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10616:10:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10601:25:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207072696365206f7261636c65","id":1391,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10628:22:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_a036300daa7c13f910a59e0b835f71b8eac5e1f71775b01dcb1b2bdfca45dd29","typeString":"literal_string \"Invalid price oracle\""},"value":"Invalid price oracle"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a036300daa7c13f910a59e0b835f71b8eac5e1f71775b01dcb1b2bdfca45dd29","typeString":"literal_string \"Invalid price oracle\""}],"id":1384,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10593:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10593:58:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1393,"nodeType":"ExpressionStatement","src":"10593:58:4"},{"expression":{"id":1405,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1394,"name":"supportedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"10670:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_TokenType_$798_$_t_struct$_TokenInfo_$811_storage_$","typeString":"mapping(enum ProofChainVoting.TokenType => struct ProofChainVoting.TokenInfo storage ref)"}},"id":1396,"indexExpression":{"id":1395,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"10686:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10670:26:4","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$811_storage","typeString":"struct ProofChainVoting.TokenInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1398,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"10737:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1399,"name":"priceOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"10776:11:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1400,"name":"decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1367,"src":"10811:8:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"id":1401,"name":"bonusMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1369,"src":"10850:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1402,"name":"minStakeAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1371,"src":"10895:14:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1403,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10933:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint8","typeString":"uint8"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1397,"name":"TokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":811,"src":"10699:9:4","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_TokenInfo_$811_storage_ptr_$","typeString":"type(struct ProofChainVoting.TokenInfo storage pointer)"}},"id":1404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["10723:12:4","10763:11:4","10801:8:4","10833:15:4","10879:14:4","10923:8:4"],"names":["tokenAddress","priceOracle","decimals","bonusMultiplier","minStakeAmount","isActive"],"nodeType":"FunctionCall","src":"10699:249:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$811_memory_ptr","typeString":"struct ProofChainVoting.TokenInfo memory"}},"src":"10670:278:4","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$811_storage","typeString":"struct ProofChainVoting.TokenInfo storage ref"}},"id":1406,"nodeType":"ExpressionStatement","src":"10670:278:4"},{"eventCall":{"arguments":[{"id":1408,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"10983:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"}},{"id":1409,"name":"tokenAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1363,"src":"10994:12:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1410,"name":"priceOracle","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1365,"src":"11008:11:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1407,"name":"TokenAdded","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":928,"src":"10972:10:4","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_enum$_TokenType_$798_$_t_address_$_t_address_$returns$__$","typeString":"function (enum ProofChainVoting.TokenType,address,address)"}},"id":1411,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10972:48:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1412,"nodeType":"EmitStatement","src":"10967:53:4"}]},"documentation":{"id":1358,"nodeType":"StructuredDocumentation","src":"9871:419:4","text":" @dev Add a new supported token\n @param tokenType Type of token to add\n @param tokenAddress Contract address of the token (0x0 for ETH)\n @param priceOracle Chainlink price oracle address\n @param decimals Number of decimals for the token\n @param bonusMultiplier Bonus multiplier for this token (1000 = 100%)\n @param minStakeAmount Minimum stake amount for this token"},"functionSelector":"b53d568a","id":1414,"implemented":true,"kind":"function","modifiers":[{"id":1374,"kind":"modifierInvocation","modifierName":{"id":1373,"name":"onlyOwner","nameLocations":["10505:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"10505:9:4"},"nodeType":"ModifierInvocation","src":"10505:9:4"}],"name":"addToken","nameLocation":"10304:8:4","nodeType":"FunctionDefinition","parameters":{"id":1372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1361,"mutability":"mutable","name":"tokenType","nameLocation":"10332:9:4","nodeType":"VariableDeclaration","scope":1414,"src":"10322:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"},"typeName":{"id":1360,"nodeType":"UserDefinedTypeName","pathNode":{"id":1359,"name":"TokenType","nameLocations":["10322:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":798,"src":"10322:9:4"},"referencedDeclaration":798,"src":"10322:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"}},"visibility":"internal"},{"constant":false,"id":1363,"mutability":"mutable","name":"tokenAddress","nameLocation":"10359:12:4","nodeType":"VariableDeclaration","scope":1414,"src":"10351:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1362,"name":"address","nodeType":"ElementaryTypeName","src":"10351:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1365,"mutability":"mutable","name":"priceOracle","nameLocation":"10389:11:4","nodeType":"VariableDeclaration","scope":1414,"src":"10381:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1364,"name":"address","nodeType":"ElementaryTypeName","src":"10381:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1367,"mutability":"mutable","name":"decimals","nameLocation":"10416:8:4","nodeType":"VariableDeclaration","scope":1414,"src":"10410:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1366,"name":"uint8","nodeType":"ElementaryTypeName","src":"10410:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1369,"mutability":"mutable","name":"bonusMultiplier","nameLocation":"10442:15:4","nodeType":"VariableDeclaration","scope":1414,"src":"10434:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1368,"name":"uint256","nodeType":"ElementaryTypeName","src":"10434:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1371,"mutability":"mutable","name":"minStakeAmount","nameLocation":"10475:14:4","nodeType":"VariableDeclaration","scope":1414,"src":"10467:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1370,"name":"uint256","nodeType":"ElementaryTypeName","src":"10467:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10312:183:4"},"returnParameters":{"id":1375,"nodeType":"ParameterList","parameters":[],"src":"10515:0:4"},"scope":1810,"src":"10295:732:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1459,"nodeType":"Block","src":"11331:376:4","statements":[{"expression":{"arguments":[{"expression":{"baseExpression":{"id":1424,"name":"supportedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"11349:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_TokenType_$798_$_t_struct$_TokenInfo_$811_storage_$","typeString":"mapping(enum ProofChainVoting.TokenType => struct ProofChainVoting.TokenInfo storage ref)"}},"id":1426,"indexExpression":{"id":1425,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"11365:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11349:26:4","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$811_storage","typeString":"struct ProofChainVoting.TokenInfo storage ref"}},"id":1427,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11376:8:4","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":810,"src":"11349:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"546f6b656e206e6f7420737570706f72746564","id":1428,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11386:21:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047","typeString":"literal_string \"Token not supported\""},"value":"Token not supported"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9dc80ce98899b7488130d2124178aae95623791186565493838ce8be492da047","typeString":"literal_string \"Token not supported\""}],"id":1423,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11341:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11341:67:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1430,"nodeType":"ExpressionStatement","src":"11341:67:4"},{"assignments":[1433],"declarations":[{"constant":false,"id":1433,"mutability":"mutable","name":"priceFeed","nameLocation":"11449:9:4","nodeType":"VariableDeclaration","scope":1459,"src":"11427:31:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$751","typeString":"contract AggregatorV3Interface"},"typeName":{"id":1432,"nodeType":"UserDefinedTypeName","pathNode":{"id":1431,"name":"AggregatorV3Interface","nameLocations":["11427:21:4"],"nodeType":"IdentifierPath","referencedDeclaration":751,"src":"11427:21:4"},"referencedDeclaration":751,"src":"11427:21:4","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$751","typeString":"contract AggregatorV3Interface"}},"visibility":"internal"}],"id":1440,"initialValue":{"arguments":[{"expression":{"baseExpression":{"id":1435,"name":"supportedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"11496:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_TokenType_$798_$_t_struct$_TokenInfo_$811_storage_$","typeString":"mapping(enum ProofChainVoting.TokenType => struct ProofChainVoting.TokenInfo storage ref)"}},"id":1437,"indexExpression":{"id":1436,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1418,"src":"11512:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11496:26:4","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$811_storage","typeString":"struct ProofChainVoting.TokenInfo storage ref"}},"id":1438,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11523:11:4","memberName":"priceOracle","nodeType":"MemberAccess","referencedDeclaration":802,"src":"11496:38:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1434,"name":"AggregatorV3Interface","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":751,"src":"11461:21:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_AggregatorV3Interface_$751_$","typeString":"type(contract AggregatorV3Interface)"}},"id":1439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11461:83:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$751","typeString":"contract AggregatorV3Interface"}},"nodeType":"VariableDeclarationStatement","src":"11427:117:4"},{"assignments":[null,1442,null,null,null],"declarations":[null,{"constant":false,"id":1442,"mutability":"mutable","name":"price","nameLocation":"11573:5:4","nodeType":"VariableDeclaration","scope":1459,"src":"11566:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1441,"name":"int256","nodeType":"ElementaryTypeName","src":"11566:6:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},null,null,null],"id":1446,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1443,"name":"priceFeed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1433,"src":"11588:9:4","typeDescriptions":{"typeIdentifier":"t_contract$_AggregatorV3Interface_$751","typeString":"contract AggregatorV3Interface"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11598:15:4","memberName":"latestRoundData","nodeType":"MemberAccess","referencedDeclaration":745,"src":"11588:25:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"function () view external returns (uint80,int256,uint256,uint256,uint80)"}},"id":1445,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11588:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint80_$_t_int256_$_t_uint256_$_t_uint256_$_t_uint80_$","typeString":"tuple(uint80,int256,uint256,uint256,uint80)"}},"nodeType":"VariableDeclarationStatement","src":"11563:52:4"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1448,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"11633:5:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11641:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11633:9:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964207072696365","id":1451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11644:15:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7","typeString":"literal_string \"Invalid price\""},"value":"Invalid price"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_eaa01effe6abd0543e9529d3961b0f5d26980f0661c156a79b89c39a093463f7","typeString":"literal_string \"Invalid price\""}],"id":1447,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11625:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11625:35:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1453,"nodeType":"ExpressionStatement","src":"11625:35:4"},{"expression":{"arguments":[{"id":1456,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1442,"src":"11694:5:4","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1455,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11686:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1454,"name":"uint256","nodeType":"ElementaryTypeName","src":"11686:7:4","typeDescriptions":{}}},"id":1457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11686:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1422,"id":1458,"nodeType":"Return","src":"11679:21:4"}]},"documentation":{"id":1415,"nodeType":"StructuredDocumentation","src":"11093:156:4","text":" @dev Get token price in USD from Chainlink oracle\n @param tokenType Type of token\n @return price Price in USD with 8 decimals"},"functionSelector":"7354c7e3","id":1460,"implemented":true,"kind":"function","modifiers":[],"name":"getTokenPriceUSD","nameLocation":"11263:16:4","nodeType":"FunctionDefinition","parameters":{"id":1419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"mutability":"mutable","name":"tokenType","nameLocation":"11290:9:4","nodeType":"VariableDeclaration","scope":1460,"src":"11280:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"},"typeName":{"id":1417,"nodeType":"UserDefinedTypeName","pathNode":{"id":1416,"name":"TokenType","nameLocations":["11280:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":798,"src":"11280:9:4"},"referencedDeclaration":798,"src":"11280:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"}},"visibility":"internal"}],"src":"11279:21:4"},"returnParameters":{"id":1422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1460,"src":"11322:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1420,"name":"uint256","nodeType":"ElementaryTypeName","src":"11322:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11321:9:4"},"scope":1810,"src":"11254:453:4","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1494,"nodeType":"Block","src":"12004:277:4","statements":[{"assignments":[1472],"declarations":[{"constant":false,"id":1472,"mutability":"mutable","name":"priceUSD","nameLocation":"12022:8:4","nodeType":"VariableDeclaration","scope":1494,"src":"12014:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1471,"name":"uint256","nodeType":"ElementaryTypeName","src":"12014:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1476,"initialValue":{"arguments":[{"id":1474,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"12050:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"}],"id":1473,"name":"getTokenPriceUSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1460,"src":"12033:16:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_enum$_TokenType_$798_$returns$_t_uint256_$","typeString":"function (enum ProofChainVoting.TokenType) view returns (uint256)"}},"id":1475,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12033:27:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12014:46:4"},{"assignments":[1478],"declarations":[{"constant":false,"id":1478,"mutability":"mutable","name":"tokenDecimals","nameLocation":"12076:13:4","nodeType":"VariableDeclaration","scope":1494,"src":"12070:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1477,"name":"uint8","nodeType":"ElementaryTypeName","src":"12070:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"id":1483,"initialValue":{"expression":{"baseExpression":{"id":1479,"name":"supportedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"12092:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_TokenType_$798_$_t_struct$_TokenInfo_$811_storage_$","typeString":"mapping(enum ProofChainVoting.TokenType => struct ProofChainVoting.TokenInfo storage ref)"}},"id":1481,"indexExpression":{"id":1480,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"12108:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12092:26:4","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$811_storage","typeString":"struct ProofChainVoting.TokenInfo storage ref"}},"id":1482,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"12119:8:4","memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":804,"src":"12092:35:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"VariableDeclarationStatement","src":"12070:57:4"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1484,"name":"tokenAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1466,"src":"12227:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1485,"name":"priceUSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"12241:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12227:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1487,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12226:24:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":1488,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12254:2:4","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":1489,"name":"tokenDecimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1478,"src":"12260:13:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12254:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1491,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12253:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12226:48:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1470,"id":1493,"nodeType":"Return","src":"12219:55:4"}]},"documentation":{"id":1461,"nodeType":"StructuredDocumentation","src":"11717:188:4","text":" @dev Convert token amount to USD value\n @param tokenType Type of token\n @param tokenAmount Amount of tokens\n @return usdValue USD value with 8 decimals"},"functionSelector":"877baeaa","id":1495,"implemented":true,"kind":"function","modifiers":[],"name":"convertToUSD","nameLocation":"11919:12:4","nodeType":"FunctionDefinition","parameters":{"id":1467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1464,"mutability":"mutable","name":"tokenType","nameLocation":"11942:9:4","nodeType":"VariableDeclaration","scope":1495,"src":"11932:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"},"typeName":{"id":1463,"nodeType":"UserDefinedTypeName","pathNode":{"id":1462,"name":"TokenType","nameLocations":["11932:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":798,"src":"11932:9:4"},"referencedDeclaration":798,"src":"11932:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"}},"visibility":"internal"},{"constant":false,"id":1466,"mutability":"mutable","name":"tokenAmount","nameLocation":"11961:11:4","nodeType":"VariableDeclaration","scope":1495,"src":"11953:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1465,"name":"uint256","nodeType":"ElementaryTypeName","src":"11953:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11931:42:4"},"returnParameters":{"id":1470,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1469,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1495,"src":"11995:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1468,"name":"uint256","nodeType":"ElementaryTypeName","src":"11995:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11994:9:4"},"scope":1810,"src":"11910:371:4","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1522,"nodeType":"Block","src":"12719:204:4","statements":[{"assignments":[1508],"declarations":[{"constant":false,"id":1508,"mutability":"mutable","name":"sqrtUSD","nameLocation":"12828:7:4","nodeType":"VariableDeclaration","scope":1522,"src":"12820:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1507,"name":"uint256","nodeType":"ElementaryTypeName","src":"12820:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1512,"initialValue":{"arguments":[{"id":1510,"name":"usdValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1498,"src":"12843:8:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1509,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1809,"src":"12838:4:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12838:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12820:32:4"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1520,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1513,"name":"sqrtUSD","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1508,"src":"12870:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1514,"name":"confidence","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1500,"src":"12880:10:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12870:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1516,"name":"bonusMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1502,"src":"12893:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12870:38:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1518,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12869:40:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"31303030","id":1519,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12912:4:4","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"12869:47:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1506,"id":1521,"nodeType":"Return","src":"12862:54:4"}]},"documentation":{"id":1496,"nodeType":"StructuredDocumentation","src":"12291:271:4","text":" @dev Calculate voting weight using quadratic formula\n @param usdValue USD value of stake\n @param confidence Confidence level (1-10)\n @param bonusMultiplier Bonus multiplier for token type\n @return weight Calculated voting weight"},"functionSelector":"714d985f","id":1523,"implemented":true,"kind":"function","modifiers":[],"name":"calculateVotingWeight","nameLocation":"12576:21:4","nodeType":"FunctionDefinition","parameters":{"id":1503,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1498,"mutability":"mutable","name":"usdValue","nameLocation":"12615:8:4","nodeType":"VariableDeclaration","scope":1523,"src":"12607:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1497,"name":"uint256","nodeType":"ElementaryTypeName","src":"12607:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1500,"mutability":"mutable","name":"confidence","nameLocation":"12639:10:4","nodeType":"VariableDeclaration","scope":1523,"src":"12633:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1499,"name":"uint8","nodeType":"ElementaryTypeName","src":"12633:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1502,"mutability":"mutable","name":"bonusMultiplier","nameLocation":"12667:15:4","nodeType":"VariableDeclaration","scope":1523,"src":"12659:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1501,"name":"uint256","nodeType":"ElementaryTypeName","src":"12659:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12597:91:4"},"returnParameters":{"id":1506,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1505,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1523,"src":"12710:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1504,"name":"uint256","nodeType":"ElementaryTypeName","src":"12710:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12709:9:4"},"scope":1810,"src":"12567:356:4","stateMutability":"pure","virtual":false,"visibility":"public"},{"body":{"id":1550,"nodeType":"Block","src":"13250:131:4","statements":[{"assignments":[1535],"declarations":[{"constant":false,"id":1535,"mutability":"mutable","name":"leaf","nameLocation":"13268:4:4","nodeType":"VariableDeclaration","scope":1550,"src":"13260:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1534,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13260:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":1542,"initialValue":{"arguments":[{"arguments":[{"id":1539,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1526,"src":"13302:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1537,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"13285:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":1538,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13289:12:4","memberName":"encodePacked","nodeType":"MemberAccess","src":"13285:16:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":1540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13285:22:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1536,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"13275:9:4","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13275:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"13260:48:4"},{"expression":{"arguments":[{"id":1545,"name":"merkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1529,"src":"13344:11:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"}},{"id":1546,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"13357:10:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":1547,"name":"leaf","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1535,"src":"13369:4:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[] calldata"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":1543,"name":"MerkleProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":727,"src":"13325:11:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_MerkleProof_$727_$","typeString":"type(library MerkleProof)"}},"id":1544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13337:6:4","memberName":"verify","nodeType":"MemberAccess","referencedDeclaration":223,"src":"13325:18:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_array$_t_bytes32_$dyn_memory_ptr_$_t_bytes32_$_t_bytes32_$returns$_t_bool_$","typeString":"function (bytes32[] memory,bytes32,bytes32) pure returns (bool)"}},"id":1548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13325:49:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1533,"id":1549,"nodeType":"Return","src":"13318:56:4"}]},"documentation":{"id":1524,"nodeType":"StructuredDocumentation","src":"12933:189:4","text":" @dev Verify user identity using Merkle proof\n @param user User address\n @param merkleProof Merkle proof\n @return isVerified Whether identity is verified"},"functionSelector":"63025f6d","id":1551,"implemented":true,"kind":"function","modifiers":[],"name":"isVerifiedIdentity","nameLocation":"13136:18:4","nodeType":"FunctionDefinition","parameters":{"id":1530,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1526,"mutability":"mutable","name":"user","nameLocation":"13172:4:4","nodeType":"VariableDeclaration","scope":1551,"src":"13164:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1525,"name":"address","nodeType":"ElementaryTypeName","src":"13164:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1529,"mutability":"mutable","name":"merkleProof","nameLocation":"13205:11:4","nodeType":"VariableDeclaration","scope":1551,"src":"13186:30:4","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":1527,"name":"bytes32","nodeType":"ElementaryTypeName","src":"13186:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1528,"nodeType":"ArrayTypeName","src":"13186:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"13154:68:4"},"returnParameters":{"id":1533,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1532,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1551,"src":"13244:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1531,"name":"bool","nodeType":"ElementaryTypeName","src":"13244:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"13243:6:4"},"scope":1810,"src":"13127:254:4","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":1641,"nodeType":"Block","src":"14346:623:4","statements":[{"assignments":[1579],"declarations":[{"constant":false,"id":1579,"mutability":"mutable","name":"content","nameLocation":"14375:7:4","nodeType":"VariableDeclaration","scope":1641,"src":"14356:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_memory_ptr","typeString":"struct ProofChainVoting.ContentInfo"},"typeName":{"id":1578,"nodeType":"UserDefinedTypeName","pathNode":{"id":1577,"name":"ContentInfo","nameLocations":["14356:11:4"],"nodeType":"IdentifierPath","referencedDeclaration":835,"src":"14356:11:4"},"referencedDeclaration":835,"src":"14356:11:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_storage_ptr","typeString":"struct ProofChainVoting.ContentInfo"}},"visibility":"internal"}],"id":1583,"initialValue":{"baseExpression":{"id":1580,"name":"contents","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"14385:8:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_ContentInfo_$835_storage_$","typeString":"mapping(uint256 => struct ProofChainVoting.ContentInfo storage ref)"}},"id":1582,"indexExpression":{"id":1581,"name":"contentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"14394:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14385:19:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_storage","typeString":"struct ProofChainVoting.ContentInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"14356:48:4"},{"assignments":[1588],"declarations":[{"constant":false,"id":1588,"mutability":"mutable","name":"distribution","nameLocation":"14431:12:4","nodeType":"VariableDeclaration","scope":1641,"src":"14414:29:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1586,"name":"uint256","nodeType":"ElementaryTypeName","src":"14414:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1587,"nodeType":"ArrayTypeName","src":"14414:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":1594,"initialValue":{"arguments":[{"hexValue":"33","id":1592,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14460:1:4","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"}],"id":1591,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"14446:13:4","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1589,"name":"uint256","nodeType":"ElementaryTypeName","src":"14450:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1590,"nodeType":"ArrayTypeName","src":"14450:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14446:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"14414:48:4"},{"expression":{"id":1602,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1595,"name":"distribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"14472:12:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1597,"indexExpression":{"hexValue":"30","id":1596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14485:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14472:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"id":1598,"name":"content","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"14490:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_memory_ptr","typeString":"struct ProofChainVoting.ContentInfo memory"}},"id":1599,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14498:16:4","memberName":"voteDistribution","nodeType":"MemberAccess","referencedDeclaration":827,"src":"14490:24:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":1601,"indexExpression":{"hexValue":"30","id":1600,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14515:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14490:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14472:45:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1603,"nodeType":"ExpressionStatement","src":"14472:45:4"},{"expression":{"id":1611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1604,"name":"distribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"14527:12:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1606,"indexExpression":{"hexValue":"31","id":1605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14540:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14527:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"id":1607,"name":"content","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"14545:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_memory_ptr","typeString":"struct ProofChainVoting.ContentInfo memory"}},"id":1608,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14553:16:4","memberName":"voteDistribution","nodeType":"MemberAccess","referencedDeclaration":827,"src":"14545:24:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":1610,"indexExpression":{"hexValue":"31","id":1609,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14570:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14545:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14527:45:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1612,"nodeType":"ExpressionStatement","src":"14527:45:4"},{"expression":{"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1613,"name":"distribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"14582:12:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":1615,"indexExpression":{"hexValue":"32","id":1614,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14595:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14582:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"expression":{"id":1616,"name":"content","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"14600:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_memory_ptr","typeString":"struct ProofChainVoting.ContentInfo memory"}},"id":1617,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14608:16:4","memberName":"voteDistribution","nodeType":"MemberAccess","referencedDeclaration":827,"src":"14600:24:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$3_memory_ptr","typeString":"uint256[3] memory"}},"id":1619,"indexExpression":{"hexValue":"32","id":1618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14625:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14600:27:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"14582:45:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1621,"nodeType":"ExpressionStatement","src":"14582:45:4"},{"expression":{"components":[{"expression":{"id":1622,"name":"content","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"14667:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_memory_ptr","typeString":"struct ProofChainVoting.ContentInfo memory"}},"id":1623,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14675:8:4","memberName":"ipfsHash","nodeType":"MemberAccess","referencedDeclaration":813,"src":"14667:16:4","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":1624,"name":"content","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"14697:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_memory_ptr","typeString":"struct ProofChainVoting.ContentInfo memory"}},"id":1625,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14705:14:4","memberName":"submissionTime","nodeType":"MemberAccess","referencedDeclaration":815,"src":"14697:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1626,"name":"content","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"14733:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_memory_ptr","typeString":"struct ProofChainVoting.ContentInfo memory"}},"id":1627,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14741:14:4","memberName":"votingDeadline","nodeType":"MemberAccess","referencedDeclaration":817,"src":"14733:22:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1628,"name":"content","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"14769:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_memory_ptr","typeString":"struct ProofChainVoting.ContentInfo memory"}},"id":1629,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14777:8:4","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":821,"src":"14769:16:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1630,"name":"content","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"14799:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_memory_ptr","typeString":"struct ProofChainVoting.ContentInfo memory"}},"id":1631,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14807:11:4","memberName":"isFinalized","nodeType":"MemberAccess","referencedDeclaration":823,"src":"14799:19:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1632,"name":"distribution","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"14832:12:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},{"expression":{"id":1633,"name":"content","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"14858:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_memory_ptr","typeString":"struct ProofChainVoting.ContentInfo memory"}},"id":1634,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14866:16:4","memberName":"participantCount","nodeType":"MemberAccess","referencedDeclaration":829,"src":"14858:24:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1635,"name":"content","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"14896:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_memory_ptr","typeString":"struct ProofChainVoting.ContentInfo memory"}},"id":1636,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14904:13:4","memberName":"totalUSDValue","nodeType":"MemberAccess","referencedDeclaration":831,"src":"14896:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1637,"name":"content","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1579,"src":"14931:7:4","typeDescriptions":{"typeIdentifier":"t_struct$_ContentInfo_$835_memory_ptr","typeString":"struct ProofChainVoting.ContentInfo memory"}},"id":1638,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14939:13:4","memberName":"winningOption","nodeType":"MemberAccess","referencedDeclaration":834,"src":"14931:21:4","typeDescriptions":{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"}}],"id":1639,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"14653:309:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$_t_bool_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$_t_enum$_VoteOption_$788_$","typeString":"tuple(string memory,uint256,uint256,bool,bool,uint256[] memory,uint256,uint256,enum ProofChainVoting.VoteOption)"}},"functionReturnParameters":1576,"id":1640,"nodeType":"Return","src":"14646:316:4"}]},"documentation":{"id":1552,"nodeType":"StructuredDocumentation","src":"13391:591:4","text":" @dev Get complete content information\n @param contentId ID of the content\n @return ipfsHash IPFS hash of the content\n @return submissionTime When content was submitted\n @return votingDeadline When voting ends\n @return isActive Whether voting is active\n @return isFinalized Whether voting is finalized\n @return voteDistribution Array of vote counts [REJECT, APPROVE, ABSTAIN]\n @return participantCount Total number of voters\n @return totalUSDValue Total USD value staked\n @return winningOption Winning vote option"},"functionSelector":"7509c330","id":1642,"implemented":true,"kind":"function","modifiers":[],"name":"getContentInfo","nameLocation":"13996:14:4","nodeType":"FunctionDefinition","parameters":{"id":1555,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1554,"mutability":"mutable","name":"contentId","nameLocation":"14019:9:4","nodeType":"VariableDeclaration","scope":1642,"src":"14011:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1553,"name":"uint256","nodeType":"ElementaryTypeName","src":"14011:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14010:19:4"},"returnParameters":{"id":1576,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1557,"mutability":"mutable","name":"ipfsHash","nameLocation":"14076:8:4","nodeType":"VariableDeclaration","scope":1642,"src":"14062:22:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1556,"name":"string","nodeType":"ElementaryTypeName","src":"14062:6:4","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1559,"mutability":"mutable","name":"submissionTime","nameLocation":"14102:14:4","nodeType":"VariableDeclaration","scope":1642,"src":"14094:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1558,"name":"uint256","nodeType":"ElementaryTypeName","src":"14094:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1561,"mutability":"mutable","name":"votingDeadline","nameLocation":"14134:14:4","nodeType":"VariableDeclaration","scope":1642,"src":"14126:22:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1560,"name":"uint256","nodeType":"ElementaryTypeName","src":"14126:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1563,"mutability":"mutable","name":"isActive","nameLocation":"14163:8:4","nodeType":"VariableDeclaration","scope":1642,"src":"14158:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1562,"name":"bool","nodeType":"ElementaryTypeName","src":"14158:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1565,"mutability":"mutable","name":"isFinalized","nameLocation":"14186:11:4","nodeType":"VariableDeclaration","scope":1642,"src":"14181:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1564,"name":"bool","nodeType":"ElementaryTypeName","src":"14181:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1568,"mutability":"mutable","name":"voteDistribution","nameLocation":"14224:16:4","nodeType":"VariableDeclaration","scope":1642,"src":"14207:33:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1566,"name":"uint256","nodeType":"ElementaryTypeName","src":"14207:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1567,"nodeType":"ArrayTypeName","src":"14207:9:4","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1570,"mutability":"mutable","name":"participantCount","nameLocation":"14258:16:4","nodeType":"VariableDeclaration","scope":1642,"src":"14250:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1569,"name":"uint256","nodeType":"ElementaryTypeName","src":"14250:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1572,"mutability":"mutable","name":"totalUSDValue","nameLocation":"14292:13:4","nodeType":"VariableDeclaration","scope":1642,"src":"14284:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1571,"name":"uint256","nodeType":"ElementaryTypeName","src":"14284:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1575,"mutability":"mutable","name":"winningOption","nameLocation":"14326:13:4","nodeType":"VariableDeclaration","scope":1642,"src":"14315:24:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"},"typeName":{"id":1574,"nodeType":"UserDefinedTypeName","pathNode":{"id":1573,"name":"VoteOption","nameLocations":["14315:10:4"],"nodeType":"IdentifierPath","referencedDeclaration":788,"src":"14315:10:4"},"referencedDeclaration":788,"src":"14315:10:4","typeDescriptions":{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"}},"visibility":"internal"}],"src":"14052:293:4"},"scope":1810,"src":"13987:982:4","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1691,"nodeType":"Block","src":"15712:321:4","statements":[{"assignments":[1668],"declarations":[{"constant":false,"id":1668,"mutability":"mutable","name":"userVote","nameLocation":"15738:8:4","nodeType":"VariableDeclaration","scope":1691,"src":"15722:24:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_UserVote_$852_memory_ptr","typeString":"struct ProofChainVoting.UserVote"},"typeName":{"id":1667,"nodeType":"UserDefinedTypeName","pathNode":{"id":1666,"name":"UserVote","nameLocations":["15722:8:4"],"nodeType":"IdentifierPath","referencedDeclaration":852,"src":"15722:8:4"},"referencedDeclaration":852,"src":"15722:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_UserVote_$852_storage_ptr","typeString":"struct ProofChainVoting.UserVote"}},"visibility":"internal"}],"id":1674,"initialValue":{"baseExpression":{"baseExpression":{"id":1669,"name":"userVotes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":880,"src":"15749:9:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_struct$_UserVote_$852_storage_$_$","typeString":"mapping(uint256 => mapping(address => struct ProofChainVoting.UserVote storage ref))"}},"id":1671,"indexExpression":{"id":1670,"name":"contentId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1645,"src":"15759:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15749:20:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_UserVote_$852_storage_$","typeString":"mapping(address => struct ProofChainVoting.UserVote storage ref)"}},"id":1673,"indexExpression":{"id":1672,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"15770:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15749:26:4","typeDescriptions":{"typeIdentifier":"t_struct$_UserVote_$852_storage","typeString":"struct ProofChainVoting.UserVote storage ref"}},"nodeType":"VariableDeclarationStatement","src":"15722:53:4"},{"expression":{"components":[{"expression":{"id":1675,"name":"userVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"15806:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_UserVote_$852_memory_ptr","typeString":"struct ProofChainVoting.UserVote memory"}},"id":1676,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15815:8:4","memberName":"hasVoted","nodeType":"MemberAccess","referencedDeclaration":837,"src":"15806:17:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1677,"name":"userVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"15837:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_UserVote_$852_memory_ptr","typeString":"struct ProofChainVoting.UserVote memory"}},"id":1678,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15846:4:4","memberName":"vote","nodeType":"MemberAccess","referencedDeclaration":840,"src":"15837:13:4","typeDescriptions":{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"}},{"expression":{"id":1679,"name":"userVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"15864:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_UserVote_$852_memory_ptr","typeString":"struct ProofChainVoting.UserVote memory"}},"id":1680,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15873:10:4","memberName":"confidence","nodeType":"MemberAccess","referencedDeclaration":842,"src":"15864:19:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},{"expression":{"id":1681,"name":"userVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"15897:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_UserVote_$852_memory_ptr","typeString":"struct ProofChainVoting.UserVote memory"}},"id":1682,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15906:9:4","memberName":"tokenType","nodeType":"MemberAccess","referencedDeclaration":845,"src":"15897:18:4","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"}},{"expression":{"id":1683,"name":"userVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"15929:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_UserVote_$852_memory_ptr","typeString":"struct ProofChainVoting.UserVote memory"}},"id":1684,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15938:11:4","memberName":"stakeAmount","nodeType":"MemberAccess","referencedDeclaration":847,"src":"15929:20:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1685,"name":"userVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"15963:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_UserVote_$852_memory_ptr","typeString":"struct ProofChainVoting.UserVote memory"}},"id":1686,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15972:12:4","memberName":"votingWeight","nodeType":"MemberAccess","referencedDeclaration":849,"src":"15963:21:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1687,"name":"userVote","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1668,"src":"15998:8:4","typeDescriptions":{"typeIdentifier":"t_struct$_UserVote_$852_memory_ptr","typeString":"struct ProofChainVoting.UserVote memory"}},"id":1688,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"16007:9:4","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":851,"src":"15998:18:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1689,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15792:234:4","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_enum$_VoteOption_$788_$_t_uint8_$_t_enum$_TokenType_$798_$_t_uint256_$_t_uint256_$_t_uint256_$","typeString":"tuple(bool,enum ProofChainVoting.VoteOption,uint8,enum ProofChainVoting.TokenType,uint256,uint256,uint256)"}},"functionReturnParameters":1665,"id":1690,"nodeType":"Return","src":"15785:241:4"}]},"documentation":{"id":1643,"nodeType":"StructuredDocumentation","src":"14979:456:4","text":" @dev Get user's vote for specific content\n @param contentId ID of the content\n @param user User address\n @return hasVoted Whether user has voted\n @return vote User's vote choice\n @return confidence Confidence level (1-10)\n @return tokenType Token used for staking\n @return stakeAmount Amount staked\n @return votingWeight Calculated voting weight\n @return timestamp When vote was cast"},"functionSelector":"03c7881a","id":1692,"implemented":true,"kind":"function","modifiers":[],"name":"getUserVote","nameLocation":"15449:11:4","nodeType":"FunctionDefinition","parameters":{"id":1648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1645,"mutability":"mutable","name":"contentId","nameLocation":"15469:9:4","nodeType":"VariableDeclaration","scope":1692,"src":"15461:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1644,"name":"uint256","nodeType":"ElementaryTypeName","src":"15461:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1647,"mutability":"mutable","name":"user","nameLocation":"15488:4:4","nodeType":"VariableDeclaration","scope":1692,"src":"15480:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1646,"name":"address","nodeType":"ElementaryTypeName","src":"15480:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15460:33:4"},"returnParameters":{"id":1665,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1650,"mutability":"mutable","name":"hasVoted","nameLocation":"15531:8:4","nodeType":"VariableDeclaration","scope":1692,"src":"15526:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1649,"name":"bool","nodeType":"ElementaryTypeName","src":"15526:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1653,"mutability":"mutable","name":"vote","nameLocation":"15560:4:4","nodeType":"VariableDeclaration","scope":1692,"src":"15549:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"},"typeName":{"id":1652,"nodeType":"UserDefinedTypeName","pathNode":{"id":1651,"name":"VoteOption","nameLocations":["15549:10:4"],"nodeType":"IdentifierPath","referencedDeclaration":788,"src":"15549:10:4"},"referencedDeclaration":788,"src":"15549:10:4","typeDescriptions":{"typeIdentifier":"t_enum$_VoteOption_$788","typeString":"enum ProofChainVoting.VoteOption"}},"visibility":"internal"},{"constant":false,"id":1655,"mutability":"mutable","name":"confidence","nameLocation":"15580:10:4","nodeType":"VariableDeclaration","scope":1692,"src":"15574:16:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1654,"name":"uint8","nodeType":"ElementaryTypeName","src":"15574:5:4","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1658,"mutability":"mutable","name":"tokenType","nameLocation":"15610:9:4","nodeType":"VariableDeclaration","scope":1692,"src":"15600:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"},"typeName":{"id":1657,"nodeType":"UserDefinedTypeName","pathNode":{"id":1656,"name":"TokenType","nameLocations":["15600:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":798,"src":"15600:9:4"},"referencedDeclaration":798,"src":"15600:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"}},"visibility":"internal"},{"constant":false,"id":1660,"mutability":"mutable","name":"stakeAmount","nameLocation":"15637:11:4","nodeType":"VariableDeclaration","scope":1692,"src":"15629:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1659,"name":"uint256","nodeType":"ElementaryTypeName","src":"15629:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1662,"mutability":"mutable","name":"votingWeight","nameLocation":"15666:12:4","nodeType":"VariableDeclaration","scope":1692,"src":"15658:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1661,"name":"uint256","nodeType":"ElementaryTypeName","src":"15658:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1664,"mutability":"mutable","name":"timestamp","nameLocation":"15696:9:4","nodeType":"VariableDeclaration","scope":1692,"src":"15688:17:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1663,"name":"uint256","nodeType":"ElementaryTypeName","src":"15688:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15516:195:4"},"scope":1810,"src":"15440:593:4","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1704,"nodeType":"Block","src":"16282:43:4","statements":[{"expression":{"id":1702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1700,"name":"merkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":854,"src":"16292:10:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1701,"name":"newMerkleRoot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1695,"src":"16305:13:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"16292:26:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":1703,"nodeType":"ExpressionStatement","src":"16292:26:4"}]},"documentation":{"id":1693,"nodeType":"StructuredDocumentation","src":"16097:112:4","text":" @dev Update merkle root for identity verification\n @param newMerkleRoot New merkle root"},"functionSelector":"4783f0ef","id":1705,"implemented":true,"kind":"function","modifiers":[{"id":1698,"kind":"modifierInvocation","modifierName":{"id":1697,"name":"onlyOwner","nameLocations":["16272:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"16272:9:4"},"nodeType":"ModifierInvocation","src":"16272:9:4"}],"name":"updateMerkleRoot","nameLocation":"16223:16:4","nodeType":"FunctionDefinition","parameters":{"id":1696,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1695,"mutability":"mutable","name":"newMerkleRoot","nameLocation":"16248:13:4","nodeType":"VariableDeclaration","scope":1705,"src":"16240:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1694,"name":"bytes32","nodeType":"ElementaryTypeName","src":"16240:7:4","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"16239:23:4"},"returnParameters":{"id":1699,"nodeType":"ParameterList","parameters":[],"src":"16282:0:4"},"scope":1810,"src":"16214:111:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1721,"nodeType":"Block","src":"16499:60:4","statements":[{"expression":{"id":1719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":1714,"name":"supportedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"16509:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_TokenType_$798_$_t_struct$_TokenInfo_$811_storage_$","typeString":"mapping(enum ProofChainVoting.TokenType => struct ProofChainVoting.TokenInfo storage ref)"}},"id":1716,"indexExpression":{"id":1715,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1709,"src":"16525:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16509:26:4","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$811_storage","typeString":"struct ProofChainVoting.TokenInfo storage ref"}},"id":1717,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"16536:8:4","memberName":"isActive","nodeType":"MemberAccess","referencedDeclaration":810,"src":"16509:35:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1718,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"16547:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"16509:43:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1720,"nodeType":"ExpressionStatement","src":"16509:43:4"}]},"documentation":{"id":1706,"nodeType":"StructuredDocumentation","src":"16335:94:4","text":" @dev Deactivate a token\n @param tokenType Type of token to deactivate"},"functionSelector":"67c95bde","id":1722,"implemented":true,"kind":"function","modifiers":[{"id":1712,"kind":"modifierInvocation","modifierName":{"id":1711,"name":"onlyOwner","nameLocations":["16489:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"16489:9:4"},"nodeType":"ModifierInvocation","src":"16489:9:4"}],"name":"deactivateToken","nameLocation":"16443:15:4","nodeType":"FunctionDefinition","parameters":{"id":1710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1709,"mutability":"mutable","name":"tokenType","nameLocation":"16469:9:4","nodeType":"VariableDeclaration","scope":1722,"src":"16459:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"},"typeName":{"id":1708,"nodeType":"UserDefinedTypeName","pathNode":{"id":1707,"name":"TokenType","nameLocations":["16459:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":798,"src":"16459:9:4"},"referencedDeclaration":798,"src":"16459:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"}},"visibility":"internal"}],"src":"16458:21:4"},"returnParameters":{"id":1713,"nodeType":"ParameterList","parameters":[],"src":"16499:0:4"},"scope":1810,"src":"16434:125:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1766,"nodeType":"Block","src":"16808:262:4","statements":[{"condition":{"commonType":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"},"id":1736,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1733,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"16822:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1734,"name":"TokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"16835:9:4","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_TokenType_$798_$","typeString":"type(enum ProofChainVoting.TokenType)"}},"id":1735,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16845:3:4","memberName":"ETH","nodeType":"MemberAccess","referencedDeclaration":790,"src":"16835:13:4","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"}},"src":"16822:26:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1764,"nodeType":"Block","src":"16914:150:4","statements":[{"assignments":[1749],"declarations":[{"constant":false,"id":1749,"mutability":"mutable","name":"tokenInfo","nameLocation":"16945:9:4","nodeType":"VariableDeclaration","scope":1764,"src":"16928:26:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$811_memory_ptr","typeString":"struct ProofChainVoting.TokenInfo"},"typeName":{"id":1748,"nodeType":"UserDefinedTypeName","pathNode":{"id":1747,"name":"TokenInfo","nameLocations":["16928:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":811,"src":"16928:9:4"},"referencedDeclaration":811,"src":"16928:9:4","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$811_storage_ptr","typeString":"struct ProofChainVoting.TokenInfo"}},"visibility":"internal"}],"id":1753,"initialValue":{"baseExpression":{"id":1750,"name":"supportedTokens","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":868,"src":"16957:15:4","typeDescriptions":{"typeIdentifier":"t_mapping$_t_enum$_TokenType_$798_$_t_struct$_TokenInfo_$811_storage_$","typeString":"mapping(enum ProofChainVoting.TokenType => struct ProofChainVoting.TokenInfo storage ref)"}},"id":1752,"indexExpression":{"id":1751,"name":"tokenType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1726,"src":"16973:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16957:26:4","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$811_storage","typeString":"struct ProofChainVoting.TokenInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"16928:55:4"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1759,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"17037:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17037:7:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1761,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"17046:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":1755,"name":"tokenInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1749,"src":"17004:9:4","typeDescriptions":{"typeIdentifier":"t_struct$_TokenInfo_$811_memory_ptr","typeString":"struct ProofChainVoting.TokenInfo memory"}},"id":1756,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"17014:12:4","memberName":"tokenAddress","nodeType":"MemberAccess","referencedDeclaration":800,"src":"17004:22:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1754,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"16997:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$779_$","typeString":"type(contract IERC20)"}},"id":1757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16997:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$779","typeString":"contract IERC20"}},"id":1758,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"17028:8:4","memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":771,"src":"16997:39:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":1762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16997:56:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1763,"nodeType":"ExpressionStatement","src":"16997:56:4"}]},"id":1765,"nodeType":"IfStatement","src":"16818:246:4","trueBody":{"id":1746,"nodeType":"Block","src":"16850:58:4","statements":[{"expression":{"arguments":[{"id":1743,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1728,"src":"16890:6:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":1739,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"16872:5:4","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1740,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16872:7:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1738,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16864:8:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":1737,"name":"address","nodeType":"ElementaryTypeName","src":"16864:8:4","stateMutability":"payable","typeDescriptions":{}}},"id":1741,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16864:16:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":1742,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16881:8:4","memberName":"transfer","nodeType":"MemberAccess","src":"16864:25:4","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16864:33:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1745,"nodeType":"ExpressionStatement","src":"16864:33:4"}]}}]},"documentation":{"id":1723,"nodeType":"StructuredDocumentation","src":"16569:151:4","text":" @dev Emergency withdraw function for owner\n @param tokenType Type of token to withdraw\n @param amount Amount to withdraw"},"functionSelector":"ccf62c3d","id":1767,"implemented":true,"kind":"function","modifiers":[{"id":1731,"kind":"modifierInvocation","modifierName":{"id":1730,"name":"onlyOwner","nameLocations":["16798:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"16798:9:4"},"nodeType":"ModifierInvocation","src":"16798:9:4"}],"name":"emergencyWithdraw","nameLocation":"16734:17:4","nodeType":"FunctionDefinition","parameters":{"id":1729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1726,"mutability":"mutable","name":"tokenType","nameLocation":"16762:9:4","nodeType":"VariableDeclaration","scope":1767,"src":"16752:19:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"},"typeName":{"id":1725,"nodeType":"UserDefinedTypeName","pathNode":{"id":1724,"name":"TokenType","nameLocations":["16752:9:4"],"nodeType":"IdentifierPath","referencedDeclaration":798,"src":"16752:9:4"},"referencedDeclaration":798,"src":"16752:9:4","typeDescriptions":{"typeIdentifier":"t_enum$_TokenType_$798","typeString":"enum ProofChainVoting.TokenType"}},"visibility":"internal"},{"constant":false,"id":1728,"mutability":"mutable","name":"amount","nameLocation":"16781:6:4","nodeType":"VariableDeclaration","scope":1767,"src":"16773:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1727,"name":"uint256","nodeType":"ElementaryTypeName","src":"16773:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16751:37:4"},"returnParameters":{"id":1732,"nodeType":"ParameterList","parameters":[],"src":"16808:0:4"},"scope":1810,"src":"16725:345:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1808,"nodeType":"Block","src":"17355:141:4","statements":[{"assignments":[1776],"declarations":[{"constant":false,"id":1776,"mutability":"mutable","name":"z","nameLocation":"17373:1:4","nodeType":"VariableDeclaration","scope":1808,"src":"17365:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1775,"name":"uint256","nodeType":"ElementaryTypeName","src":"17365:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1783,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1779,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1777,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"17378:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1778,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17382:1:4","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"17378:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1780,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17377:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1781,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17387:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"17377:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17365:23:4"},{"expression":{"id":1786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1784,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"17398:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1785,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"17402:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17398:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1787,"nodeType":"ExpressionStatement","src":"17398:5:4"},{"body":{"id":1806,"nodeType":"Block","src":"17427:63:4","statements":[{"expression":{"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1791,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"17441:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1792,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"17445:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17441:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1794,"nodeType":"ExpressionStatement","src":"17441:5:4"},{"expression":{"id":1804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1795,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"17460:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1796,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1770,"src":"17465:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1797,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"17469:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17465:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":1799,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"17473:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17465:9:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1801,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17464:11:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17478:1:4","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"17464:15:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17460:19:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1805,"nodeType":"ExpressionStatement","src":"17460:19:4"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1788,"name":"z","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1776,"src":"17420:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1789,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1773,"src":"17424:1:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17420:5:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1807,"nodeType":"WhileStatement","src":"17413:77:4"}]},"documentation":{"id":1768,"nodeType":"StructuredDocumentation","src":"17137:154:4","text":" @dev Calculate square root using Babylonian method\n @param x Number to calculate square root of\n @return y Square root of x"},"id":1809,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"17305:4:4","nodeType":"FunctionDefinition","parameters":{"id":1771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1770,"mutability":"mutable","name":"x","nameLocation":"17318:1:4","nodeType":"VariableDeclaration","scope":1809,"src":"17310:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1769,"name":"uint256","nodeType":"ElementaryTypeName","src":"17310:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17309:11:4"},"returnParameters":{"id":1774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1773,"mutability":"mutable","name":"y","nameLocation":"17352:1:4","nodeType":"VariableDeclaration","scope":1809,"src":"17344:9:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1772,"name":"uint256","nodeType":"ElementaryTypeName","src":"17344:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17343:11:4"},"scope":1810,"src":"17296:200:4","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1811,"src":"1151:16347:4","usedErrors":[]}],"src":"32:17466:4"},"id":4}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/security/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol":{"MerkleProof":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601757603a9081601d823930815050f35b600080fdfe600080fdfea26469706673582212203c81334960f98bd4db8c102ed7768364bcea2343461fbc1770070f1e460ddab164736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x17 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x1D DUP3 CODECOPY ADDRESS DUP2 POP POP RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY DUP2 CALLER 0x49 PUSH1 0xF9 DUP12 0xD4 0xDB DUP13 LT 0x2E 0xD7 PUSH23 0x8364BCEA2343461FBC1770070F1E460DDAB164736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ","sourceMap":"802:8819:3:-:0;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea26469706673582212203c81334960f98bd4db8c102ed7768364bcea2343461fbc1770070f1e460ddab164736f6c63430008130033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY DUP2 CALLER 0x49 PUSH1 0xF9 DUP12 0xD4 0xDB DUP13 LT 0x2E 0xD7 PUSH23 0x8364BCEA2343461FBC1770070F1E460DDAB164736F6C63 NUMBER STOP ADDMOD SGT STOP CALLER ","sourceMap":"802:8819:3:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"These functions deal with verification of Merkle Tree proofs. The tree and the proofs can be generated using our https://github.com/OpenZeppelin/merkle-tree[JavaScript library]. You will find a quickstart guide in the readme. WARNING: You should avoid using leaf values that are 64 bytes long prior to hashing, or use a hash function other than keccak256 for hashing leaves. This is because the concatenation of a sorted pair of internal nodes in the merkle tree could be reinterpreted as a leaf value. OpenZeppelin's JavaScript library generates merkle trees that are safe against this attack out of the box.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":\"MerkleProof\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]}},\"version\":1}"}},"contracts/ProofChainVoting.sol":{"AggregatorV3Interface":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"latestRoundData","outputs":[{"internalType":"uint80","name":"roundId","type":"uint80"},{"internalType":"int256","name":"answer","type":"int256"},{"internalType":"uint256","name":"startedAt","type":"uint256"},{"internalType":"uint256","name":"updatedAt","type":"uint256"},{"internalType":"uint80","name":"answeredInRound","type":"uint80"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"decimals()":"313ce567","latestRoundData()":"feaf968c"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ProofChainVoting.sol\":\"AggregatorV3Interface\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"contracts/ProofChainVoting.sol\":{\"keccak256\":\"0x95b8ad31551cf46ec9e4eb2a38880049a96ec11ac24f1ca45c259422dd01726a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54ef511bdcfc1d09975943fce6e6421a39bbe060ab3b8284b5e9e8407807cfc1\",\"dweb:/ipfs/QmaUavmqT9ASLBbL4RVbiXVHY5vigp2LmKZ895fHFhiPNV\"]}},\"version\":1}"},"IERC20":{"abi":[{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"balanceOf(address)":"70a08231","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ProofChainVoting.sol\":\"IERC20\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"contracts/ProofChainVoting.sol\":{\"keccak256\":\"0x95b8ad31551cf46ec9e4eb2a38880049a96ec11ac24f1ca45c259422dd01726a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54ef511bdcfc1d09975943fce6e6421a39bbe060ab3b8284b5e9e8407807cfc1\",\"dweb:/ipfs/QmaUavmqT9ASLBbL4RVbiXVHY5vigp2LmKZ895fHFhiPNV\"]}},\"version\":1}"},"ProofChainVoting":{"abi":[{"inputs":[{"internalType":"bytes32","name":"_merkleRoot","type":"bytes32"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"contentId","type":"uint256"},{"indexed":false,"internalType":"string","name":"ipfsHash","type":"string"},{"indexed":false,"internalType":"uint256","name":"votingDeadline","type":"uint256"},{"indexed":true,"internalType":"address","name":"creator","type":"address"}],"name":"ContentSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"enum ProofChainVoting.TokenType","name":"tokenType","type":"uint8"},{"indexed":false,"internalType":"address","name":"tokenAddress","type":"address"},{"indexed":false,"internalType":"address","name":"priceOracle","type":"address"}],"name":"TokenAdded","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"contentId","type":"uint256"},{"indexed":true,"internalType":"address","name":"voter","type":"address"},{"indexed":false,"internalType":"enum ProofChainVoting.VoteOption","name":"vote","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"confidence","type":"uint8"},{"indexed":false,"internalType":"enum ProofChainVoting.TokenType","name":"tokenType","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"stakeAmount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"votingWeight","type":"uint256"}],"name":"VoteSubmitted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"contentId","type":"uint256"},{"indexed":false,"internalType":"enum ProofChainVoting.VoteOption","name":"winningOption","type":"uint8"},{"indexed":false,"internalType":"uint256","name":"totalParticipants","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"totalUSDValue","type":"uint256"}],"name":"VotingFinalized","type":"event"},{"inputs":[],"name":"MAX_VOTING_PERIOD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"MIN_VOTING_PERIOD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum ProofChainVoting.TokenType","name":"tokenType","type":"uint8"},{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"address","name":"priceOracle","type":"address"},{"internalType":"uint8","name":"decimals","type":"uint8"},{"internalType":"uint256","name":"bonusMultiplier","type":"uint256"},{"internalType":"uint256","name":"minStakeAmount","type":"uint256"}],"name":"addToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"usdValue","type":"uint256"},{"internalType":"uint8","name":"confidence","type":"uint8"},{"internalType":"uint256","name":"bonusMultiplier","type":"uint256"}],"name":"calculateVotingWeight","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"contentCounter","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"contents","outputs":[{"internalType":"string","name":"ipfsHash","type":"string"},{"internalType":"uint256","name":"submissionTime","type":"uint256"},{"internalType":"uint256","name":"votingDeadline","type":"uint256"},{"internalType":"address","name":"creator","type":"address"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"bool","name":"isFinalized","type":"bool"},{"internalType":"uint256","name":"participantCount","type":"uint256"},{"internalType":"uint256","name":"totalUSDValue","type":"uint256"},{"internalType":"enum ProofChainVoting.VoteOption","name":"winningOption","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum ProofChainVoting.TokenType","name":"tokenType","type":"uint8"},{"internalType":"uint256","name":"tokenAmount","type":"uint256"}],"name":"convertToUSD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum ProofChainVoting.TokenType","name":"tokenType","type":"uint8"}],"name":"deactivateToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"enum ProofChainVoting.TokenType","name":"tokenType","type":"uint8"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"emergencyWithdraw","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"contentId","type":"uint256"}],"name":"finalizeVoting","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"contentId","type":"uint256"}],"name":"getContentInfo","outputs":[{"internalType":"string","name":"ipfsHash","type":"string"},{"internalType":"uint256","name":"submissionTime","type":"uint256"},{"internalType":"uint256","name":"votingDeadline","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"},{"internalType":"bool","name":"isFinalized","type":"bool"},{"internalType":"uint256[]","name":"voteDistribution","type":"uint256[]"},{"internalType":"uint256","name":"participantCount","type":"uint256"},{"internalType":"uint256","name":"totalUSDValue","type":"uint256"},{"internalType":"enum ProofChainVoting.VoteOption","name":"winningOption","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"enum ProofChainVoting.TokenType","name":"tokenType","type":"uint8"}],"name":"getTokenPriceUSD","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"contentId","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"getUserVote","outputs":[{"internalType":"bool","name":"hasVoted","type":"bool"},{"internalType":"enum ProofChainVoting.VoteOption","name":"vote","type":"uint8"},{"internalType":"uint8","name":"confidence","type":"uint8"},{"internalType":"enum ProofChainVoting.TokenType","name":"tokenType","type":"uint8"},{"internalType":"uint256","name":"stakeAmount","type":"uint256"},{"internalType":"uint256","name":"votingWeight","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"bytes32[]","name":"merkleProof","type":"bytes32[]"}],"name":"isVerifiedIdentity","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"merkleRoot","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"ipfsHash","type":"string"},{"internalType":"uint256","name":"votingDuration","type":"uint256"}],"name":"submitContent","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"contentId","type":"uint256"},{"internalType":"enum ProofChainVoting.VoteOption","name":"vote","type":"uint8"},{"internalType":"uint8","name":"confidence","type":"uint8"},{"internalType":"enum ProofChainVoting.TokenType","name":"tokenType","type":"uint8"},{"internalType":"uint256","name":"stakeAmount","type":"uint256"},{"internalType":"bytes32[]","name":"merkleProof","type":"bytes32[]"}],"name":"submitVote","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"enum ProofChainVoting.TokenType","name":"","type":"uint8"}],"name":"supportedTokens","outputs":[{"internalType":"address","name":"tokenAddress","type":"address"},{"internalType":"address","name":"priceOracle","type":"address"},{"internalType":"uint8","name":"decimals","type":"uint8"},{"internalType":"uint256","name":"bonusMultiplier","type":"uint256"},{"internalType":"uint256","name":"minStakeAmount","type":"uint256"},{"internalType":"bool","name":"isActive","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"newMerkleRoot","type":"bytes32"}],"name":"updateMerkleRoot","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"address","name":"","type":"address"}],"name":"userVotes","outputs":[{"internalType":"bool","name":"hasVoted","type":"bool"},{"internalType":"enum ProofChainVoting.VoteOption","name":"vote","type":"uint8"},{"internalType":"uint8","name":"confidence","type":"uint8"},{"internalType":"enum ProofChainVoting.TokenType","name":"tokenType","type":"uint8"},{"internalType":"uint256","name":"stakeAmount","type":"uint256"},{"internalType":"uint256","name":"votingWeight","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"6080346100a057601f611e9a38819003918201601f19168301916001600160401b038311848410176100a5578084926020946040528339810103126100a0575160008054336001600160a01b0319821681178355604051939290916001600160a01b0316907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09080a3600180556002556000600355611dde90816100bc8239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe608080604052600436101561001357600080fd5b60003560e01c90816303c7881a1461161f57508063215809ca146116035780632eb4a7ab146115e55780633f572d361461156e5780634783f0ef1461154d57806349444831146113e257806363025f6d1461139457806367c95bde14611359578063714d985f14611329578063715018a6146112d05780637354c7e3146112a85780637509c33014611081578063782631a014610ad8578063877baeaa14610ab75780638da5cb5b14610a8e578063a64e024a14610a70578063b53d568a146108b9578063b5ecf91214610808578063ccf62c3d146106f0578063dad3fc1314610285578063e6a9aba314610267578063f2fde38b1461019e5763fe5b3e3b1461011c57600080fd5b3461019957604036600319011261019957610135611702565b600435600052600660205260406000209060018060a01b0316600052602052604060002080546101956001830154926003600282015491015490604051948460ff879660181c169060ff8160101c169060ff808260081c16911688611748565b0390f35b600080fd5b34610199576020366003190112610199576101b7611718565b6101bf611986565b6001600160a01b0390811690811561021357600054826bffffffffffffffffffffffff60a01b821617600055167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a3005b60405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608490fd5b34610199576000366003190112610199576020600354604051908152f35b34610199576040366003190112610199576001600160401b036004351161019957366023600435011215610199576001600160401b03600435600401351161019957366024600435600401356004350101116101995760243560043560040135156106ab57603c8110158061069e575b15610659576103136103086003546119de565b918260035542611a03565b9060405191606083018381106001600160401b03821117610643576040526000835260006020840152600060408401526040519261035084611888565b60405161036c600480350135601f01601f1916602001826118bf565b6004803590810135808352906024016020830137600060206004356004013583010152845242602085015281604085015233606085015260016080850152600060a085015260c0840152600060e08401526000610100840152600061012084015281600052600560205260406000209280518051906001600160401b0382116106435781906103fb8754611833565b601f81116105f3575b50602090601f83116001146105875760009261057c575b50508160011b916000199060031b1c19161784555b60208101516001850155604081015160028501556003840160018060a01b0360608301511681549060ff60a01b6080850151151560a01b169060ff60a81b60a0860151151560a81b169269ffffffffffffffffffff60b01b16171717905560c081015160005b6003811061056557505060e081015160078501556101008101516008850155610120015192600384101561054f5760209360096104d39201611a2f565b604051906040825260043560040135604083015260043560040135602460043501606084013760006060600435600401358401015283820152817fbc19d37dc499c8455564517e576d7d380a7a6f6f340aefd0ee7007abb30a6c423392606081601f19601f6004356004013501168101030190a3604051908152f35b634e487b7160e01b600052602160045260246000fd5b600190602083519301926004828901015501610496565b01519050868061041b565b9250866000526020600020906000935b601f19841685106105d8576001945083601f198116106105bf575b505050811b018455610430565b015160001960f88460031b161c191690558680806105b2565b81810151835560209485019460019093019290910190610597565b909150866000526020600020601f840160051c81016020851061063c575b90849392915b601f830160051c8201811061062d575050610404565b60008155859450600101610617565b5080610611565b634e487b7160e01b600052604160045260246000fd5b60405162461bcd60e51b815260206004820152601760248201527f496e76616c696420766f74696e67206475726174696f6e0000000000000000006044820152606490fd5b5062093a808111156102f5565b60405162461bcd60e51b815260206004820152601960248201527f4950465320686173682063616e6e6f7420626520656d707479000000000000006044820152606490fd5b34610199576106fe36611814565b90610707611986565b600981101561054f576001810361074e575060008080809360018060a01b03825416828215610745575bf11561073957005b6040513d6000823e3d90fd5b506108fc610731565b61075960209161178b565b916044604051610768816118a4565b60018060a01b039060a060ff600484895416988985528260018201548781168b880152851c16604086015260028101546060860152600381015460808601520154161515910152600054166000604051958694859363a9059cbb60e01b8552600485015260248401525af18015610739576107df57005b6107ff9060203d8111610801575b6107f781836118bf565b810190611ad5565b005b503d6107ed565b346101995760203660031901126101995760043560005260056020526108736040600020610835816118e0565b90610195600182015491600281015490600381015460ff60078301549181600960088601549501541694604051998a99610120808c528b01906117d4565b9760208a0152604089015260018060a01b0381166060890152818160a01c161515608089015260a81c16151560a087015260c086015260e085015261010084019061172e565b346101995760c0366003190112610199576004356009811015610199576108de611702565b6001600160a01b039060443582811690819003610199576064359060ff82168092036101995761090c611986565b8415610a365780156109fa576109ed604093600487877fd7e0ffe3c5e893c914e856817d8bfcf09e393c7926b6cf6fd55867404db05cb198885194610950866118a4565b16968785526020850187815289860191825260608601916084358352608087019360a43585528061098860a08a01976001895261178b565b9851166bffffffffffffffffffffffff60a01b8954161788556001880192511682549160ff60a01b905160a01b16916affffffffffffffffffffff60a81b161717905551600285015551600384015551151591019060ff801983541691151516179055565b82519182526020820152a2005b60405162461bcd60e51b8152602060048201526014602482015273496e76616c6964207072696365206f7261636c6560601b6044820152606490fd5b60405162461bcd60e51b8152602060048201526012602482015271496e76616c696420746f6b656e207479706560701b6044820152606490fd5b3461019957600036600319011261019957602060405162093a808152f35b34610199576000366003190112610199576000546040516001600160a01b039091168152602090f35b34610199576020610ad0610aca36611814565b90611c0a565b604051908152f35b60c036600319011261019957600360243510156101995760ff604435166044350361019957600960643510156101995760a4356001600160401b03811161019957610b279036906004016117a4565b9060026001541461103c5760026001556004356000526005602052604060002091610b5b60ff600385015460a01c16611a47565b6002830154421161100157600435600052600660205260406000203360005260205260ff60406000205416610fcc57600160ff60443516101580610fbc575b15610f7757610bb960ff6004610bb160643561178b565b015416611a93565b6003610bc660643561178b565b015460843510610f3b5780610ee7575b5050606435600103610dd9576084353403610d9d575b610bfa608435606435611c0a565b610c156002610c0a60643561178b565b015460443583611c48565b9160405190610c238261186d565b600182526020820190610c3860243583611a10565b604083019160ff6044351683526060840192610c5660643585611aed565b60843560808601528660a08601524260c08601526004356000526006602052604060002033600052602052604060002091610ca086511515849060ff801983541691151516179055565b5194600386101561054f5762ff00008354925160101b16945190600982101561054f57610d349660089660039461ff0063ff00000060c09660181b16938a1b169063ffffff00191617171784556080810151600185015560a0810151600285015501519101556004602435820101610d19868254611a03565b905560078101610d2981546119de565b905501918254611a03565b905560405190610d468260243561172e565b60ff604435166020830152610d606040830160643561173b565b6084356060830152608082015233907ff641c07ff9548b4d94093e2363e7bead14740019250d143f6e940989f4e91bb360a060043592a360018055005b60405162461bcd60e51b8152602060048201526014602482015273125b98dbdc9c9958dd0811551208185b5bdd5b9d60621b6044820152606490fd5b34610e985760006020610ded60643561178b565b604051610df9816118a4565b60a060ff6004600180841b0394828682541696878752600183015490811689880152851c166040860152600281015460608601526003810154608086015201541615159101526064604051809481936323b872dd60e01b835233600484015230602484015260843560448401525af1801561073957610e79575b50610bec565b610e919060203d602011610801576107f781836118bf565b5081610e73565b60405162461bcd60e51b815260206004820152602160248201527f455448206e6f7420657870656374656420666f7220455243323020746f6b656e6044820152607360f81b6064820152608490fd5b610ef19133611cb9565b15610efd578180610bd6565b60405162461bcd60e51b815260206004820152601660248201527524b73b30b634b21034b232b73a34ba3c90383937b7b360511b6044820152606490fd5b60405162461bcd60e51b81526020600482015260146024820152735374616b6520616d6f756e7420746f6f206c6f7760601b6044820152606490fd5b60405162461bcd60e51b815260206004820152601860248201527f496e76616c696420636f6e666964656e6365206c6576656c00000000000000006044820152606490fd5b50600a60ff604435161115610b9a565b60405162461bcd60e51b815260206004820152600d60248201526c105b1c9958591e481d9bdd1959609a1b6044820152606490fd5b60405162461bcd60e51b8152602060048201526013602482015272159bdd1a5b99c81c195c9a5bd908195b991959606a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606490fd5b346101995760203660031901126101995760043560005260056020526040600020604051906110af82611888565b6110b8816118e0565b8252600181015490602083019182526002810154604084015260ff600382015460018060a01b0381166060860152818160a01c161515608086015260a81c16151560a0840152604051908160048201906000905b600382106112925750505060608201916001600160401b0392818110848211176106435760405260c0850152600781015460e08501526008810154610100850152600901546111629060ff166101208501611a10565b6040519060808201908111828210176106435760405260038152606036602083013760c08301515181511561127c576020820152602060c0840151015181516001101561127c576040820152604060c0840151015181516002101561127c5760608201528251915192604081015193608082015115159060a0830151151560e08401519261012061010086015195015197600389101561054f57611213604051986101208a526101208a01906117d4565b93602089015260408801526060870152608086015284810360a08601526020808551928381520194019060005b818110611266575050509361019591849560c086015260e085015261010084019061172e565b8251865260209586019590920191600101611240565b634e487b7160e01b600052603260045260246000fd5b600160208192855481520193019101909161110c565b3461019957602036600319011261019957600435600981101561019957610ad0602091611b10565b34610199576000366003190112610199576112e9611986565b600080546001600160a01b0319811682556001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a3005b346101995760603660031901126101995760243560ff8116810361019957610ad060209160443590600435611c48565b3461019957602036600319011261019957600435600981101561019957611389600491611384611986565b61178b565b01805460ff19169055005b34610199576040366003190112610199576113ad611718565b6024356001600160401b038111610199576020916113d26113d89236906004016117a4565b91611cb9565b6040519015158152f35b346101995760203660031901126101995760043580600052600560205260406000206003810190815461141a60ff8260a01c16611a47565b60028201544211156115085760a81c60ff166114cf577fbbbe9b42ddfa0692cd5f3dc618525dde4b8fe438fe573f13b3fa9fb1287d6fcd91606091600091600482015460058301548181116114c3575b506006830154116114ba575b6114838360098401611a2f565b600160a81b61ffff60a01b1982541617905560086007820154910154906114ad604051809461172e565b60208301526040820152a2005b60029250611476565b9350506001928761146a565b60405162461bcd60e51b8152602060048201526011602482015270105b1c9958591e48199a5b985b1a5e9959607a1b6044820152606490fd5b60405162461bcd60e51b815260206004820152601760248201527f566f74696e6720706572696f64206e6f7420656e6465640000000000000000006044820152606490fd5b3461019957602036600319011261019957611566611986565b600435600255005b346101995760203660031901126101995760043560098110156101995761159660c09161178b565b60018060a01b038082541691600181015460ff600283015491816004600386015495015416946040519687528116602087015260a01c16604085015260608401526080830152151560a0820152f35b34610199576000366003190112610199576020600254604051908152f35b34610199576000366003190112610199576020604051603c8152f35b3461019957604036600319011261019957611638611702565b600435600052600660205260406000209060018060a01b031660005260205260406000206116658261186d565b80549060ff821615158352602083019161168560ff8260081c1684611a10565b604084019360ff8260101c1685526116a760ff606083019360181c1683611aed565b60018301549260808201938452600360028201549160a0840192835201549160c08101928352511515945195600387101561054f5760ff9051169251600981101561054f576101959451915192519360405197889788611748565b602435906001600160a01b038216820361019957565b600435906001600160a01b038216820361019957565b90600382101561054f5752565b90600982101561054f5752565b9360ff61177d929998979461176d60c0989560e089019c15158952602089019061172e565b166040860152606085019061173b565b608083015260a08201520152565b600981101561054f576000526004602052604060002090565b9181601f84011215610199578235916001600160401b038311610199576020808501948460051b01011161019957565b919082519283825260005b848110611800575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016117df565b6040906003190112610199576004356009811015610199579060243590565b90600182811c92168015611863575b602083101461184d57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611842565b60e081019081106001600160401b0382111761064357604052565b61014081019081106001600160401b0382111761064357604052565b60c081019081106001600160401b0382111761064357604052565b90601f801991011681019081106001600160401b0382111761064357604052565b90604051918260008254926118f484611833565b9081845260019485811690816000146119635750600114611920575b505061191e925003836118bf565b565b9093915060005260209081600020936000915b81831061194b57505061191e93508201013880611910565b85548884018501529485019487945091830191611933565b91505061191e94506020925060ff191682840152151560051b8201013880611910565b6000546001600160a01b0316330361199a57565b606460405162461bcd60e51b815260206004820152602060248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152fd5b60001981146119ed5760010190565b634e487b7160e01b600052601160045260246000fd5b919082018092116119ed57565b600382101561054f5752565b818102929181159184041417156119ed57565b90600381101561054f5760ff80198354169116179055565b15611a4e57565b60405162461bcd60e51b815260206004820152601d60248201527f436f6e74656e74206e6f7420666f756e64206f7220696e6163746976650000006044820152606490fd5b15611a9a57565b60405162461bcd60e51b8152602060048201526013602482015272151bdad95b881b9bdd081cdd5c1c1bdc9d1959606a1b6044820152606490fd5b90816020910312610199575180151581036101995790565b600982101561054f5752565b519069ffffffffffffffffffff8216820361019957565b60a0600491611b2460ff84610bb18461178b565b6001611b348180851b039261178b565b01541660405192838092633fabe5a360e21b82525afa90811561073957600091611b9b575b506000811315611b665790565b60405162461bcd60e51b815260206004820152600d60248201526c496e76616c696420707269636560981b6044820152606490fd5b9060a0823d8211611be2575b81611bb460a093836118bf565b81010312611bdf5750611bc681611af9565b50611bd8608060208301519201611af9565b5038611b59565b80fd5b3d9150611ba7565b8115611bf4570490565b634e487b7160e01b600052601260045260246000fd5b611c309060ff6001611c24611c1e84611b10565b9361178b565b015460a01c1692611a1c565b604d82116119ed57611c4591600a0a90611bea565b90565b9060018083016000818511611ca55750811c90835b848310611c855750505091611c7c611c819260ff6103e8951690611a1c565b611a1c565b0490565b90919350611c9c84611c978184611bea565b611a03565b821c9190611c5d565b634e487b7160e01b81526011600452602490fd5b60408051606092831b6bffffffffffffffffffffffff191660208083019182526014835295968284019693956001600160401b03959392868911848a1017610643578888528351902090600254968a1161064357600599808b1b90611d208883018c6118bf565b8a5285850190820191368311610199578790915b838310611d985750505050946000955b8851871015611d8c57868a1b84018501519088600083831015611d7c5750506000528552611d76876000205b966119de565b95611d44565b9091611d76938252885220611d70565b14975095505050505050565b8235815291810191889101611d3456fea2646970667358221220aa180ab336f662417e2104815b9bfcada89b5c081ffc8fd25e79d2b5c326bcf264736f6c63430008130033","opcodes":"PUSH1 0x80 CALLVALUE PUSH2 0xA0 JUMPI PUSH1 0x1F PUSH2 0x1E9A CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0xA5 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x20 SWAP5 PUSH1 0x40 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0xA0 JUMPI MLOAD PUSH1 0x0 DUP1 SLOAD CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP3 AND DUP2 OR DUP4 SSTORE PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP1 LOG3 PUSH1 0x1 DUP1 SSTORE PUSH1 0x2 SSTORE PUSH1 0x0 PUSH1 0x3 SSTORE PUSH2 0x1DDE SWAP1 DUP2 PUSH2 0xBC DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x3C7881A EQ PUSH2 0x161F JUMPI POP DUP1 PUSH4 0x215809CA EQ PUSH2 0x1603 JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x15E5 JUMPI DUP1 PUSH4 0x3F572D36 EQ PUSH2 0x156E JUMPI DUP1 PUSH4 0x4783F0EF EQ PUSH2 0x154D JUMPI DUP1 PUSH4 0x49444831 EQ PUSH2 0x13E2 JUMPI DUP1 PUSH4 0x63025F6D EQ PUSH2 0x1394 JUMPI DUP1 PUSH4 0x67C95BDE EQ PUSH2 0x1359 JUMPI DUP1 PUSH4 0x714D985F EQ PUSH2 0x1329 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x12D0 JUMPI DUP1 PUSH4 0x7354C7E3 EQ PUSH2 0x12A8 JUMPI DUP1 PUSH4 0x7509C330 EQ PUSH2 0x1081 JUMPI DUP1 PUSH4 0x782631A0 EQ PUSH2 0xAD8 JUMPI DUP1 PUSH4 0x877BAEAA EQ PUSH2 0xAB7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA8E JUMPI DUP1 PUSH4 0xA64E024A EQ PUSH2 0xA70 JUMPI DUP1 PUSH4 0xB53D568A EQ PUSH2 0x8B9 JUMPI DUP1 PUSH4 0xB5ECF912 EQ PUSH2 0x808 JUMPI DUP1 PUSH4 0xCCF62C3D EQ PUSH2 0x6F0 JUMPI DUP1 PUSH4 0xDAD3FC13 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0xE6A9ABA3 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x19E JUMPI PUSH4 0xFE5B3E3B EQ PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH2 0x135 PUSH2 0x1702 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x195 PUSH1 0x1 DUP4 ADD SLOAD SWAP3 PUSH1 0x3 PUSH1 0x2 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP5 PUSH1 0xFF DUP8 SWAP7 PUSH1 0x18 SHR AND SWAP1 PUSH1 0xFF DUP2 PUSH1 0x10 SHR AND SWAP1 PUSH1 0xFF DUP1 DUP3 PUSH1 0x8 SHR AND SWAP2 AND DUP9 PUSH2 0x1748 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH2 0x1B7 PUSH2 0x1718 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x1986 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD GT PUSH2 0x199 JUMPI CALLDATASIZE PUSH1 0x23 PUSH1 0x4 CALLDATALOAD ADD SLT ISZERO PUSH2 0x199 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD GT PUSH2 0x199 JUMPI CALLDATASIZE PUSH1 0x24 PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x4 CALLDATALOAD ADD ADD GT PUSH2 0x199 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD ISZERO PUSH2 0x6AB JUMPI PUSH1 0x3C DUP2 LT ISZERO DUP1 PUSH2 0x69E JUMPI JUMPDEST ISZERO PUSH2 0x659 JUMPI PUSH2 0x313 PUSH2 0x308 PUSH1 0x3 SLOAD PUSH2 0x19DE JUMP JUMPDEST SWAP2 DUP3 PUSH1 0x3 SSTORE TIMESTAMP PUSH2 0x1A03 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x60 DUP4 ADD DUP4 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x643 JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 PUSH2 0x350 DUP5 PUSH2 0x1888 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36C PUSH1 0x4 DUP1 CALLDATALOAD ADD CALLDATALOAD PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x18BF JUMP JUMPDEST PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP2 ADD CALLDATALOAD DUP1 DUP4 MSTORE SWAP1 PUSH1 0x24 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD DUP4 ADD ADD MSTORE DUP5 MSTORE TIMESTAMP PUSH1 0x20 DUP6 ADD MSTORE DUP2 PUSH1 0x40 DUP6 ADD MSTORE CALLER PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x0 PUSH2 0x100 DUP5 ADD MSTORE PUSH1 0x0 PUSH2 0x120 DUP5 ADD MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 DUP1 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x643 JUMPI DUP2 SWAP1 PUSH2 0x3FB DUP8 SLOAD PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x5F3 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x587 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x57C JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP5 SSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x3 DUP5 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP4 ADD MLOAD AND DUP2 SLOAD SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL PUSH1 0x80 DUP6 ADD MLOAD ISZERO ISZERO PUSH1 0xA0 SHL AND SWAP1 PUSH1 0xFF PUSH1 0xA8 SHL PUSH1 0xA0 DUP7 ADD MLOAD ISZERO ISZERO PUSH1 0xA8 SHL AND SWAP3 PUSH10 0xFFFFFFFFFFFFFFFFFFFF PUSH1 0xB0 SHL AND OR OR OR SWAP1 SSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x565 JUMPI POP POP PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0x7 DUP6 ADD SSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x8 DUP6 ADD SSTORE PUSH2 0x120 ADD MLOAD SWAP3 PUSH1 0x3 DUP5 LT ISZERO PUSH2 0x54F JUMPI PUSH1 0x20 SWAP4 PUSH1 0x9 PUSH2 0x4D3 SWAP3 ADD PUSH2 0x1A2F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x24 PUSH1 0x4 CALLDATALOAD ADD PUSH1 0x60 DUP5 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x60 PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD DUP5 ADD ADD MSTORE DUP4 DUP3 ADD MSTORE DUP2 PUSH32 0xBC19D37DC499C8455564517E576D7D380A7A6F6F340AEFD0EE7007ABB30A6C42 CALLER SWAP3 PUSH1 0x60 DUP2 PUSH1 0x1F NOT PUSH1 0x1F PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD ADD AND DUP2 ADD SUB ADD SWAP1 LOG3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP3 PUSH1 0x4 DUP3 DUP10 ADD ADD SSTORE ADD PUSH2 0x496 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0x41B JUMP JUMPDEST SWAP3 POP DUP7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x5D8 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x5BF JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP5 SSTORE PUSH2 0x430 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0x5B2 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x597 JUMP JUMPDEST SWAP1 SWAP2 POP DUP7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x63C JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x62D JUMPI POP POP PUSH2 0x404 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x617 JUMP JUMPDEST POP DUP1 PUSH2 0x611 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420766F74696E67206475726174696F6E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH3 0x93A80 DUP2 GT ISZERO PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4950465320686173682063616E6E6F7420626520656D70747900000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH2 0x6FE CALLDATASIZE PUSH2 0x1814 JUMP JUMPDEST SWAP1 PUSH2 0x707 PUSH2 0x1986 JUMP JUMPDEST PUSH1 0x9 DUP2 LT ISZERO PUSH2 0x54F JUMPI PUSH1 0x1 DUP2 SUB PUSH2 0x74E JUMPI POP PUSH1 0x0 DUP1 DUP1 DUP1 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND DUP3 DUP3 ISZERO PUSH2 0x745 JUMPI JUMPDEST CALL ISZERO PUSH2 0x739 JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x731 JUMP JUMPDEST PUSH2 0x759 PUSH1 0x20 SWAP2 PUSH2 0x178B JUMP JUMPDEST SWAP2 PUSH1 0x44 PUSH1 0x40 MLOAD PUSH2 0x768 DUP2 PUSH2 0x18A4 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0xA0 PUSH1 0xFF PUSH1 0x4 DUP5 DUP10 SLOAD AND SWAP9 DUP10 DUP6 MSTORE DUP3 PUSH1 0x1 DUP3 ADD SLOAD DUP8 DUP2 AND DUP12 DUP9 ADD MSTORE DUP6 SHR AND PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x80 DUP7 ADD MSTORE ADD SLOAD AND ISZERO ISZERO SWAP2 ADD MSTORE PUSH1 0x0 SLOAD AND PUSH1 0x0 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x739 JUMPI PUSH2 0x7DF JUMPI STOP JUMPDEST PUSH2 0x7FF SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x801 JUMPI JUMPDEST PUSH2 0x7F7 DUP2 DUP4 PUSH2 0x18BF JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST STOP JUMPDEST POP RETURNDATASIZE PUSH2 0x7ED JUMP JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x873 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x835 DUP2 PUSH2 0x18E0 JUMP JUMPDEST SWAP1 PUSH2 0x195 PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH1 0x2 DUP2 ADD SLOAD SWAP1 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF PUSH1 0x7 DUP4 ADD SLOAD SWAP2 DUP2 PUSH1 0x9 PUSH1 0x8 DUP7 ADD SLOAD SWAP6 ADD SLOAD AND SWAP5 PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP10 PUSH2 0x120 DUP1 DUP13 MSTORE DUP12 ADD SWAP1 PUSH2 0x17D4 JUMP JUMPDEST SWAP8 PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0x40 DUP10 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x60 DUP10 ADD MSTORE DUP2 DUP2 PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0xA8 SHR AND ISZERO ISZERO PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP5 ADD SWAP1 PUSH2 0x172E JUMP JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x9 DUP2 LT ISZERO PUSH2 0x199 JUMPI PUSH2 0x8DE PUSH2 0x1702 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x44 CALLDATALOAD DUP3 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x199 JUMPI PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP1 SWAP3 SUB PUSH2 0x199 JUMPI PUSH2 0x90C PUSH2 0x1986 JUMP JUMPDEST DUP5 ISZERO PUSH2 0xA36 JUMPI DUP1 ISZERO PUSH2 0x9FA JUMPI PUSH2 0x9ED PUSH1 0x40 SWAP4 PUSH1 0x4 DUP8 DUP8 PUSH32 0xD7E0FFE3C5E893C914E856817D8BFCF09E393C7926B6CF6FD55867404DB05CB1 SWAP9 DUP9 MLOAD SWAP5 PUSH2 0x950 DUP7 PUSH2 0x18A4 JUMP JUMPDEST AND SWAP7 DUP8 DUP6 MSTORE PUSH1 0x20 DUP6 ADD DUP8 DUP2 MSTORE DUP10 DUP7 ADD SWAP2 DUP3 MSTORE PUSH1 0x60 DUP7 ADD SWAP2 PUSH1 0x84 CALLDATALOAD DUP4 MSTORE PUSH1 0x80 DUP8 ADD SWAP4 PUSH1 0xA4 CALLDATALOAD DUP6 MSTORE DUP1 PUSH2 0x988 PUSH1 0xA0 DUP11 ADD SWAP8 PUSH1 0x1 DUP10 MSTORE PUSH2 0x178B JUMP JUMPDEST SWAP9 MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP10 SLOAD AND OR DUP9 SSTORE PUSH1 0x1 DUP9 ADD SWAP3 MLOAD AND DUP3 SLOAD SWAP2 PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 MLOAD PUSH1 0xA0 SHL AND SWAP2 PUSH11 0xFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA8 SHL AND OR OR SWAP1 SSTORE MLOAD PUSH1 0x2 DUP6 ADD SSTORE MLOAD PUSH1 0x3 DUP5 ADD SSTORE MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C6964207072696365206F7261636C65 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E76616C696420746F6B656E2074797065 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x93A80 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 PUSH2 0xAD0 PUSH2 0xACA CALLDATASIZE PUSH2 0x1814 JUMP JUMPDEST SWAP1 PUSH2 0x1C0A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x3 PUSH1 0x24 CALLDATALOAD LT ISZERO PUSH2 0x199 JUMPI PUSH1 0xFF PUSH1 0x44 CALLDATALOAD AND PUSH1 0x44 CALLDATALOAD SUB PUSH2 0x199 JUMPI PUSH1 0x9 PUSH1 0x64 CALLDATALOAD LT ISZERO PUSH2 0x199 JUMPI PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x199 JUMPI PUSH2 0xB27 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x17A4 JUMP JUMPDEST SWAP1 PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x103C JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH2 0xB5B PUSH1 0xFF PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0xA0 SHR AND PUSH2 0x1A47 JUMP JUMPDEST PUSH1 0x2 DUP4 ADD SLOAD TIMESTAMP GT PUSH2 0x1001 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0xFCC JUMPI PUSH1 0x1 PUSH1 0xFF PUSH1 0x44 CALLDATALOAD AND LT ISZERO DUP1 PUSH2 0xFBC JUMPI JUMPDEST ISZERO PUSH2 0xF77 JUMPI PUSH2 0xBB9 PUSH1 0xFF PUSH1 0x4 PUSH2 0xBB1 PUSH1 0x64 CALLDATALOAD PUSH2 0x178B JUMP JUMPDEST ADD SLOAD AND PUSH2 0x1A93 JUMP JUMPDEST PUSH1 0x3 PUSH2 0xBC6 PUSH1 0x64 CALLDATALOAD PUSH2 0x178B JUMP JUMPDEST ADD SLOAD PUSH1 0x84 CALLDATALOAD LT PUSH2 0xF3B JUMPI DUP1 PUSH2 0xEE7 JUMPI JUMPDEST POP POP PUSH1 0x64 CALLDATALOAD PUSH1 0x1 SUB PUSH2 0xDD9 JUMPI PUSH1 0x84 CALLDATALOAD CALLVALUE SUB PUSH2 0xD9D JUMPI JUMPDEST PUSH2 0xBFA PUSH1 0x84 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH2 0x1C0A JUMP JUMPDEST PUSH2 0xC15 PUSH1 0x2 PUSH2 0xC0A PUSH1 0x64 CALLDATALOAD PUSH2 0x178B JUMP JUMPDEST ADD SLOAD PUSH1 0x44 CALLDATALOAD DUP4 PUSH2 0x1C48 JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xC23 DUP3 PUSH2 0x186D JUMP JUMPDEST PUSH1 0x1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 PUSH2 0xC38 PUSH1 0x24 CALLDATALOAD DUP4 PUSH2 0x1A10 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0xFF PUSH1 0x44 CALLDATALOAD AND DUP4 MSTORE PUSH1 0x60 DUP5 ADD SWAP3 PUSH2 0xC56 PUSH1 0x64 CALLDATALOAD DUP6 PUSH2 0x1AED JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH1 0x80 DUP7 ADD MSTORE DUP7 PUSH1 0xA0 DUP7 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH2 0xCA0 DUP7 MLOAD ISZERO ISZERO DUP5 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD SWAP5 PUSH1 0x3 DUP7 LT ISZERO PUSH2 0x54F JUMPI PUSH3 0xFF0000 DUP4 SLOAD SWAP3 MLOAD PUSH1 0x10 SHL AND SWAP5 MLOAD SWAP1 PUSH1 0x9 DUP3 LT ISZERO PUSH2 0x54F JUMPI PUSH2 0xD34 SWAP7 PUSH1 0x8 SWAP7 PUSH1 0x3 SWAP5 PUSH2 0xFF00 PUSH4 0xFF000000 PUSH1 0xC0 SWAP7 PUSH1 0x18 SHL AND SWAP4 DUP11 SHL AND SWAP1 PUSH4 0xFFFFFF00 NOT AND OR OR OR DUP5 SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE PUSH1 0x4 PUSH1 0x24 CALLDATALOAD DUP3 ADD ADD PUSH2 0xD19 DUP7 DUP3 SLOAD PUSH2 0x1A03 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x7 DUP2 ADD PUSH2 0xD29 DUP2 SLOAD PUSH2 0x19DE JUMP JUMPDEST SWAP1 SSTORE ADD SWAP2 DUP3 SLOAD PUSH2 0x1A03 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0xD46 DUP3 PUSH1 0x24 CALLDATALOAD PUSH2 0x172E JUMP JUMPDEST PUSH1 0xFF PUSH1 0x44 CALLDATALOAD AND PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xD60 PUSH1 0x40 DUP4 ADD PUSH1 0x64 CALLDATALOAD PUSH2 0x173B JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE CALLER SWAP1 PUSH32 0xF641C07FF9548B4D94093E2363E7BEAD14740019250D143F6E940989F4E91BB3 PUSH1 0xA0 PUSH1 0x4 CALLDATALOAD SWAP3 LOG3 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B98DBDC9C9958DD0811551208185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE98 JUMPI PUSH1 0x0 PUSH1 0x20 PUSH2 0xDED PUSH1 0x64 CALLDATALOAD PUSH2 0x178B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDF9 DUP2 PUSH2 0x18A4 JUMP JUMPDEST PUSH1 0xA0 PUSH1 0xFF PUSH1 0x4 PUSH1 0x1 DUP1 DUP5 SHL SUB SWAP5 DUP3 DUP7 DUP3 SLOAD AND SWAP7 DUP8 DUP8 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP1 DUP2 AND DUP10 DUP9 ADD MSTORE DUP6 SHR AND PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x80 DUP7 ADD MSTORE ADD SLOAD AND ISZERO ISZERO SWAP2 ADD MSTORE PUSH1 0x64 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x739 JUMPI PUSH2 0xE79 JUMPI JUMPDEST POP PUSH2 0xBEC JUMP JUMPDEST PUSH2 0xE91 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x801 JUMPI PUSH2 0x7F7 DUP2 DUP4 PUSH2 0x18BF JUMP JUMPDEST POP DUP2 PUSH2 0xE73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448206E6F7420657870656374656420666F7220455243323020746F6B656E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0xEF1 SWAP2 CALLER PUSH2 0x1CB9 JUMP JUMPDEST ISZERO PUSH2 0xEFD JUMPI DUP2 DUP1 PUSH2 0xBD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x24B73B30B634B21034B232B73A34BA3C90383937B7B3 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x5374616B6520616D6F756E7420746F6F206C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420636F6E666964656E6365206C6576656C0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0xA PUSH1 0xFF PUSH1 0x44 CALLDATALOAD AND GT ISZERO PUSH2 0xB9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x105B1C9958591E481D9BDD1959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x159BDD1A5B99C81C195C9A5BD908195B991959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x10AF DUP3 PUSH2 0x1888 JUMP JUMPDEST PUSH2 0x10B8 DUP2 PUSH2 0x18E0 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x20 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0xFF PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x60 DUP7 ADD MSTORE DUP2 DUP2 PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA8 SHR AND ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH1 0x4 DUP3 ADD SWAP1 PUSH1 0x0 SWAP1 JUMPDEST PUSH1 0x3 DUP3 LT PUSH2 0x1292 JUMPI POP POP POP PUSH1 0x60 DUP3 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP2 DUP2 LT DUP5 DUP3 GT OR PUSH2 0x643 JUMPI PUSH1 0x40 MSTORE PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x9 ADD SLOAD PUSH2 0x1162 SWAP1 PUSH1 0xFF AND PUSH2 0x120 DUP6 ADD PUSH2 0x1A10 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x80 DUP3 ADD SWAP1 DUP2 GT DUP3 DUP3 LT OR PUSH2 0x643 JUMPI PUSH1 0x40 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH1 0x60 CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0xC0 DUP4 ADD MLOAD MLOAD DUP2 MLOAD ISZERO PUSH2 0x127C JUMPI PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0xC0 DUP5 ADD MLOAD ADD MLOAD DUP2 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x127C JUMPI PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0xC0 DUP5 ADD MLOAD ADD MLOAD DUP2 MLOAD PUSH1 0x2 LT ISZERO PUSH2 0x127C JUMPI PUSH1 0x60 DUP3 ADD MSTORE DUP3 MLOAD SWAP2 MLOAD SWAP3 PUSH1 0x40 DUP2 ADD MLOAD SWAP4 PUSH1 0x80 DUP3 ADD MLOAD ISZERO ISZERO SWAP1 PUSH1 0xA0 DUP4 ADD MLOAD ISZERO ISZERO PUSH1 0xE0 DUP5 ADD MLOAD SWAP3 PUSH2 0x120 PUSH2 0x100 DUP7 ADD MLOAD SWAP6 ADD MLOAD SWAP8 PUSH1 0x3 DUP10 LT ISZERO PUSH2 0x54F JUMPI PUSH2 0x1213 PUSH1 0x40 MLOAD SWAP9 PUSH2 0x120 DUP11 MSTORE PUSH2 0x120 DUP11 ADD SWAP1 PUSH2 0x17D4 JUMP JUMPDEST SWAP4 PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD MSTORE DUP5 DUP2 SUB PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x20 DUP1 DUP6 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP5 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1266 JUMPI POP POP POP SWAP4 PUSH2 0x195 SWAP2 DUP5 SWAP6 PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP5 ADD SWAP1 PUSH2 0x172E JUMP JUMPDEST DUP3 MLOAD DUP7 MSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1240 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 DUP6 SLOAD DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0x110C JUMP JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x9 DUP2 LT ISZERO PUSH2 0x199 JUMPI PUSH2 0xAD0 PUSH1 0x20 SWAP2 PUSH2 0x1B10 JUMP JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH2 0x12E9 PUSH2 0x1986 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x199 JUMPI PUSH2 0xAD0 PUSH1 0x20 SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x1C48 JUMP JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x9 DUP2 LT ISZERO PUSH2 0x199 JUMPI PUSH2 0x1389 PUSH1 0x4 SWAP2 PUSH2 0x1384 PUSH2 0x1986 JUMP JUMPDEST PUSH2 0x178B JUMP JUMPDEST ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH2 0x13AD PUSH2 0x1718 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x199 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x13D2 PUSH2 0x13D8 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x17A4 JUMP JUMPDEST SWAP2 PUSH2 0x1CB9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x3 DUP2 ADD SWAP1 DUP2 SLOAD PUSH2 0x141A PUSH1 0xFF DUP3 PUSH1 0xA0 SHR AND PUSH2 0x1A47 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x1508 JUMPI PUSH1 0xA8 SHR PUSH1 0xFF AND PUSH2 0x14CF JUMPI PUSH32 0xBBBE9B42DDFA0692CD5F3DC618525DDE4B8FE438FE573F13B3FA9FB1287D6FCD SWAP2 PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x5 DUP4 ADD SLOAD DUP2 DUP2 GT PUSH2 0x14C3 JUMPI JUMPDEST POP PUSH1 0x6 DUP4 ADD SLOAD GT PUSH2 0x14BA JUMPI JUMPDEST PUSH2 0x1483 DUP4 PUSH1 0x9 DUP5 ADD PUSH2 0x1A2F JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA8 SHL PUSH2 0xFFFF PUSH1 0xA0 SHL NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x8 PUSH1 0x7 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP1 PUSH2 0x14AD PUSH1 0x40 MLOAD DUP1 SWAP5 PUSH2 0x172E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE LOG2 STOP JUMPDEST PUSH1 0x2 SWAP3 POP PUSH2 0x1476 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x1 SWAP3 DUP8 PUSH2 0x146A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x105B1C9958591E48199A5B985B1A5E9959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F74696E6720706572696F64206E6F7420656E646564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH2 0x1566 PUSH2 0x1986 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x2 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x9 DUP2 LT ISZERO PUSH2 0x199 JUMPI PUSH2 0x1596 PUSH1 0xC0 SWAP2 PUSH2 0x178B JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP3 SLOAD AND SWAP2 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0xFF PUSH1 0x2 DUP4 ADD SLOAD SWAP2 DUP2 PUSH1 0x4 PUSH1 0x3 DUP7 ADD SLOAD SWAP6 ADD SLOAD AND SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE DUP2 AND PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xA0 SHR AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x3C DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH2 0x1638 PUSH2 0x1702 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1665 DUP3 PUSH2 0x186D JUMP JUMPDEST DUP1 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 PUSH2 0x1685 PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND DUP5 PUSH2 0x1A10 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD SWAP4 PUSH1 0xFF DUP3 PUSH1 0x10 SHR AND DUP6 MSTORE PUSH2 0x16A7 PUSH1 0xFF PUSH1 0x60 DUP4 ADD SWAP4 PUSH1 0x18 SHR AND DUP4 PUSH2 0x1AED JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD SWAP3 PUSH1 0x80 DUP3 ADD SWAP4 DUP5 MSTORE PUSH1 0x3 PUSH1 0x2 DUP3 ADD SLOAD SWAP2 PUSH1 0xA0 DUP5 ADD SWAP3 DUP4 MSTORE ADD SLOAD SWAP2 PUSH1 0xC0 DUP2 ADD SWAP3 DUP4 MSTORE MLOAD ISZERO ISZERO SWAP5 MLOAD SWAP6 PUSH1 0x3 DUP8 LT ISZERO PUSH2 0x54F JUMPI PUSH1 0xFF SWAP1 MLOAD AND SWAP3 MLOAD PUSH1 0x9 DUP2 LT ISZERO PUSH2 0x54F JUMPI PUSH2 0x195 SWAP5 MLOAD SWAP2 MLOAD SWAP3 MLOAD SWAP4 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 DUP9 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x199 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x199 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x54F JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x9 DUP3 LT ISZERO PUSH2 0x54F JUMPI MSTORE JUMP JUMPDEST SWAP4 PUSH1 0xFF PUSH2 0x177D SWAP3 SWAP10 SWAP9 SWAP8 SWAP5 PUSH2 0x176D PUSH1 0xC0 SWAP9 SWAP6 PUSH1 0xE0 DUP10 ADD SWAP13 ISZERO ISZERO DUP10 MSTORE PUSH1 0x20 DUP10 ADD SWAP1 PUSH2 0x172E JUMP JUMPDEST AND PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x173B JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x9 DUP2 LT ISZERO PUSH2 0x54F JUMPI PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x199 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x199 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x199 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1800 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x17DF JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x9 DUP2 LT ISZERO PUSH2 0x199 JUMPI SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1863 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x184D JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1842 JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x643 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x140 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x643 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x643 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x643 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x18F4 DUP5 PUSH2 0x1833 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x1963 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1920 JUMPI JUMPDEST POP POP PUSH2 0x191E SWAP3 POP SUB DUP4 PUSH2 0x18BF JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x194B JUMPI POP POP PUSH2 0x191E SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1910 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1933 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x191E SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1910 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x199A JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x19ED JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x19ED JUMPI JUMP JUMPDEST PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x54F JUMPI MSTORE JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x19ED JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x54F JUMPI PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST ISZERO PUSH2 0x1A4E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E74656E74206E6F7420666F756E64206F7220696E616374697665000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1A9A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x151BDAD95B881B9BDD081CDD5C1C1BDC9D1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x199 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x199 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x9 DUP3 LT ISZERO PUSH2 0x54F JUMPI MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x199 JUMPI JUMP JUMPDEST PUSH1 0xA0 PUSH1 0x4 SWAP2 PUSH2 0x1B24 PUSH1 0xFF DUP5 PUSH2 0xBB1 DUP5 PUSH2 0x178B JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1B34 DUP2 DUP1 DUP6 SHL SUB SWAP3 PUSH2 0x178B JUMP JUMPDEST ADD SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x739 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1B9B JUMPI JUMPDEST POP PUSH1 0x0 DUP2 SGT ISZERO PUSH2 0x1B66 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x496E76616C6964207072696365 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0xA0 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x1BE2 JUMPI JUMPDEST DUP2 PUSH2 0x1BB4 PUSH1 0xA0 SWAP4 DUP4 PUSH2 0x18BF JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1BDF JUMPI POP PUSH2 0x1BC6 DUP2 PUSH2 0x1AF9 JUMP JUMPDEST POP PUSH2 0x1BD8 PUSH1 0x80 PUSH1 0x20 DUP4 ADD MLOAD SWAP3 ADD PUSH2 0x1AF9 JUMP JUMPDEST POP CODESIZE PUSH2 0x1B59 JUMP JUMPDEST DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1BA7 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1BF4 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1C30 SWAP1 PUSH1 0xFF PUSH1 0x1 PUSH2 0x1C24 PUSH2 0x1C1E DUP5 PUSH2 0x1B10 JUMP JUMPDEST SWAP4 PUSH2 0x178B JUMP JUMPDEST ADD SLOAD PUSH1 0xA0 SHR AND SWAP3 PUSH2 0x1A1C JUMP JUMPDEST PUSH1 0x4D DUP3 GT PUSH2 0x19ED JUMPI PUSH2 0x1C45 SWAP2 PUSH1 0xA EXP SWAP1 PUSH2 0x1BEA JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 DUP4 ADD PUSH1 0x0 DUP2 DUP6 GT PUSH2 0x1CA5 JUMPI POP DUP2 SHR SWAP1 DUP4 JUMPDEST DUP5 DUP4 LT PUSH2 0x1C85 JUMPI POP POP POP SWAP2 PUSH2 0x1C7C PUSH2 0x1C81 SWAP3 PUSH1 0xFF PUSH2 0x3E8 SWAP6 AND SWAP1 PUSH2 0x1A1C JUMP JUMPDEST PUSH2 0x1A1C JUMP JUMPDEST DIV SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP4 POP PUSH2 0x1C9C DUP5 PUSH2 0x1C97 DUP2 DUP5 PUSH2 0x1BEA JUMP JUMPDEST PUSH2 0x1A03 JUMP JUMPDEST DUP3 SHR SWAP2 SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 SWAP3 DUP4 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x14 DUP4 MSTORE SWAP6 SWAP7 DUP3 DUP5 ADD SWAP7 SWAP4 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP6 SWAP4 SWAP3 DUP7 DUP10 GT DUP5 DUP11 LT OR PUSH2 0x643 JUMPI DUP9 DUP9 MSTORE DUP4 MLOAD SWAP1 KECCAK256 SWAP1 PUSH1 0x2 SLOAD SWAP7 DUP11 GT PUSH2 0x643 JUMPI PUSH1 0x5 SWAP10 DUP1 DUP12 SHL SWAP1 PUSH2 0x1D20 DUP9 DUP4 ADD DUP13 PUSH2 0x18BF JUMP JUMPDEST DUP11 MSTORE DUP6 DUP6 ADD SWAP1 DUP3 ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x199 JUMPI DUP8 SWAP1 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1D98 JUMPI POP POP POP POP SWAP5 PUSH1 0x0 SWAP6 JUMPDEST DUP9 MLOAD DUP8 LT ISZERO PUSH2 0x1D8C JUMPI DUP7 DUP11 SHL DUP5 ADD DUP6 ADD MLOAD SWAP1 DUP9 PUSH1 0x0 DUP4 DUP4 LT ISZERO PUSH2 0x1D7C JUMPI POP POP PUSH1 0x0 MSTORE DUP6 MSTORE PUSH2 0x1D76 DUP8 PUSH1 0x0 KECCAK256 JUMPDEST SWAP7 PUSH2 0x19DE JUMP JUMPDEST SWAP6 PUSH2 0x1D44 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x1D76 SWAP4 DUP3 MSTORE DUP9 MSTORE KECCAK256 PUSH2 0x1D70 JUMP JUMPDEST EQ SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP3 CALLDATALOAD DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 DUP9 SWAP2 ADD PUSH2 0x1D34 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA XOR EXP 0xB3 CALLDATASIZE 0xF6 PUSH3 0x417E21 DIV DUP2 JUMPDEST SWAP12 0xFC 0xAD 0xA8 SWAP12 0x5C ADDMOD 0x1F 0xFC DUP16 0xD2 0x5E PUSH26 0xD2B5C326BCF264736F6C63430008130033000000000000000000 ","sourceMap":"1151:16347:4:-:0;;;;;;;;;;;;;-1:-1:-1;;1151:16347:4;;;;-1:-1:-1;;;;;1151:16347:4;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1151:16347:4;;719:10:2;-1:-1:-1;;;;;;1151:16347:4;;;;;;;;;;719:10:2;;-1:-1:-1;;;;;1151:16347:4;;2566:40:0;;-1:-1:-1;2566:40:0;1151:16347:4;;;4389:24;1151:16347;-1:-1:-1;4423:18:4;1151:16347;;;;;;;;;-1:-1:-1;1151:16347:4;;;;;;-1:-1:-1;1151:16347:4;;;;;-1:-1:-1;1151:16347:4"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":5912,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_address_29557":{"entryPoint":5890,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_array_bytes32_dyn_calldata":{"entryPoint":6052,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_bool_fromMemory":{"entryPoint":6869,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_enum_TokenTypet_uint256":{"entryPoint":6164,"id":null,"parameterSlots":1,"returnSlots":2},"abi_decode_uint80_fromMemory":{"entryPoint":6905,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_bool_enum_VoteOption_uint8_enum_TokenType_uint256_uint256_uint256":{"entryPoint":5960,"id":null,"parameterSlots":8,"returnSlots":1},"abi_encode_enum_TokenType":{"entryPoint":5947,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_enum_VoteOption":{"entryPoint":5934,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":6100,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_uint256":{"entryPoint":6659,"id":null,"parameterSlots":2,"returnSlots":1},"checked_div_uint256":{"entryPoint":7146,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_uint256":{"entryPoint":6684,"id":null,"parameterSlots":2,"returnSlots":1},"copy_array_from_storage_to_memory_string":{"entryPoint":6368,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":6195,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":6335,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_29558":{"entryPoint":6253,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_29564":{"entryPoint":6280,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_29574":{"entryPoint":6308,"id":null,"parameterSlots":1,"returnSlots":0},"fun_calculateVotingWeight":{"entryPoint":7240,"id":1523,"parameterSlots":3,"returnSlots":1},"fun_checkOwner":{"entryPoint":6534,"id":54,"parameterSlots":0,"returnSlots":0},"fun_convertToUSD":{"entryPoint":7178,"id":1495,"parameterSlots":2,"returnSlots":1},"fun_getTokenPriceUSD":{"entryPoint":6928,"id":1460,"parameterSlots":1,"returnSlots":1},"fun_isVerifiedIdentity":{"entryPoint":7353,"id":1551,"parameterSlots":3,"returnSlots":1},"increment_uint256":{"entryPoint":6622,"id":null,"parameterSlots":1,"returnSlots":1},"mapping_index_access_mapping_enum_TokenType_struct_TokenInfo_storage_of_enum_TokenType":{"entryPoint":6027,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_9dc8":{"entryPoint":6803,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_ad65":{"entryPoint":6727,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_enum_VoteOption_to_enum_VoteOption":{"entryPoint":6703,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_enum_TokenType":{"entryPoint":6893,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_enum_VoteOption":{"entryPoint":6672,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR SWAP1 DUP2 PUSH4 0x3C7881A EQ PUSH2 0x161F JUMPI POP DUP1 PUSH4 0x215809CA EQ PUSH2 0x1603 JUMPI DUP1 PUSH4 0x2EB4A7AB EQ PUSH2 0x15E5 JUMPI DUP1 PUSH4 0x3F572D36 EQ PUSH2 0x156E JUMPI DUP1 PUSH4 0x4783F0EF EQ PUSH2 0x154D JUMPI DUP1 PUSH4 0x49444831 EQ PUSH2 0x13E2 JUMPI DUP1 PUSH4 0x63025F6D EQ PUSH2 0x1394 JUMPI DUP1 PUSH4 0x67C95BDE EQ PUSH2 0x1359 JUMPI DUP1 PUSH4 0x714D985F EQ PUSH2 0x1329 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x12D0 JUMPI DUP1 PUSH4 0x7354C7E3 EQ PUSH2 0x12A8 JUMPI DUP1 PUSH4 0x7509C330 EQ PUSH2 0x1081 JUMPI DUP1 PUSH4 0x782631A0 EQ PUSH2 0xAD8 JUMPI DUP1 PUSH4 0x877BAEAA EQ PUSH2 0xAB7 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA8E JUMPI DUP1 PUSH4 0xA64E024A EQ PUSH2 0xA70 JUMPI DUP1 PUSH4 0xB53D568A EQ PUSH2 0x8B9 JUMPI DUP1 PUSH4 0xB5ECF912 EQ PUSH2 0x808 JUMPI DUP1 PUSH4 0xCCF62C3D EQ PUSH2 0x6F0 JUMPI DUP1 PUSH4 0xDAD3FC13 EQ PUSH2 0x285 JUMPI DUP1 PUSH4 0xE6A9ABA3 EQ PUSH2 0x267 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x19E JUMPI PUSH4 0xFE5B3E3B EQ PUSH2 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH2 0x135 PUSH2 0x1702 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 DUP1 SLOAD PUSH2 0x195 PUSH1 0x1 DUP4 ADD SLOAD SWAP3 PUSH1 0x3 PUSH1 0x2 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP1 PUSH1 0x40 MLOAD SWAP5 DUP5 PUSH1 0xFF DUP8 SWAP7 PUSH1 0x18 SHR AND SWAP1 PUSH1 0xFF DUP2 PUSH1 0x10 SHR AND SWAP1 PUSH1 0xFF DUP1 DUP3 PUSH1 0x8 SHR AND SWAP2 AND DUP9 PUSH2 0x1748 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH2 0x1B7 PUSH2 0x1718 JUMP JUMPDEST PUSH2 0x1BF PUSH2 0x1986 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP1 DUP2 ISZERO PUSH2 0x213 JUMPI PUSH1 0x0 SLOAD DUP3 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP3 AND OR PUSH1 0x0 SSTORE AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x0 DUP1 LOG3 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD GT PUSH2 0x199 JUMPI CALLDATASIZE PUSH1 0x23 PUSH1 0x4 CALLDATALOAD ADD SLT ISZERO PUSH2 0x199 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD GT PUSH2 0x199 JUMPI CALLDATASIZE PUSH1 0x24 PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x4 CALLDATALOAD ADD ADD GT PUSH2 0x199 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD ISZERO PUSH2 0x6AB JUMPI PUSH1 0x3C DUP2 LT ISZERO DUP1 PUSH2 0x69E JUMPI JUMPDEST ISZERO PUSH2 0x659 JUMPI PUSH2 0x313 PUSH2 0x308 PUSH1 0x3 SLOAD PUSH2 0x19DE JUMP JUMPDEST SWAP2 DUP3 PUSH1 0x3 SSTORE TIMESTAMP PUSH2 0x1A03 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x60 DUP4 ADD DUP4 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x643 JUMPI PUSH1 0x40 MSTORE PUSH1 0x0 DUP4 MSTORE PUSH1 0x0 PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0x40 MLOAD SWAP3 PUSH2 0x350 DUP5 PUSH2 0x1888 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x36C PUSH1 0x4 DUP1 CALLDATALOAD ADD CALLDATALOAD PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 PUSH2 0x18BF JUMP JUMPDEST PUSH1 0x4 DUP1 CALLDATALOAD SWAP1 DUP2 ADD CALLDATALOAD DUP1 DUP4 MSTORE SWAP1 PUSH1 0x24 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD DUP4 ADD ADD MSTORE DUP5 MSTORE TIMESTAMP PUSH1 0x20 DUP6 ADD MSTORE DUP2 PUSH1 0x40 DUP6 ADD MSTORE CALLER PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x0 PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0xC0 DUP5 ADD MSTORE PUSH1 0x0 PUSH1 0xE0 DUP5 ADD MSTORE PUSH1 0x0 PUSH2 0x100 DUP5 ADD MSTORE PUSH1 0x0 PUSH2 0x120 DUP5 ADD MSTORE DUP2 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP3 DUP1 MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x643 JUMPI DUP2 SWAP1 PUSH2 0x3FB DUP8 SLOAD PUSH2 0x1833 JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x5F3 JUMPI JUMPDEST POP PUSH1 0x20 SWAP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 EQ PUSH2 0x587 JUMPI PUSH1 0x0 SWAP3 PUSH2 0x57C JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR DUP5 SSTORE JUMPDEST PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE PUSH1 0x3 DUP5 ADD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x60 DUP4 ADD MLOAD AND DUP2 SLOAD SWAP1 PUSH1 0xFF PUSH1 0xA0 SHL PUSH1 0x80 DUP6 ADD MLOAD ISZERO ISZERO PUSH1 0xA0 SHL AND SWAP1 PUSH1 0xFF PUSH1 0xA8 SHL PUSH1 0xA0 DUP7 ADD MLOAD ISZERO ISZERO PUSH1 0xA8 SHL AND SWAP3 PUSH10 0xFFFFFFFFFFFFFFFFFFFF PUSH1 0xB0 SHL AND OR OR OR SWAP1 SSTORE PUSH1 0xC0 DUP2 ADD MLOAD PUSH1 0x0 JUMPDEST PUSH1 0x3 DUP2 LT PUSH2 0x565 JUMPI POP POP PUSH1 0xE0 DUP2 ADD MLOAD PUSH1 0x7 DUP6 ADD SSTORE PUSH2 0x100 DUP2 ADD MLOAD PUSH1 0x8 DUP6 ADD SSTORE PUSH2 0x120 ADD MLOAD SWAP3 PUSH1 0x3 DUP5 LT ISZERO PUSH2 0x54F JUMPI PUSH1 0x20 SWAP4 PUSH1 0x9 PUSH2 0x4D3 SWAP3 ADD PUSH2 0x1A2F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD PUSH1 0x24 PUSH1 0x4 CALLDATALOAD ADD PUSH1 0x60 DUP5 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x60 PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD DUP5 ADD ADD MSTORE DUP4 DUP3 ADD MSTORE DUP2 PUSH32 0xBC19D37DC499C8455564517E576D7D380A7A6F6F340AEFD0EE7007ABB30A6C42 CALLER SWAP3 PUSH1 0x60 DUP2 PUSH1 0x1F NOT PUSH1 0x1F PUSH1 0x4 CALLDATALOAD PUSH1 0x4 ADD CALLDATALOAD ADD AND DUP2 ADD SUB ADD SWAP1 LOG3 PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 SWAP1 PUSH1 0x20 DUP4 MLOAD SWAP4 ADD SWAP3 PUSH1 0x4 DUP3 DUP10 ADD ADD SSTORE ADD PUSH2 0x496 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP7 DUP1 PUSH2 0x41B JUMP JUMPDEST SWAP3 POP DUP7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x0 SWAP4 JUMPDEST PUSH1 0x1F NOT DUP5 AND DUP6 LT PUSH2 0x5D8 JUMPI PUSH1 0x1 SWAP5 POP DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x5BF JUMPI JUMPDEST POP POP POP DUP2 SHL ADD DUP5 SSTORE PUSH2 0x430 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP7 DUP1 DUP1 PUSH2 0x5B2 JUMP JUMPDEST DUP2 DUP2 ADD MLOAD DUP4 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP4 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x597 JUMP JUMPDEST SWAP1 SWAP2 POP DUP7 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT PUSH2 0x63C JUMPI JUMPDEST SWAP1 DUP5 SWAP4 SWAP3 SWAP2 JUMPDEST PUSH1 0x1F DUP4 ADD PUSH1 0x5 SHR DUP3 ADD DUP2 LT PUSH2 0x62D JUMPI POP POP PUSH2 0x404 JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE DUP6 SWAP5 POP PUSH1 0x1 ADD PUSH2 0x617 JUMP JUMPDEST POP DUP1 PUSH2 0x611 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420766F74696E67206475726174696F6E000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH3 0x93A80 DUP2 GT ISZERO PUSH2 0x2F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4950465320686173682063616E6E6F7420626520656D70747900000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH2 0x6FE CALLDATASIZE PUSH2 0x1814 JUMP JUMPDEST SWAP1 PUSH2 0x707 PUSH2 0x1986 JUMP JUMPDEST PUSH1 0x9 DUP2 LT ISZERO PUSH2 0x54F JUMPI PUSH1 0x1 DUP2 SUB PUSH2 0x74E JUMPI POP PUSH1 0x0 DUP1 DUP1 DUP1 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 SLOAD AND DUP3 DUP3 ISZERO PUSH2 0x745 JUMPI JUMPDEST CALL ISZERO PUSH2 0x739 JUMPI STOP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x0 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH2 0x8FC PUSH2 0x731 JUMP JUMPDEST PUSH2 0x759 PUSH1 0x20 SWAP2 PUSH2 0x178B JUMP JUMPDEST SWAP2 PUSH1 0x44 PUSH1 0x40 MLOAD PUSH2 0x768 DUP2 PUSH2 0x18A4 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0xA0 PUSH1 0xFF PUSH1 0x4 DUP5 DUP10 SLOAD AND SWAP9 DUP10 DUP6 MSTORE DUP3 PUSH1 0x1 DUP3 ADD SLOAD DUP8 DUP2 AND DUP12 DUP9 ADD MSTORE DUP6 SHR AND PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x80 DUP7 ADD MSTORE ADD SLOAD AND ISZERO ISZERO SWAP2 ADD MSTORE PUSH1 0x0 SLOAD AND PUSH1 0x0 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP5 DUP6 SWAP4 PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP6 MSTORE PUSH1 0x4 DUP6 ADD MSTORE PUSH1 0x24 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x739 JUMPI PUSH2 0x7DF JUMPI STOP JUMPDEST PUSH2 0x7FF SWAP1 PUSH1 0x20 RETURNDATASIZE DUP2 GT PUSH2 0x801 JUMPI JUMPDEST PUSH2 0x7F7 DUP2 DUP4 PUSH2 0x18BF JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1AD5 JUMP JUMPDEST STOP JUMPDEST POP RETURNDATASIZE PUSH2 0x7ED JUMP JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x873 PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x835 DUP2 PUSH2 0x18E0 JUMP JUMPDEST SWAP1 PUSH2 0x195 PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH1 0x2 DUP2 ADD SLOAD SWAP1 PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF PUSH1 0x7 DUP4 ADD SLOAD SWAP2 DUP2 PUSH1 0x9 PUSH1 0x8 DUP7 ADD SLOAD SWAP6 ADD SLOAD AND SWAP5 PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP10 PUSH2 0x120 DUP1 DUP13 MSTORE DUP12 ADD SWAP1 PUSH2 0x17D4 JUMP JUMPDEST SWAP8 PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0x40 DUP10 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x60 DUP10 ADD MSTORE DUP2 DUP2 PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x80 DUP10 ADD MSTORE PUSH1 0xA8 SHR AND ISZERO ISZERO PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP5 ADD SWAP1 PUSH2 0x172E JUMP JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x9 DUP2 LT ISZERO PUSH2 0x199 JUMPI PUSH2 0x8DE PUSH2 0x1702 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x44 CALLDATALOAD DUP3 DUP2 AND SWAP1 DUP2 SWAP1 SUB PUSH2 0x199 JUMPI PUSH1 0x64 CALLDATALOAD SWAP1 PUSH1 0xFF DUP3 AND DUP1 SWAP3 SUB PUSH2 0x199 JUMPI PUSH2 0x90C PUSH2 0x1986 JUMP JUMPDEST DUP5 ISZERO PUSH2 0xA36 JUMPI DUP1 ISZERO PUSH2 0x9FA JUMPI PUSH2 0x9ED PUSH1 0x40 SWAP4 PUSH1 0x4 DUP8 DUP8 PUSH32 0xD7E0FFE3C5E893C914E856817D8BFCF09E393C7926B6CF6FD55867404DB05CB1 SWAP9 DUP9 MLOAD SWAP5 PUSH2 0x950 DUP7 PUSH2 0x18A4 JUMP JUMPDEST AND SWAP7 DUP8 DUP6 MSTORE PUSH1 0x20 DUP6 ADD DUP8 DUP2 MSTORE DUP10 DUP7 ADD SWAP2 DUP3 MSTORE PUSH1 0x60 DUP7 ADD SWAP2 PUSH1 0x84 CALLDATALOAD DUP4 MSTORE PUSH1 0x80 DUP8 ADD SWAP4 PUSH1 0xA4 CALLDATALOAD DUP6 MSTORE DUP1 PUSH2 0x988 PUSH1 0xA0 DUP11 ADD SWAP8 PUSH1 0x1 DUP10 MSTORE PUSH2 0x178B JUMP JUMPDEST SWAP9 MLOAD AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA0 SHL DUP10 SLOAD AND OR DUP9 SSTORE PUSH1 0x1 DUP9 ADD SWAP3 MLOAD AND DUP3 SLOAD SWAP2 PUSH1 0xFF PUSH1 0xA0 SHL SWAP1 MLOAD PUSH1 0xA0 SHL AND SWAP2 PUSH11 0xFFFFFFFFFFFFFFFFFFFFFF PUSH1 0xA8 SHL AND OR OR SWAP1 SSTORE MLOAD PUSH1 0x2 DUP6 ADD SSTORE MLOAD PUSH1 0x3 DUP5 ADD SSTORE MLOAD ISZERO ISZERO SWAP2 ADD SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE LOG2 STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E76616C6964207072696365206F7261636C65 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E76616C696420746F6B656E2074797065 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH3 0x93A80 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 PUSH2 0xAD0 PUSH2 0xACA CALLDATASIZE PUSH2 0x1814 JUMP JUMPDEST SWAP1 PUSH2 0x1C0A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x3 PUSH1 0x24 CALLDATALOAD LT ISZERO PUSH2 0x199 JUMPI PUSH1 0xFF PUSH1 0x44 CALLDATALOAD AND PUSH1 0x44 CALLDATALOAD SUB PUSH2 0x199 JUMPI PUSH1 0x9 PUSH1 0x64 CALLDATALOAD LT ISZERO PUSH2 0x199 JUMPI PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x199 JUMPI PUSH2 0xB27 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x17A4 JUMP JUMPDEST SWAP1 PUSH1 0x2 PUSH1 0x1 SLOAD EQ PUSH2 0x103C JUMPI PUSH1 0x2 PUSH1 0x1 SSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH2 0xB5B PUSH1 0xFF PUSH1 0x3 DUP6 ADD SLOAD PUSH1 0xA0 SHR AND PUSH2 0x1A47 JUMP JUMPDEST PUSH1 0x2 DUP4 ADD SLOAD TIMESTAMP GT PUSH2 0x1001 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH1 0x0 KECCAK256 SLOAD AND PUSH2 0xFCC JUMPI PUSH1 0x1 PUSH1 0xFF PUSH1 0x44 CALLDATALOAD AND LT ISZERO DUP1 PUSH2 0xFBC JUMPI JUMPDEST ISZERO PUSH2 0xF77 JUMPI PUSH2 0xBB9 PUSH1 0xFF PUSH1 0x4 PUSH2 0xBB1 PUSH1 0x64 CALLDATALOAD PUSH2 0x178B JUMP JUMPDEST ADD SLOAD AND PUSH2 0x1A93 JUMP JUMPDEST PUSH1 0x3 PUSH2 0xBC6 PUSH1 0x64 CALLDATALOAD PUSH2 0x178B JUMP JUMPDEST ADD SLOAD PUSH1 0x84 CALLDATALOAD LT PUSH2 0xF3B JUMPI DUP1 PUSH2 0xEE7 JUMPI JUMPDEST POP POP PUSH1 0x64 CALLDATALOAD PUSH1 0x1 SUB PUSH2 0xDD9 JUMPI PUSH1 0x84 CALLDATALOAD CALLVALUE SUB PUSH2 0xD9D JUMPI JUMPDEST PUSH2 0xBFA PUSH1 0x84 CALLDATALOAD PUSH1 0x64 CALLDATALOAD PUSH2 0x1C0A JUMP JUMPDEST PUSH2 0xC15 PUSH1 0x2 PUSH2 0xC0A PUSH1 0x64 CALLDATALOAD PUSH2 0x178B JUMP JUMPDEST ADD SLOAD PUSH1 0x44 CALLDATALOAD DUP4 PUSH2 0x1C48 JUMP JUMPDEST SWAP2 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xC23 DUP3 PUSH2 0x186D JUMP JUMPDEST PUSH1 0x1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 PUSH2 0xC38 PUSH1 0x24 CALLDATALOAD DUP4 PUSH2 0x1A10 JUMP JUMPDEST PUSH1 0x40 DUP4 ADD SWAP2 PUSH1 0xFF PUSH1 0x44 CALLDATALOAD AND DUP4 MSTORE PUSH1 0x60 DUP5 ADD SWAP3 PUSH2 0xC56 PUSH1 0x64 CALLDATALOAD DUP6 PUSH2 0x1AED JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH1 0x80 DUP7 ADD MSTORE DUP7 PUSH1 0xA0 DUP7 ADD MSTORE TIMESTAMP PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 CALLER PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP2 PUSH2 0xCA0 DUP7 MLOAD ISZERO ISZERO DUP5 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD SWAP5 PUSH1 0x3 DUP7 LT ISZERO PUSH2 0x54F JUMPI PUSH3 0xFF0000 DUP4 SLOAD SWAP3 MLOAD PUSH1 0x10 SHL AND SWAP5 MLOAD SWAP1 PUSH1 0x9 DUP3 LT ISZERO PUSH2 0x54F JUMPI PUSH2 0xD34 SWAP7 PUSH1 0x8 SWAP7 PUSH1 0x3 SWAP5 PUSH2 0xFF00 PUSH4 0xFF000000 PUSH1 0xC0 SWAP7 PUSH1 0x18 SHL AND SWAP4 DUP11 SHL AND SWAP1 PUSH4 0xFFFFFF00 NOT AND OR OR OR DUP5 SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE PUSH1 0xA0 DUP2 ADD MLOAD PUSH1 0x2 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE PUSH1 0x4 PUSH1 0x24 CALLDATALOAD DUP3 ADD ADD PUSH2 0xD19 DUP7 DUP3 SLOAD PUSH2 0x1A03 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x7 DUP2 ADD PUSH2 0xD29 DUP2 SLOAD PUSH2 0x19DE JUMP JUMPDEST SWAP1 SSTORE ADD SWAP2 DUP3 SLOAD PUSH2 0x1A03 JUMP JUMPDEST SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 PUSH2 0xD46 DUP3 PUSH1 0x24 CALLDATALOAD PUSH2 0x172E JUMP JUMPDEST PUSH1 0xFF PUSH1 0x44 CALLDATALOAD AND PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0xD60 PUSH1 0x40 DUP4 ADD PUSH1 0x64 CALLDATALOAD PUSH2 0x173B JUMP JUMPDEST PUSH1 0x84 CALLDATALOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE CALLER SWAP1 PUSH32 0xF641C07FF9548B4D94093E2363E7BEAD14740019250D143F6E940989F4E91BB3 PUSH1 0xA0 PUSH1 0x4 CALLDATALOAD SWAP3 LOG3 PUSH1 0x1 DUP1 SSTORE STOP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x125B98DBDC9C9958DD0811551208185B5BDD5B9D PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0xE98 JUMPI PUSH1 0x0 PUSH1 0x20 PUSH2 0xDED PUSH1 0x64 CALLDATALOAD PUSH2 0x178B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDF9 DUP2 PUSH2 0x18A4 JUMP JUMPDEST PUSH1 0xA0 PUSH1 0xFF PUSH1 0x4 PUSH1 0x1 DUP1 DUP5 SHL SUB SWAP5 DUP3 DUP7 DUP3 SLOAD AND SWAP7 DUP8 DUP8 MSTORE PUSH1 0x1 DUP4 ADD SLOAD SWAP1 DUP2 AND DUP10 DUP9 ADD MSTORE DUP6 SHR AND PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x80 DUP7 ADD MSTORE ADD SLOAD AND ISZERO ISZERO SWAP2 ADD MSTORE PUSH1 0x64 PUSH1 0x40 MLOAD DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP4 MSTORE CALLER PUSH1 0x4 DUP5 ADD MSTORE ADDRESS PUSH1 0x24 DUP5 ADD MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x44 DUP5 ADD MSTORE GAS CALL DUP1 ISZERO PUSH2 0x739 JUMPI PUSH2 0xE79 JUMPI JUMPDEST POP PUSH2 0xBEC JUMP JUMPDEST PUSH2 0xE91 SWAP1 PUSH1 0x20 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x801 JUMPI PUSH2 0x7F7 DUP2 DUP4 PUSH2 0x18BF JUMP JUMPDEST POP DUP2 PUSH2 0xE73 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x455448206E6F7420657870656374656420666F7220455243323020746F6B656E PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST PUSH2 0xEF1 SWAP2 CALLER PUSH2 0x1CB9 JUMP JUMPDEST ISZERO PUSH2 0xEFD JUMPI DUP2 DUP1 PUSH2 0xBD6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x16 PUSH1 0x24 DUP3 ADD MSTORE PUSH22 0x24B73B30B634B21034B232B73A34BA3C90383937B7B3 PUSH1 0x51 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x5374616B6520616D6F756E7420746F6F206C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E76616C696420636F6E666964656E6365206C6576656C0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0xA PUSH1 0xFF PUSH1 0x44 CALLDATALOAD AND GT ISZERO PUSH2 0xB9A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x105B1C9958591E481D9BDD1959 PUSH1 0x9A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x159BDD1A5B99C81C195C9A5BD908195B991959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x10AF DUP3 PUSH2 0x1888 JUMP JUMPDEST PUSH2 0x10B8 DUP2 PUSH2 0x18E0 JUMP JUMPDEST DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x20 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP5 ADD MSTORE PUSH1 0xFF PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x60 DUP7 ADD MSTORE DUP2 DUP2 PUSH1 0xA0 SHR AND ISZERO ISZERO PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xA8 SHR AND ISZERO ISZERO PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 PUSH1 0x4 DUP3 ADD SWAP1 PUSH1 0x0 SWAP1 JUMPDEST PUSH1 0x3 DUP3 LT PUSH2 0x1292 JUMPI POP POP POP PUSH1 0x60 DUP3 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 DUP2 DUP2 LT DUP5 DUP3 GT OR PUSH2 0x643 JUMPI PUSH1 0x40 MSTORE PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x7 DUP2 ADD SLOAD PUSH1 0xE0 DUP6 ADD MSTORE PUSH1 0x8 DUP2 ADD SLOAD PUSH2 0x100 DUP6 ADD MSTORE PUSH1 0x9 ADD SLOAD PUSH2 0x1162 SWAP1 PUSH1 0xFF AND PUSH2 0x120 DUP6 ADD PUSH2 0x1A10 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x80 DUP3 ADD SWAP1 DUP2 GT DUP3 DUP3 LT OR PUSH2 0x643 JUMPI PUSH1 0x40 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH1 0x60 CALLDATASIZE PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0xC0 DUP4 ADD MLOAD MLOAD DUP2 MLOAD ISZERO PUSH2 0x127C JUMPI PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0xC0 DUP5 ADD MLOAD ADD MLOAD DUP2 MLOAD PUSH1 0x1 LT ISZERO PUSH2 0x127C JUMPI PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 PUSH1 0xC0 DUP5 ADD MLOAD ADD MLOAD DUP2 MLOAD PUSH1 0x2 LT ISZERO PUSH2 0x127C JUMPI PUSH1 0x60 DUP3 ADD MSTORE DUP3 MLOAD SWAP2 MLOAD SWAP3 PUSH1 0x40 DUP2 ADD MLOAD SWAP4 PUSH1 0x80 DUP3 ADD MLOAD ISZERO ISZERO SWAP1 PUSH1 0xA0 DUP4 ADD MLOAD ISZERO ISZERO PUSH1 0xE0 DUP5 ADD MLOAD SWAP3 PUSH2 0x120 PUSH2 0x100 DUP7 ADD MLOAD SWAP6 ADD MLOAD SWAP8 PUSH1 0x3 DUP10 LT ISZERO PUSH2 0x54F JUMPI PUSH2 0x1213 PUSH1 0x40 MLOAD SWAP9 PUSH2 0x120 DUP11 MSTORE PUSH2 0x120 DUP11 ADD SWAP1 PUSH2 0x17D4 JUMP JUMPDEST SWAP4 PUSH1 0x20 DUP10 ADD MSTORE PUSH1 0x40 DUP9 ADD MSTORE PUSH1 0x60 DUP8 ADD MSTORE PUSH1 0x80 DUP7 ADD MSTORE DUP5 DUP2 SUB PUSH1 0xA0 DUP7 ADD MSTORE PUSH1 0x20 DUP1 DUP6 MLOAD SWAP3 DUP4 DUP2 MSTORE ADD SWAP5 ADD SWAP1 PUSH1 0x0 JUMPDEST DUP2 DUP2 LT PUSH2 0x1266 JUMPI POP POP POP SWAP4 PUSH2 0x195 SWAP2 DUP5 SWAP6 PUSH1 0xC0 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD MSTORE PUSH2 0x100 DUP5 ADD SWAP1 PUSH2 0x172E JUMP JUMPDEST DUP3 MLOAD DUP7 MSTORE PUSH1 0x20 SWAP6 DUP7 ADD SWAP6 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 ADD PUSH2 0x1240 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x20 DUP2 SWAP3 DUP6 SLOAD DUP2 MSTORE ADD SWAP4 ADD SWAP2 ADD SWAP1 SWAP2 PUSH2 0x110C JUMP JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x9 DUP2 LT ISZERO PUSH2 0x199 JUMPI PUSH2 0xAD0 PUSH1 0x20 SWAP2 PUSH2 0x1B10 JUMP JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH2 0x12E9 PUSH2 0x1986 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP2 AND DUP3 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 DUP3 DUP1 LOG3 STOP JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x24 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 SUB PUSH2 0x199 JUMPI PUSH2 0xAD0 PUSH1 0x20 SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 PUSH1 0x4 CALLDATALOAD PUSH2 0x1C48 JUMP JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x9 DUP2 LT ISZERO PUSH2 0x199 JUMPI PUSH2 0x1389 PUSH1 0x4 SWAP2 PUSH2 0x1384 PUSH2 0x1986 JUMP JUMPDEST PUSH2 0x178B JUMP JUMPDEST ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH2 0x13AD PUSH2 0x1718 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x199 JUMPI PUSH1 0x20 SWAP2 PUSH2 0x13D2 PUSH2 0x13D8 SWAP3 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x17A4 JUMP JUMPDEST SWAP2 PUSH2 0x1CB9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD DUP1 PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0x3 DUP2 ADD SWAP1 DUP2 SLOAD PUSH2 0x141A PUSH1 0xFF DUP3 PUSH1 0xA0 SHR AND PUSH2 0x1A47 JUMP JUMPDEST PUSH1 0x2 DUP3 ADD SLOAD TIMESTAMP GT ISZERO PUSH2 0x1508 JUMPI PUSH1 0xA8 SHR PUSH1 0xFF AND PUSH2 0x14CF JUMPI PUSH32 0xBBBE9B42DDFA0692CD5F3DC618525DDE4B8FE438FE573F13B3FA9FB1287D6FCD SWAP2 PUSH1 0x60 SWAP2 PUSH1 0x0 SWAP2 PUSH1 0x4 DUP3 ADD SLOAD PUSH1 0x5 DUP4 ADD SLOAD DUP2 DUP2 GT PUSH2 0x14C3 JUMPI JUMPDEST POP PUSH1 0x6 DUP4 ADD SLOAD GT PUSH2 0x14BA JUMPI JUMPDEST PUSH2 0x1483 DUP4 PUSH1 0x9 DUP5 ADD PUSH2 0x1A2F JUMP JUMPDEST PUSH1 0x1 PUSH1 0xA8 SHL PUSH2 0xFFFF PUSH1 0xA0 SHL NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x8 PUSH1 0x7 DUP3 ADD SLOAD SWAP2 ADD SLOAD SWAP1 PUSH2 0x14AD PUSH1 0x40 MLOAD DUP1 SWAP5 PUSH2 0x172E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP3 ADD MSTORE LOG2 STOP JUMPDEST PUSH1 0x2 SWAP3 POP PUSH2 0x1476 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x1 SWAP3 DUP8 PUSH2 0x146A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x105B1C9958591E48199A5B985B1A5E9959 PUSH1 0x7A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x566F74696E6720706572696F64206E6F7420656E646564000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH2 0x1566 PUSH2 0x1986 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x2 SSTORE STOP JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x9 DUP2 LT ISZERO PUSH2 0x199 JUMPI PUSH2 0x1596 PUSH1 0xC0 SWAP2 PUSH2 0x178B JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 DUP3 SLOAD AND SWAP2 PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0xFF PUSH1 0x2 DUP4 ADD SLOAD SWAP2 DUP2 PUSH1 0x4 PUSH1 0x3 DUP7 ADD SLOAD SWAP6 ADD SLOAD AND SWAP5 PUSH1 0x40 MLOAD SWAP7 DUP8 MSTORE DUP2 AND PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0xA0 SHR AND PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x20 PUSH1 0x40 MLOAD PUSH1 0x3C DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x199 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH2 0x1638 PUSH2 0x1702 JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD PUSH1 0x0 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH2 0x1665 DUP3 PUSH2 0x186D JUMP JUMPDEST DUP1 SLOAD SWAP1 PUSH1 0xFF DUP3 AND ISZERO ISZERO DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 PUSH2 0x1685 PUSH1 0xFF DUP3 PUSH1 0x8 SHR AND DUP5 PUSH2 0x1A10 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD SWAP4 PUSH1 0xFF DUP3 PUSH1 0x10 SHR AND DUP6 MSTORE PUSH2 0x16A7 PUSH1 0xFF PUSH1 0x60 DUP4 ADD SWAP4 PUSH1 0x18 SHR AND DUP4 PUSH2 0x1AED JUMP JUMPDEST PUSH1 0x1 DUP4 ADD SLOAD SWAP3 PUSH1 0x80 DUP3 ADD SWAP4 DUP5 MSTORE PUSH1 0x3 PUSH1 0x2 DUP3 ADD SLOAD SWAP2 PUSH1 0xA0 DUP5 ADD SWAP3 DUP4 MSTORE ADD SLOAD SWAP2 PUSH1 0xC0 DUP2 ADD SWAP3 DUP4 MSTORE MLOAD ISZERO ISZERO SWAP5 MLOAD SWAP6 PUSH1 0x3 DUP8 LT ISZERO PUSH2 0x54F JUMPI PUSH1 0xFF SWAP1 MLOAD AND SWAP3 MLOAD PUSH1 0x9 DUP2 LT ISZERO PUSH2 0x54F JUMPI PUSH2 0x195 SWAP5 MLOAD SWAP2 MLOAD SWAP3 MLOAD SWAP4 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 DUP9 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x199 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x199 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x54F JUMPI MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x9 DUP3 LT ISZERO PUSH2 0x54F JUMPI MSTORE JUMP JUMPDEST SWAP4 PUSH1 0xFF PUSH2 0x177D SWAP3 SWAP10 SWAP9 SWAP8 SWAP5 PUSH2 0x176D PUSH1 0xC0 SWAP9 SWAP6 PUSH1 0xE0 DUP10 ADD SWAP13 ISZERO ISZERO DUP10 MSTORE PUSH1 0x20 DUP10 ADD SWAP1 PUSH2 0x172E JUMP JUMPDEST AND PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x60 DUP6 ADD SWAP1 PUSH2 0x173B JUMP JUMPDEST PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE ADD MSTORE JUMP JUMPDEST PUSH1 0x9 DUP2 LT ISZERO PUSH2 0x54F JUMPI PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 SWAP1 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x199 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x199 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x199 JUMPI JUMP JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x1800 JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x17DF JUMP JUMPDEST PUSH1 0x40 SWAP1 PUSH1 0x3 NOT ADD SLT PUSH2 0x199 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x9 DUP2 LT ISZERO PUSH2 0x199 JUMPI SWAP1 PUSH1 0x24 CALLDATALOAD SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x1863 JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x184D JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x1842 JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x643 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x140 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x643 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x643 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x643 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x18F4 DUP5 PUSH2 0x1833 JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x1963 JUMPI POP PUSH1 0x1 EQ PUSH2 0x1920 JUMPI JUMPDEST POP POP PUSH2 0x191E SWAP3 POP SUB DUP4 PUSH2 0x18BF JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x194B JUMPI POP POP PUSH2 0x191E SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1910 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x1933 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x191E SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x1910 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER SUB PUSH2 0x199A JUMPI JUMP JUMPDEST PUSH1 0x64 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x20 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x19ED JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 ADD DUP1 SWAP3 GT PUSH2 0x19ED JUMPI JUMP JUMPDEST PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x54F JUMPI MSTORE JUMP JUMPDEST DUP2 DUP2 MUL SWAP3 SWAP2 DUP2 ISZERO SWAP2 DUP5 DIV EQ OR ISZERO PUSH2 0x19ED JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x54F JUMPI PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST ISZERO PUSH2 0x1A4E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x436F6E74656E74206E6F7420666F756E64206F7220696E616374697665000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1A9A JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x151BDAD95B881B9BDD081CDD5C1C1BDC9D1959 PUSH1 0x6A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 DUP2 PUSH1 0x20 SWAP2 SUB SLT PUSH2 0x199 JUMPI MLOAD DUP1 ISZERO ISZERO DUP2 SUB PUSH2 0x199 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x9 DUP3 LT ISZERO PUSH2 0x54F JUMPI MSTORE JUMP JUMPDEST MLOAD SWAP1 PUSH10 0xFFFFFFFFFFFFFFFFFFFF DUP3 AND DUP3 SUB PUSH2 0x199 JUMPI JUMP JUMPDEST PUSH1 0xA0 PUSH1 0x4 SWAP2 PUSH2 0x1B24 PUSH1 0xFF DUP5 PUSH2 0xBB1 DUP5 PUSH2 0x178B JUMP JUMPDEST PUSH1 0x1 PUSH2 0x1B34 DUP2 DUP1 DUP6 SHL SUB SWAP3 PUSH2 0x178B JUMP JUMPDEST ADD SLOAD AND PUSH1 0x40 MLOAD SWAP3 DUP4 DUP1 SWAP3 PUSH4 0x3FABE5A3 PUSH1 0xE2 SHL DUP3 MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x739 JUMPI PUSH1 0x0 SWAP2 PUSH2 0x1B9B JUMPI JUMPDEST POP PUSH1 0x0 DUP2 SGT ISZERO PUSH2 0x1B66 JUMPI SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x496E76616C6964207072696365 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 PUSH1 0xA0 DUP3 RETURNDATASIZE DUP3 GT PUSH2 0x1BE2 JUMPI JUMPDEST DUP2 PUSH2 0x1BB4 PUSH1 0xA0 SWAP4 DUP4 PUSH2 0x18BF JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x1BDF JUMPI POP PUSH2 0x1BC6 DUP2 PUSH2 0x1AF9 JUMP JUMPDEST POP PUSH2 0x1BD8 PUSH1 0x80 PUSH1 0x20 DUP4 ADD MLOAD SWAP3 ADD PUSH2 0x1AF9 JUMP JUMPDEST POP CODESIZE PUSH2 0x1B59 JUMP JUMPDEST DUP1 REVERT JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1BA7 JUMP JUMPDEST DUP2 ISZERO PUSH2 0x1BF4 JUMPI DIV SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1C30 SWAP1 PUSH1 0xFF PUSH1 0x1 PUSH2 0x1C24 PUSH2 0x1C1E DUP5 PUSH2 0x1B10 JUMP JUMPDEST SWAP4 PUSH2 0x178B JUMP JUMPDEST ADD SLOAD PUSH1 0xA0 SHR AND SWAP3 PUSH2 0x1A1C JUMP JUMPDEST PUSH1 0x4D DUP3 GT PUSH2 0x19ED JUMPI PUSH2 0x1C45 SWAP2 PUSH1 0xA EXP SWAP1 PUSH2 0x1BEA JUMP JUMPDEST SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 DUP4 ADD PUSH1 0x0 DUP2 DUP6 GT PUSH2 0x1CA5 JUMPI POP DUP2 SHR SWAP1 DUP4 JUMPDEST DUP5 DUP4 LT PUSH2 0x1C85 JUMPI POP POP POP SWAP2 PUSH2 0x1C7C PUSH2 0x1C81 SWAP3 PUSH1 0xFF PUSH2 0x3E8 SWAP6 AND SWAP1 PUSH2 0x1A1C JUMP JUMPDEST PUSH2 0x1A1C JUMP JUMPDEST DIV SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP4 POP PUSH2 0x1C9C DUP5 PUSH2 0x1C97 DUP2 DUP5 PUSH2 0x1BEA JUMP JUMPDEST PUSH2 0x1A03 JUMP JUMPDEST DUP3 SHR SWAP2 SWAP1 PUSH2 0x1C5D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 SWAP3 DUP4 SHL PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH1 0x20 DUP1 DUP4 ADD SWAP2 DUP3 MSTORE PUSH1 0x14 DUP4 MSTORE SWAP6 SWAP7 DUP3 DUP5 ADD SWAP7 SWAP4 SWAP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP6 SWAP4 SWAP3 DUP7 DUP10 GT DUP5 DUP11 LT OR PUSH2 0x643 JUMPI DUP9 DUP9 MSTORE DUP4 MLOAD SWAP1 KECCAK256 SWAP1 PUSH1 0x2 SLOAD SWAP7 DUP11 GT PUSH2 0x643 JUMPI PUSH1 0x5 SWAP10 DUP1 DUP12 SHL SWAP1 PUSH2 0x1D20 DUP9 DUP4 ADD DUP13 PUSH2 0x18BF JUMP JUMPDEST DUP11 MSTORE DUP6 DUP6 ADD SWAP1 DUP3 ADD SWAP2 CALLDATASIZE DUP4 GT PUSH2 0x199 JUMPI DUP8 SWAP1 SWAP2 JUMPDEST DUP4 DUP4 LT PUSH2 0x1D98 JUMPI POP POP POP POP SWAP5 PUSH1 0x0 SWAP6 JUMPDEST DUP9 MLOAD DUP8 LT ISZERO PUSH2 0x1D8C JUMPI DUP7 DUP11 SHL DUP5 ADD DUP6 ADD MLOAD SWAP1 DUP9 PUSH1 0x0 DUP4 DUP4 LT ISZERO PUSH2 0x1D7C JUMPI POP POP PUSH1 0x0 MSTORE DUP6 MSTORE PUSH2 0x1D76 DUP8 PUSH1 0x0 KECCAK256 JUMPDEST SWAP7 PUSH2 0x19DE JUMP JUMPDEST SWAP6 PUSH2 0x1D44 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x1D76 SWAP4 DUP3 MSTORE DUP9 MSTORE KECCAK256 PUSH2 0x1D70 JUMP JUMPDEST EQ SWAP8 POP SWAP6 POP POP POP POP POP POP JUMP JUMPDEST DUP3 CALLDATALOAD DUP2 MSTORE SWAP2 DUP2 ADD SWAP2 DUP9 SWAP2 ADD PUSH2 0x1D34 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAA XOR EXP 0xB3 CALLDATASIZE 0xF6 PUSH3 0x417E21 DIV DUP2 JUMPDEST SWAP12 0xFC 0xAD 0xA8 SWAP12 0x5C ADDMOD 0x1F 0xFC DUP16 0xD2 0x5E PUSH26 0xD2B5C326BCF264736F6C63430008130033000000000000000000 ","sourceMap":"1151:16347:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1151:16347:4;;;;;;:::i;:::-;;;;;3468:65;1151:16347;;;;;;;;;;;;;;;;;;;;;;;3468:65;;1151:16347;3468:65;1151:16347;3468:65;;;1151:16347;3468:65;;1151:16347;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;1151:16347:4;;;;;;:::i;:::-;1063:62:0;;:::i;:::-;-1:-1:-1;;;;;1151:16347:4;;;;2162:22:0;;1151:16347:4;;;;;;;;;;;;;;2566:40:0;1151:16347:4;2566:40:0;;1151:16347:4;;;;-1:-1:-1;;;1151:16347:4;;;;;;;;;;;;;;;;;-1:-1:-1;;;1151:16347:4;;;;;;;;;;;;;-1:-1:-1;;1151:16347:4;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1151:16347:4;;;;-1:-1:-1;;;;;1151:16347:4;;;;;;;;;;;;;;-1:-1:-1;;;;;1151:16347:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4880:26;1151:16347;;3208:9;4967:35;;;:74;;;1151:16347;;;;5204:32;5109:16;1151:16347;;5109:16;:::i;:::-;1151:16347;;;;5204:15;:32;:::i;:::-;1151:16347;;;;;;;;;;-1:-1:-1;;;;;1151:16347:4;;;;;;;;;;;;5535:36;;1151:16347;;;5535:36;;1151:16347;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;1151:16347:4;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5204:15;1151:16347;5277:414;;1151:16347;5277:414;1151:16347;5277:414;;1151:16347;5433:10;1151:16347;5277:414;;1151:16347;;5277:414;;;1151:16347;;5277:414;;;1151:16347;5277:414;;;1151:16347;;;5277:414;;1151:16347;;5277:414;;;1151:16347;;5277:414;;;1151:16347;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1151:16347:4;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5277:414;;1151:16347;;;;;;5277:414;;1151:16347;;;;;;;;;;;;;;5277:414;;1151:16347;;;;;;;;5277:414;;;1151:16347;;;5277:414;1151:16347;;;;;;5277:414;;;1151:16347;;;;;;;;;;;;;;;;5277:414;;;1151:16347;;;;;;;;-1:-1:-1;;1151:16347:4;5277:414;;1151:16347;;;;;5277:414;;;1151:16347;;;;;5277:414;;1151:16347;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5433:10;5715:65;5433:10;1151:16347;;;;;;;;;;;;;;;5715:65;;;;1151:16347;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1151:16347:4;;;;;;;;;;;;;;;;;-1:-1:-1;;1151:16347:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1151:16347:4;;;;;-1:-1:-1;1151:16347:4;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1151:16347:4;;;;;;;;;;;;;;;;;;;;4967:74;5006:35;3293:6;5006:35;;;4967:74;;1151:16347;;;-1:-1:-1;;;1151:16347:4;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1063:62:0;;;:::i;:::-;1151:16347:4;;;;;;16835:13;16822:26;;16835:13;;1151:16347;;;;;;;;;;;;;;16864:33;;;;;16818:246;16864:33;;;;1151:16347;16864:33;1151:16347;;;;;;;;;16864:33;;;;;16818:246;16957:26;1151:16347;16957:26;;:::i;:::-;1151:16347;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;16835:13;1151:16347;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16997:56;;1151:16347;16997:56;;1151:16347;;;;;16997:56;;;;;;;;1151:16347;16997:56;;;1151:16347;16997:56;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;1151:16347;;;;;;-1:-1:-1;;1151:16347:4;;;;;;;;3415:47;1151:16347;;;;;;3415:47;;;:::i;:::-;;1151:16347;;3415:47;;1151:16347;3415:47;;;;1151:16347;3415:47;1151:16347;3415:47;;1151:16347;;3415:47;;;1151:16347;3415:47;;;;;;1151:16347;3415:47;;1151:16347;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1151:16347:4;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1151:16347:4;;;;;;;;;;;;;;;;;;;;;;;1063:62:0;;:::i;:::-;10533:27:4;;1151:16347;;10601:25;;1151:16347;;;;;;;;10972:48;1151:16347;;;;;;;:::i;:::-;;;;;;;10699:249;;1151:16347;;;10699:249;;;1151:16347;;;;10699:249;;1151:16347;;;;;;10699:249;;1151:16347;;;;;10699:249;10670:26;1151:16347;10699:249;;1151:16347;;;;10670:26;:::i;:::-;1151:16347;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10972:48;1151:16347;;;;-1:-1:-1;;;1151:16347:4;;;;;;;;;;;;-1:-1:-1;;;1151:16347:4;;;;;;;;;;-1:-1:-1;;;1151:16347:4;;;;;;;;;;;;-1:-1:-1;;;1151:16347:4;;;;;;;;;;;;;-1:-1:-1;;1151:16347:4;;;;;;;3293:6;1151:16347;;;;;;;;;-1:-1:-1;;1151:16347:4;;;;;;;;-1:-1:-1;;;;;1151:16347:4;;;;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;1151:16347:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1151:16347:4;;;;;;;;;;;:::i;:::-;;1759:1:1;1151:16347:4;;2468:19:1;1759:1;;;1151:16347:4;;;;;;6517:8;1151:16347;;;;;6554:16;6546:58;1151:16347;;6554:16;;1151:16347;;;;6546:58;:::i;:::-;1759:1:1;6641:22:4;;1151:16347;6622:15;:41;1151:16347;;;;;;6706:9;1151:16347;;;;;6727:10;1151:16347;;;;;;;;;;;;;;;;;6783:15;;:35;;;1151:16347;;;;6857:67;1151:16347;;6865:26;1151:16347;;6865:26;:::i;:::-;:35;1151:16347;;6857:67;:::i;:::-;1151:16347;6957:26;1151:16347;;6957:26;:::i;:::-;:41;1151:16347;;;6942:56;1151:16347;;7098:22;7094:131;;1151:16347;-1:-1:-1;;1151:16347:4;;;7279:26;1151:16347;;;;7329:9;:24;1151:16347;;7275:371;7718:36;1151:16347;;;;7718:36;:::i;:::-;7865:60;1759:1:1;7790:26:4;1151:16347;;7790:26;:::i;:::-;:42;1151:16347;;;7865:60;;:::i;:::-;1151:16347;;;;;;;:::i;:::-;;;;;8002:260;;1151:16347;8002:260;1151:16347;;8002:260;;:::i;:::-;1151:16347;8002:260;;1151:16347;;;;;;;;8002:260;;1151:16347;8002:260;1151:16347;;8002:260;;:::i;:::-;1151:16347;;;8002:260;;1151:16347;8002:260;1151:16347;8002:260;;1151:16347;6622:15;1151:16347;8002:260;;1151:16347;;;;;6706:9;1151:16347;;;;;6727:10;1151:16347;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8419:33;1151:16347;;;;;;;;;;;;;;;;;;;;;;;;;;8002:260;;1151:16347;;;;;;8002:260;;1151:16347;1759:1:1;1151:16347:4;;;8002:260;1151:16347;;;;;;;;;;8318:55;1151:16347;;;8318:55;:::i;:::-;1151:16347;;8383:24;;;:26;1151:16347;;8383:26;:::i;:::-;1151:16347;;8419:21;1151:16347;;;8419:33;:::i;:::-;1151:16347;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;6727:10;1151:16347;8476:92;1151:16347;;;8476:92;;1151:16347;;;;;;;-1:-1:-1;;;1151:16347:4;;;;;;;;;;;;-1:-1:-1;;;1151:16347:4;;;;;;;7275:371;7417:9;1151:16347;;;;7512:26;1151:16347;;7512:26;:::i;:::-;1151:16347;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1759:1:1;1151:16347:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7552:83;;6727:10;1151:16347;7552:83;;1151:16347;7616:4;1151:16347;;;;;;;;;;7552:83;;;;;;;;7275:371;;;;7552:83;;;1151:16347;7552:83;1151:16347;7552:83;;;;;;;:::i;:::-;;;;;1151:16347;;;-1:-1:-1;;;1151:16347:4;;;;;;;;;;;;;;;;;-1:-1:-1;;;1151:16347:4;;;;;;;7094:131;7144:43;6727:10;;7144:43;:::i;:::-;1151:16347;;;7094:131;;;;1151:16347;;;-1:-1:-1;;;1151:16347:4;;;;;;;;;;;;-1:-1:-1;;;1151:16347:4;;;;;;;;;;-1:-1:-1;;;1151:16347:4;;;;;;;;;;;;-1:-1:-1;;;1151:16347:4;;;;;;;;;;-1:-1:-1;;;1151:16347:4;;;;;;;;;;;;;;;;;;;;6783:35;1151:16347;6816:2;1151:16347;;;;6802:16;;6783:35;;1151:16347;;;-1:-1:-1;;;1151:16347:4;;;;;;;;;;;;-1:-1:-1;;;1151:16347:4;;;;;;;;;;-1:-1:-1;;;1151:16347:4;;;;;;;;;;;;-1:-1:-1;;;1151:16347:4;;;;;;;1759:1:1;1151:16347:4;;-1:-1:-1;;;1759:1:1;;1151:16347:4;;1759:1:1;;;;1151:16347:4;1759:1:1;;1151:16347:4;1759:1:1;1151:16347:4;;;1759:1:1;1151:16347:4;;1759:1:1;1151:16347:4;;;;;;-1:-1:-1;;1151:16347:4;;;;;;;;14385:8;1151:16347;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1151:16347:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14490:24;1151:16347;;;;;;;;;;;;;;14545:24;1151:16347;;;;;;;;;;;;;;;;;14600:24;1151:16347;;;;;;;;;;;;;14667:16;;1151:16347;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1151:16347:4;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1151:16347:4;;;;1063:62:0;;:::i;:::-;1151:16347:4;;;-1:-1:-1;;;;;;1151:16347:4;;;;-1:-1:-1;;;;;1151:16347:4;2566:40:0;1151:16347:4;;2566:40:0;1151:16347:4;;;;;;;-1:-1:-1;;1151:16347:4;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;1151:16347:4;;;;;;;;;;;;16509:26;1151:16347;1063:62:0;;;:::i;:::-;16509:26:4;:::i;:::-;:35;1151:16347;;-1:-1:-1;;1151:16347:4;;;;;;;;;;-1:-1:-1;;1151:16347:4;;;;;;:::i;:::-;;;-1:-1:-1;;;;;1151:16347:4;;;;;;;;;;;;;;:::i;:::-;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;1151:16347:4;;;;;;;;;8845:8;1151:16347;;;;;;8882:16;;1151:16347;;;8874:58;1151:16347;;;;;8874:58;:::i;:::-;8968:22;;;1151:16347;8950:15;:40;1151:16347;;;;;;;;;9709:90;9133:44;1151:16347;9133:44;1151:16347;9206:24;1151:16347;9206:24;;1151:16347;8845:8;1151:16347;;;9266:38;;;9262:166;;1151:16347;;;;;;9450:38;9446:114;;1151:16347;9578:37;:21;;;;:37;:::i;:::-;1151:16347;;;;;;;;;;;;;9777:21;9751:24;;;1151:16347;9777:21;;1151:16347;;;;;;;;:::i;:::-;;;;;;;;;9709:90;1151:16347;9446:114;8968:22;;-1:-1:-1;9446:114:4;;9262:166;9331:34;;;1151:16347;9379:38;9262:166;;;1151:16347;;;-1:-1:-1;;;1151:16347:4;;;;;;;;;;;;-1:-1:-1;;;1151:16347:4;;;;;;;;;;-1:-1:-1;;;1151:16347:4;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1151:16347:4;;;;1063:62:0;;:::i;:::-;1151:16347:4;;16292:26;1151:16347;;;;;;;;-1:-1:-1;;1151:16347:4;;;;;;;;;;;;3355:54;1151:16347;3355:54;;:::i;:::-;1151:16347;;;;;;;;;3355:54;1151:16347;3355:54;;1151:16347;;3355:54;;;1151:16347;3355:54;;1151:16347;;3355:54;;1151:16347;3355:54;;1151:16347;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1151:16347:4;;;;;2996:25;1151:16347;;;;;;;;;;;;;-1:-1:-1;;1151:16347:4;;;;;;;3208:9;1151:16347;;;;;;;;;-1:-1:-1;;1151:16347:4;;;;;;:::i;:::-;;;;;15749:9;1151:16347;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;1151:16347:4;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;1151:16347:4;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;1151:16347:4;;;;;-1:-1:-1;1151:16347:4;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1151:16347:4;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;-1:-1:-1;1151:16347:4;;;;;;;;;-1:-1:-1;1151:16347:4;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1151:16347:4;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1151:16347:4;;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;1151:16347:4;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;1151:16347:4;;;;;;;:::o;:::-;;;;;;-1:-1:-1;1151:16347:4;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;1151:16347:4;;;;-1:-1:-1;1151:16347:4;;-1:-1:-1;1151:16347:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1151:16347:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1359:130:0;1273:6;1151:16347:4;-1:-1:-1;;;;;1151:16347:4;719:10:2;1422:23:0;1151:16347:4;;1359:130:0:o;1151:16347:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1151:16347:4;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;1151:16347:4;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;1151:16347:4;;;;;;;;;;;;-1:-1:-1;;;1151:16347:4;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;:::o;11254:453::-;1151:16347;11349:15;11254:453;11341:67;1151:16347;11349:26;;;;:::i;11341:67::-;1151:16347;11496:26;1151:16347;;;;;11496:26;;:::i;:::-;:38;1151:16347;;;;;;;;;;;11588:27;;;;;;;;;-1:-1:-1;11588:27:4;;;11254:453;11633:9;-1:-1:-1;11633:9:4;;1151:16347;;;11254:453;:::o;1151:16347::-;;;-1:-1:-1;;;1151:16347:4;;;11349:15;1151:16347;;;;;;;;-1:-1:-1;;;1151:16347:4;;;;;;;11588:27;;1151:16347;11588:27;;;;;;;;;1151:16347;11588:27;;;:::i;:::-;;;1151:16347;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;11588:27;;;1151:16347;;;11588:27;;;-1:-1:-1;11588:27:4;;1151:16347;;;;;;;:::o;:::-;;;;;;;;;;;;11910:371;12227:22;11910:371;1151:16347;12092:35;:26;12033:27;;;:::i;:::-;12092:26;;:::i;:::-;:35;1151:16347;;;;12227:22;;:::i;:::-;1151:16347;;;;;12226:48;1151:16347;;;12226:48;;:::i;:::-;11910:371;:::o;12567:356::-;;17382:1;1151:16347;;;-1:-1:-1;1151:16347:4;;;;;;;;17398:5;;17420;;;;;;1151:16347;;;;12870:20;:38;1151:16347;;12912:4;1151:16347;;12870:20;;:::i;:::-;:38;:::i;:::-;1151:16347;12567:356;:::o;17413:77::-;17441:5;;;;17465:9;17441:5;17465;;;;:::i;:::-;:9;:::i;:::-;1151:16347;;;;17413:77;;1151:16347;-1:-1:-1;;;1151:16347:4;;;;;;;;13127:254;1151:16347;;;;;;;-1:-1:-1;;1151:16347:4;13285:22;;;;1151:16347;;;13285:22;;;13127:254;;1151:16347;;;;;;-1:-1:-1;;;;;1151:16347:4;;;;;;;;;;;;;;;;;13275:33;;1151:16347;13357:10;1151:16347;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;2036:27:3;;;;2078:13;-1:-1:-1;2073:116:3;2111:3;1151:16347:4;;2093:16:3;;;;;1151:16347:4;;;;;;;;;9294:51:3;-1:-1:-1;9294:5:3;;;;;;9494:119;;-1:-1:-1;9494:119:3;;;2111:3;9494:119;-1:-1:-1;9494:119:3;9294:51;2111:3;;:::i;:::-;2078:13;;;9294:51;9494:119;;2111:3;9494:119;;;;;;9294:51;;2093:16;1270:33;;-1:-1:-1;2093:16:3;-1:-1:-1;;;;;;13127:254:4:o;1151:16347::-;;;;;;;;;;;;;"},"methodIdentifiers":{"MAX_VOTING_PERIOD()":"a64e024a","MIN_VOTING_PERIOD()":"215809ca","addToken(uint8,address,address,uint8,uint256,uint256)":"b53d568a","calculateVotingWeight(uint256,uint8,uint256)":"714d985f","contentCounter()":"e6a9aba3","contents(uint256)":"b5ecf912","convertToUSD(uint8,uint256)":"877baeaa","deactivateToken(uint8)":"67c95bde","emergencyWithdraw(uint8,uint256)":"ccf62c3d","finalizeVoting(uint256)":"49444831","getContentInfo(uint256)":"7509c330","getTokenPriceUSD(uint8)":"7354c7e3","getUserVote(uint256,address)":"03c7881a","isVerifiedIdentity(address,bytes32[])":"63025f6d","merkleRoot()":"2eb4a7ab","owner()":"8da5cb5b","renounceOwnership()":"715018a6","submitContent(string,uint256)":"dad3fc13","submitVote(uint256,uint8,uint8,uint8,uint256,bytes32[])":"782631a0","supportedTokens(uint8)":"3f572d36","transferOwnership(address)":"f2fde38b","updateMerkleRoot(bytes32)":"4783f0ef","userVotes(uint256,address)":"fe5b3e3b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_merkleRoot\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"contentId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votingDeadline\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"}],\"name\":\"ContentSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"enum ProofChainVoting.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"priceOracle\",\"type\":\"address\"}],\"name\":\"TokenAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"contentId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"voter\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum ProofChainVoting.VoteOption\",\"name\":\"vote\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"confidence\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"enum ProofChainVoting.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"votingWeight\",\"type\":\"uint256\"}],\"name\":\"VoteSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"contentId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"enum ProofChainVoting.VoteOption\",\"name\":\"winningOption\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalParticipants\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"totalUSDValue\",\"type\":\"uint256\"}],\"name\":\"VotingFinalized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_VOTING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_VOTING_PERIOD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ProofChainVoting.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"bonusMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minStakeAmount\",\"type\":\"uint256\"}],\"name\":\"addToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usdValue\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"confidence\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"bonusMultiplier\",\"type\":\"uint256\"}],\"name\":\"calculateVotingWeight\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contentCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"contents\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"submissionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingDeadline\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isFinalized\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"participantCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalUSDValue\",\"type\":\"uint256\"},{\"internalType\":\"enum ProofChainVoting.VoteOption\",\"name\":\"winningOption\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ProofChainVoting.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"convertToUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ProofChainVoting.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"}],\"name\":\"deactivateToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ProofChainVoting.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"contentId\",\"type\":\"uint256\"}],\"name\":\"finalizeVoting\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"contentId\",\"type\":\"uint256\"}],\"name\":\"getContentInfo\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"submissionTime\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingDeadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isFinalized\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"voteDistribution\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"participantCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalUSDValue\",\"type\":\"uint256\"},{\"internalType\":\"enum ProofChainVoting.VoteOption\",\"name\":\"winningOption\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ProofChainVoting.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"}],\"name\":\"getTokenPriceUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"contentId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserVote\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"enum ProofChainVoting.VoteOption\",\"name\":\"vote\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"confidence\",\"type\":\"uint8\"},{\"internalType\":\"enum ProofChainVoting.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"isVerifiedIdentity\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"merkleRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"ipfsHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"votingDuration\",\"type\":\"uint256\"}],\"name\":\"submitContent\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"contentId\",\"type\":\"uint256\"},{\"internalType\":\"enum ProofChainVoting.VoteOption\",\"name\":\"vote\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"confidence\",\"type\":\"uint8\"},{\"internalType\":\"enum ProofChainVoting.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProof\",\"type\":\"bytes32[]\"}],\"name\":\"submitVote\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum ProofChainVoting.TokenType\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"supportedTokens\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"priceOracle\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"decimals\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"bonusMultiplier\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minStakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"newMerkleRoot\",\"type\":\"bytes32\"}],\"name\":\"updateMerkleRoot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"userVotes\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"hasVoted\",\"type\":\"bool\"},{\"internalType\":\"enum ProofChainVoting.VoteOption\",\"name\":\"vote\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"confidence\",\"type\":\"uint8\"},{\"internalType\":\"enum ProofChainVoting.TokenType\",\"name\":\"tokenType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"stakeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"votingWeight\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"A simplified voting contract with token staking and quadratic voting Features: - Simple direct voting (no commit-reveal) - Multiple token support (ETH, ERC20 tokens) - Quadratic voting based on USD value - Identity verification via Merkle proofs - Configurable voting periods (1 minute to 7 days)\",\"kind\":\"dev\",\"methods\":{\"addToken(uint8,address,address,uint8,uint256,uint256)\":{\"details\":\"Add a new supported token\",\"params\":{\"bonusMultiplier\":\"Bonus multiplier for this token (1000 = 100%)\",\"decimals\":\"Number of decimals for the token\",\"minStakeAmount\":\"Minimum stake amount for this token\",\"priceOracle\":\"Chainlink price oracle address\",\"tokenAddress\":\"Contract address of the token (0x0 for ETH)\",\"tokenType\":\"Type of token to add\"}},\"calculateVotingWeight(uint256,uint8,uint256)\":{\"details\":\"Calculate voting weight using quadratic formula\",\"params\":{\"bonusMultiplier\":\"Bonus multiplier for token type\",\"confidence\":\"Confidence level (1-10)\",\"usdValue\":\"USD value of stake\"},\"returns\":{\"_0\":\"weight Calculated voting weight\"}},\"convertToUSD(uint8,uint256)\":{\"details\":\"Convert token amount to USD value\",\"params\":{\"tokenAmount\":\"Amount of tokens\",\"tokenType\":\"Type of token\"},\"returns\":{\"_0\":\"usdValue USD value with 8 decimals\"}},\"deactivateToken(uint8)\":{\"details\":\"Deactivate a token\",\"params\":{\"tokenType\":\"Type of token to deactivate\"}},\"emergencyWithdraw(uint8,uint256)\":{\"details\":\"Emergency withdraw function for owner\",\"params\":{\"amount\":\"Amount to withdraw\",\"tokenType\":\"Type of token to withdraw\"}},\"finalizeVoting(uint256)\":{\"details\":\"Finalize voting for a content item\",\"params\":{\"contentId\":\"ID of the content to finalize\"}},\"getContentInfo(uint256)\":{\"details\":\"Get complete content information\",\"params\":{\"contentId\":\"ID of the content\"},\"returns\":{\"ipfsHash\":\"IPFS hash of the content\",\"isActive\":\"Whether voting is active\",\"isFinalized\":\"Whether voting is finalized\",\"participantCount\":\"Total number of voters\",\"submissionTime\":\"When content was submitted\",\"totalUSDValue\":\"Total USD value staked\",\"voteDistribution\":\"Array of vote counts [REJECT, APPROVE, ABSTAIN]\",\"votingDeadline\":\"When voting ends\",\"winningOption\":\"Winning vote option\"}},\"getTokenPriceUSD(uint8)\":{\"details\":\"Get token price in USD from Chainlink oracle\",\"params\":{\"tokenType\":\"Type of token\"},\"returns\":{\"_0\":\"price Price in USD with 8 decimals\"}},\"getUserVote(uint256,address)\":{\"details\":\"Get user's vote for specific content\",\"params\":{\"contentId\":\"ID of the content\",\"user\":\"User address\"},\"returns\":{\"confidence\":\"Confidence level (1-10)\",\"hasVoted\":\"Whether user has voted\",\"stakeAmount\":\"Amount staked\",\"timestamp\":\"When vote was cast\",\"tokenType\":\"Token used for staking\",\"vote\":\"User's vote choice\",\"votingWeight\":\"Calculated voting weight\"}},\"isVerifiedIdentity(address,bytes32[])\":{\"details\":\"Verify user identity using Merkle proof\",\"params\":{\"merkleProof\":\"Merkle proof\",\"user\":\"User address\"},\"returns\":{\"_0\":\"isVerified Whether identity is verified\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"submitContent(string,uint256)\":{\"details\":\"Submit content for voting\",\"params\":{\"ipfsHash\":\"IPFS hash of the content\",\"votingDuration\":\"Duration of voting period in seconds\"},\"returns\":{\"_0\":\"contentId The ID of the submitted content\"}},\"submitVote(uint256,uint8,uint8,uint8,uint256,bytes32[])\":{\"details\":\"Submit a vote on content\",\"params\":{\"confidence\":\"Confidence level (1-10)\",\"contentId\":\"ID of the content to vote on\",\"merkleProof\":\"Merkle proof for identity verification\",\"stakeAmount\":\"Amount of tokens to stake\",\"tokenType\":\"Type of token to stake\",\"vote\":\"Vote choice (REJECT, APPROVE, ABSTAIN)\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateMerkleRoot(bytes32)\":{\"details\":\"Update merkle root for identity verification\",\"params\":{\"newMerkleRoot\":\"New merkle root\"}}},\"title\":\"ProofChainVoting\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ProofChainVoting.sol\":\"ProofChainVoting\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/cryptography/MerkleProof.sol\":{\"keccak256\":\"0xcf688741f79f4838d5301dcf72d0af9eff11bbab6ab0bb112ad144c7fb672dac\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85d9c87a481fe99fd28a146c205da0867ef7e1b7edbe0036abc86d2e64eb1f04\",\"dweb:/ipfs/QmR7m1zWQNfZHUKTtqnjoCjCBbNFcjCxV27rxf6iMfhVtG\"]},\"contracts/ProofChainVoting.sol\":{\"keccak256\":\"0x95b8ad31551cf46ec9e4eb2a38880049a96ec11ac24f1ca45c259422dd01726a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54ef511bdcfc1d09975943fce6e6421a39bbe060ab3b8284b5e9e8407807cfc1\",\"dweb:/ipfs/QmaUavmqT9ASLBbL4RVbiXVHY5vigp2LmKZ895fHFhiPNV\"]}},\"version\":1}"}}}}}